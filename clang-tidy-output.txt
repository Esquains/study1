Traceback (most recent call last):
  File "/home/eltonpinto/local/miniconda3/envs/pytorch/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/eltonpinto/local/miniconda3/envs/pytorch/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/data/users/eltonpinto/pytorch/tools/linter/clang_tidy/__main__.py", line 207, in <module>
    main()
  File "/data/users/eltonpinto/pytorch/tools/linter/clang_tidy/__main__.py", line 203, in main
    raise RuntimeError("Your code is not clang-tidy clean!")
RuntimeError: Your code is not clang-tidy clean!
Running:  git ls-files torch/csrc/jit/jit_log.cpp
Filtering with these file patterns: Patterns(positive=[re.compile('^.*\\.c(c|pp)?$')], negative=[re.compile('(?s:torch/csrc/jit/passes/onnx/helper\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/passes/onnx/shape_type_inference\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/serialization/onnx\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/serialization/export\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/serialization/import\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/serialization/import_legacy\\.cpp)\\Z'), re.compile('(?s:torch/csrc/onnx/init\\.cpp)\\Z'), re.compile('(?s:torch/csrc/cuda/nccl\\..*)\\Z'), re.compile('(?s:torch/csrc/cuda/python_nccl\\.cpp)\\Z'), re.compile('(?s:torch/csrc/autograd/FunctionsManual\\.cpp)\\Z'), re.compile('(?s:torch/csrc/generic/.*\\.cpp)\\Z'), re.compile('(?s:torch/csrc/jit/codegen/cuda/runtime/.*)\\Z'), re.compile('(?s:torch/csrc/deploy/interpreter/interpreter\\.cpp)\\Z'), re.compile('(?s:torch/csrc/deploy/interpreter/interpreter\\.h)\\Z'), re.compile('(?s:torch/csrc/deploy/interpreter/interpreter_impl\\.h)\\Z'), re.compile('(?s:torch/csrc/deploy/interpreter/test_main\\.cpp)\\Z')])
Processing 1 clang-tidy jobs
Running:  /data/users/eltonpinto/pytorch/.clang-tidy-bin/clang-tidy -p build -config {"InheritParentConfig": true, "Checks": " bugprone-*, -bugprone-forward-declaration-namespace, -bugprone-macro-parentheses, -bugprone-lambda-function-name, -bugprone-reserved-identifier, cppcoreguidelines-*, -cppcoreguidelines-avoid-magic-numbers, -cppcoreguidelines-interfaces-global-init, -cppcoreguidelines-macro-usage, -cppcoreguidelines-owning-memory, -cppcoreguidelines-pro-bounds-array-to-pointer-decay, -cppcoreguidelines-pro-bounds-constant-array-index, -cppcoreguidelines-pro-bounds-pointer-arithmetic, -cppcoreguidelines-pro-type-cstyle-cast, -cppcoreguidelines-pro-type-reinterpret-cast, -cppcoreguidelines-pro-type-static-cast-downcast, -cppcoreguidelines-pro-type-union-access, -cppcoreguidelines-pro-type-vararg, -cppcoreguidelines-special-member-functions, -facebook-hte-RelativeInclude, hicpp-exception-baseclass, hicpp-avoid-goto, modernize-*, -modernize-concat-nested-namespaces, -modernize-return-braced-init-list, -modernize-use-auto, -modernize-use-default-member-init, -modernize-use-using, -modernize-use-trailing-return-type, performance-*, -performance-noexcept-move-constructor, -performance-unnecessary-value-param, ", "HeaderFilterRegex": "torch/csrc/.*", "AnalyzeTemporaryDtors": false, "WarningsAsErrors": "*", "CheckOptions": null} --extra-arg -I/usr/lib/llvm-11/include/openmp --extra-arg -I/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8 --extra-arg -I/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux --extra-arg -I/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward --extra-arg -I/usr/local/include --extra-arg -I/usr/lib64/clang/11.0.0/include --extra-arg -I/usr/include torch/csrc/jit/jit_log.cpp
Warning detected in torch/csrc/jit/jit_log.cpp
torch/csrc/jit/jit_log.cpp:1:5: error: variable 'x' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables,-warnings-as-errors]
