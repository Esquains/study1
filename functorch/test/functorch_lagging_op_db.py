# Copyright (c) Facebook, Inc. and its affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
from torch.testing._internal.common_methods_invocations import op_db

# Generated from codegen/gen_functorch_op_db.py via
# python codegen/gen_functorch_lagging_op_db.py > test/functorch_lagging_op_db.py
#
# People add new OpInfos to PyTorch all the time.
# We want them to be able to add OpInfos without breaking our CI.
# To achieve this, we keep our OpInfo library behind that of Pytorch's and
# we periodically update our OpInfo library by regenerating this file
_functorch_lagging_meta = {
    ('permute', ''),
    ('acosh', ''),
    ('remainder', ''),
    ('linalg.cholesky_ex', ''),
    ('sinh', ''),
    ('mvlgamma', 'mvlgamma_p_5'),
    ('quantile', ''),
    ('matmul', ''),
    ('bitwise_not', ''),
    ('index_select', ''),
    ('conj_physical', ''),
    ('std', ''),
    ('triu', ''),
    ('fft.fftn', ''),
    ('fmin', ''),
    ('fft.irfftn', ''),
    ('linalg.eigh', ''),
    ('linalg.qr', ''),
    ('zero_', ''),
    ('outer', ''),
    ('fmod', 'autodiffed'),
    ('imag', ''),
    ('linalg.eigvals', ''),
    ('linalg.solve', ''),
    ('cdist', ''),
    ('floor', ''),
    ('eig', ''),
    ('max', 'reduction_with_dim'),
    ('einsum', ''),
    ('real', ''),
    ('roll', ''),
    ('special.entr', ''),
    ('logit', ''),
    ('fft.rfft', ''),
    ('__rmod__', ''),
    ('addmm', ''),
    ('fft.rfftn', ''),
    ('amax', ''),
    ('linalg.matrix_rank', ''),
    ('view_as', ''),
    ('expm1', ''),
    ('linalg.matrix_rank', 'hermitian'),
    ('special.i0e', ''),
    ('clone', ''),
    ('bmm', ''),
    ('inverse', ''),
    ('complex', ''),
    ('take', ''),
    ('conj', ''),
    ('min', 'reduction_with_dim'),
    ('linalg.matrix_power', ''),
    ('where', ''),
    ('max', 'reduction_no_dim'),
    ('mv', ''),
    ('nn.functional.gelu', ''),
    ('svd', ''),
    ('polygamma', 'polygamma_n_3'),
    ('dstack', ''),
    ('logcumsumexp', ''),
    ('angle', ''),
    ('lerp', ''),
    ('norm', 'inf'),
    ('asinh', ''),
    ('div', 'floor_rounding'),
    ('var', ''),
    ('exp', ''),
    ('select', ''),
    ('t', ''),
    ('matrix_exp', ''),
    ('tensor_split', ''),
    ('linalg.svdvals', ''),
    ('expand', ''),
    ('sin', ''),
    ('to_sparse', ''),
    ('flip', ''),
    ('nn.functional.hardshrink', ''),
    ('true_divide', ''),
    ('view', ''),
    ('special.erfcx', ''),
    ('std_mean', ''),
    ('polygamma', 'polygamma_n_1'),
    ('special.i1', ''),
    ('linalg.svd', ''),
    ('log', ''),
    ('signbit', ''),
    ('logsumexp', ''),
    ('abs', ''),
    ('ceil', ''),
    ('linalg.cond', ''),
    ('dot', ''),
    ('flipud', ''),
    ('addmm', 'decomposed'),
    ('linalg.eigvalsh', ''),
    ('round', ''),
    ('xlogy', ''),
    ('neg', ''),
    ('logdet', ''),
    ('gather', ''),
    ('positive', ''),
    ('reciprocal', ''),
    ('linalg.norm', ''),
    ('squeeze', ''),
    ('addcdiv', ''),
    ('fft.fft', ''),
    ('ge', ''),
    ('digamma', ''),
    ('mvlgamma', 'mvlgamma_p_1'),
    ('nanquantile', ''),
    ('reshape_as', ''),
    ('tensordot', ''),
    ('reshape', ''),
    ('prod', ''),
    ('inner', ''),
    ('sub', ''),
    ('argmin', ''),
    ('view_as_real', ''),
    ('resolve_conj', ''),
    ('sgn', ''),
    ('index_put', ''),
    ('maximum', ''),
    ('split_with_sizes', ''),
    ('clamp', 'scalar'),
    ('addmv', ''),
    ('special.i1e', ''),
    ('pow', ''),
    ('kthvalue', ''),
    ('atanh', ''),
    ('cross', ''),
    ('polygamma', 'polygamma_n_2'),
    ('renorm', ''),
    ('linalg.eig', ''),
    ('ravel', ''),
    ('lu_unpack', ''),
    ('triangular_solve', ''),
    ('sort', ''),
    ('chunk', ''),
    ('frexp', ''),
    ('trunc', ''),
    ('pinverse', ''),
    ('lu', ''),
    ('qr', ''),
    ('floor_divide', ''),
    ('stack', ''),
    ('mul', ''),
    ('log_softmax', 'dtype'),
    ('special.ndtr', ''),
    ('__rmatmul__', ''),
    ('ne', ''),
    ('square', ''),
    ('polygamma', 'polygamma_n_4'),
    ('index_add', ''),
    ('scatter', ''),
    ('histogram', ''),
    ('tile', ''),
    ('unsqueeze', ''),
    ('erf', ''),
    ('__getitem__', ''),
    ('var_mean', ''),
    ('sinc', ''),
    ('linalg.vector_norm', ''),
    ('log10', ''),
    ('logaddexp2', ''),
    ('broadcast_to', ''),
    ('mm', ''),
    ('cumsum', ''),
    ('cumprod', ''),
    ('rsub', 'rsub_tensor'),
    ('scatter_add', ''),
    ('mvlgamma', 'mvlgamma_p_3'),
    ('vstack', ''),
    ('logical_not', ''),
    ('copysign', ''),
    ('__rpow__', ''),
    ('mean', ''),
    ('tan', ''),
    ('diff', ''),
    ('dist', ''),
    ('__rmul__', ''),
    ('addr', ''),
    ('fft.ihfft', ''),
    ('argmax', ''),
    ('split', ''),
    ('lgamma', ''),
    ('cos', ''),
    ('fmax', ''),
    ('i0', ''),
    ('linalg.pinv', ''),
    ('linalg.pinv', 'hermitian'),
    ('polar', ''),
    ('baddbmm', ''),
    ('index_fill', ''),
    ('index_copy', ''),
    ('linalg.multi_dot', ''),
    ('asin', ''),
    ('tanh', ''),
    ('tril', ''),
    ('hstack', ''),
    ('deg2rad', ''),
    ('fliplr', ''),
    ('sign', ''),
    ('nn.functional.relu6', ''),
    ('addbmm', ''),
    ('fill_', ''),
    ('min', 'binary'),
    ('linalg.inv', ''),
    ('rsub', 'rsub_scalar'),
    ('linalg.householder_product', ''),
    ('norm', 'nuc'),
    ('minimum', ''),
    ('atan2', ''),
    ('gt', ''),
    ('fft.hfft', ''),
    ('erfinv', ''),
    ('sum', ''),
    ('view_as_complex', ''),
    ('nansum', ''),
    ('fft.ifft', ''),
    ('split', 'list_args'),
    ('expand_as', ''),
    ('log_softmax', ''),
    ('norm', ''),
    ('rad2deg', ''),
    ('fft.irfft', ''),
    ('linalg.lstsq', ''),
    ('masked_select', ''),
    ('amin', ''),
    ('topk', ''),
    ('gradient', ''),
    ('hypot', ''),
    ('vdot', ''),
    ('linalg.matrix_norm', ''),
    ('transpose', ''),
    ('norm', 'fro'),
    ('nanmedian', ''),
    ('erfc', ''),
    ('vsplit', ''),
    ('cholesky', ''),
    ('div', 'trunc_rounding'),
    ('log1p', ''),
    ('cholesky_inverse', ''),
    ('cummin', ''),
    ('mode', ''),
    ('linalg.inv_ex', ''),
    ('linalg.cholesky', ''),
    ('take_along_dim', ''),
    ('movedim', ''),
    ('lt', ''),
    ('__radd__', ''),
    ('diag_embed', ''),
    ('geqrf', ''),
    ('float_power', ''),
    ('__rdiv__', ''),
    ('narrow', ''),
    ('diag', ''),
    ('__rsub__', ''),
    ('add', ''),
    ('fmod', ''),
    ('polygamma', 'polygamma_n_0'),
    ('sigmoid', ''),
    ('solve', ''),
    ('remainder', 'autodiffed'),
    ('nan_to_num', ''),
    ('contiguous', ''),
    ('addcmul', ''),
    ('min', 'reduction_no_dim'),
    ('put', ''),
    ('nn.functional.leaky_relu', ''),
    ('repeat', ''),
    ('frac', ''),
    ('exp2', ''),
    ('le', ''),
    ('masked_scatter', ''),
    ('kron', ''),
    ('special.xlog1py', ''),
    ('resize_as_', ''),
    ('rsqrt', ''),
    ('median', ''),
    ('hsplit', ''),
    ('cummax', ''),
    ('sqrt', ''),
    ('nn.functional.hardtanh', ''),
    ('symeig', ''),
    ('fft.ifftn', ''),
    ('eq', ''),
    ('masked_fill', ''),
    ('linalg.det', ''),
    ('msort', ''),
    ('linalg.slogdet', ''),
    ('unfold', ''),
    ('diagonal', ''),
    ('atan', ''),
    ('logaddexp', ''),
    ('nn.functional.hardswish', ''),
    ('acos', ''),
    ('special.ndtri', ''),
    ('log2', ''),
    ('cosh', ''),
    ('clamp', ''),
    ('isin', ''),
    ('ormqr', ''),
    ('dsplit', ''),
    ('rot90', ''),
    ('trace', ''),
    ('div', 'no_rounding_mode'),
    ('resize_', ''),
    ('max', 'binary'),
}


def in_functorch_lagging_op_db(opinfo):
    return (opinfo.name, opinfo.variant_test_name) in _functorch_lagging_meta


functorch_lagging_op_db = [
    opinfo for opinfo in op_db if in_functorch_lagging_op_db(opinfo)
]
