# WARNING: DO NOT EDIT THIS FILE DIRECTLY!!!
# See the README.md in this directory.

# IMPORTANT: To update Docker image version, please first update
# https://github.com/pytorch/ossci-job-dsl/blob/master/src/main/groovy/ossci/pytorch/DockerVersion.groovy and
# https://github.com/pytorch/ossci-job-dsl/blob/master/src/main/groovy/ossci/caffe2/DockerVersion.groovy,
# and then update DOCKER_IMAGE_VERSION at the top of the following files:
# * cimodel/data/pytorch_build_definitions.py
# * cimodel/data/caffe2_build_definitions.py
# And the inline copies of the variable in
# * verbatim-sources/job-specs-custom.yml
#   (grep for DOCKER_IMAGE)

version: 2.1

docker_config_defaults: &docker_config_defaults
  user: jenkins
  aws_auth:
    # This IAM user only allows read-write access to ECR
    aws_access_key_id: ${CIRCLECI_AWS_ACCESS_KEY_FOR_ECR_READ_WRITE_V4}
    aws_secret_access_key: ${CIRCLECI_AWS_SECRET_KEY_FOR_ECR_READ_WRITE_V4}
commands:
  # NB: This command must be run as the first command in a job. It
  # attaches the workspace at ~/workspace; this workspace is generated
  # by the setup job. Note that ~/workspace is not the default working
  # directory (that's ~/project).
  should_run_job:
    description: "Test if the job should run or not"
    steps:
      - attach_workspace:
          name: Attaching workspace
          at: ~/workspace
      # - run:
      #     name: Should run job
      #     no_output_timeout: "2m"
      #     command: ~/workspace/.circleci/scripts/should_run_job.sh

  # This system setup script is meant to run before the CI-related scripts, e.g.,
  # installing Git client, checking out code, setting up CI env, and
  # building/testing.
  setup_linux_system_environment:
    steps:
      - run:
          name: Set Up System Environment
          no_output_timeout: "1h"
          command: ~/workspace/.circleci/scripts/setup_linux_system_environment.sh

  setup_ci_environment:
    steps:
      - run:
          name: Set Up CI Environment After attach_workspace
          no_output_timeout: "1h"
          command: ~/workspace/.circleci/scripts/setup_ci_environment.sh

  brew_update:
    description: "Update Homebrew and install base formulae"
    steps:
      - run:
          name: Update Homebrew
          no_output_timeout: "10m"
          command: |
            set -ex

            # Update repositories manually.
            # Running `brew update` produces a comparison between the
            # current checkout and the updated checkout, which takes a
            # very long time because the existing checkout is 2y old.
            for path in $(find /usr/local/Homebrew -type d -name .git)
            do
            cd $path/..
            git fetch --depth=1 origin
            git reset --hard origin/master
            done

            export HOMEBREW_NO_AUTO_UPDATE=1

            # Install expect and moreutils so that we can call `unbuffer` and `ts`.
            # moreutils installs a `parallel` executable by default, which conflicts
            # with the executable from the GNU `parallel`, so we must unlink GNU
            # `parallel` first, and relink it afterwards.
            brew unlink parallel
            brew install moreutils
            brew link parallel --overwrite
            brew install expect

  brew_install:
    description: "Install Homebrew formulae"
    parameters:
      formulae:
        type: string
        default: ""
    steps:
      - run:
          name: Install << parameters.formulae >>
          no_output_timeout: "10m"
          command: |
            set -ex
            export HOMEBREW_NO_AUTO_UPDATE=1
            brew install << parameters.formulae >>

  run_brew_for_macos_build:
    steps:
      - brew_update
      - brew_install:
          formulae: libomp

  run_brew_for_ios_build:
    steps:
      - brew_update
      - brew_install:
          formulae: libtool

##############################################################################
# Binary build (nightlies nightly build) defaults
# The binary builds use the docker executor b/c at time of writing the machine
# executor is limited to only two cores and is painfully slow (4.5+ hours per
# GPU build). But the docker executor cannot be run with --runtime=nvidia, and
# so the binary test/upload jobs must run on a machine executor. The package
# built in the build job is persisted to the workspace, which the test jobs
# expect. The test jobs just run a few quick smoke tests (very similar to the
# second-round-user-facing smoke tests above) and then upload the binaries to
# their final locations. The upload part requires credentials that should only
# be available to org-members.
#
# binary_checkout MUST be run before other commands here. This is because the
# other commands are written in .circleci/scripts/*.sh , so the pytorch source
# code must be downloaded on the machine before they can be run. We cannot
# inline all the code into this file, since that would cause the yaml size to
# explode past 4 MB (all the code in the command section is just copy-pasted to
# everywhere in the .circleci/config.yml file where it appears).
##############################################################################

# Checks out the Pytorch and Builder repos (always both of them), and places
# them in the right place depending on what executor we're running on. We curl
# our .sh file from the interweb to avoid yaml size bloat. Note that many jobs
# do not need both the pytorch and builder repos, so this is a little wasteful
# (smoke tests and upload jobs do not need the pytorch repo).
binary_checkout: &binary_checkout
  name: Checkout pytorch/builder repo
  command: ~/workspace/.circleci/scripts/binary_checkout.sh

# Parses circleci arguments in a consistent way, essentially routing to the
# correct pythonXgccXcudaXos build we want
binary_populate_env: &binary_populate_env
  name: Set up binary env variables
  command: ~/workspace/.circleci/scripts/binary_populate_env.sh

binary_install_miniconda: &binary_install_miniconda
  name: Install miniconda
  no_output_timeout: "1h"
  command: ~/workspace/.circleci/scripts/binary_install_miniconda.sh

# This section is used in the binary_test and smoke_test jobs. It expects
# 'binary_populate_env' to have populated /home/circleci/project/env and it
# expects another section to populate /home/circleci/project/ci_test_script.sh
# with the code to run in the docker
binary_run_in_docker: &binary_run_in_docker
  name: Run in docker
  # This step only runs on circleci linux machine executors that themselves
  # need to start docker images
  command: ~/workspace/.circleci/scripts/binary_run_in_docker.sh
##############################################################################
# Build parameters
##############################################################################
pytorch_params: &pytorch_params
  parameters:
    build_environment:
      type: string
      default: ""
    docker_image:
      type: string
      default: ""
    resource_class:
      type: string
      default: "large"
    use_cuda_docker_runtime:
      type: string
      default: ""
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>
    DOCKER_IMAGE: << parameters.docker_image >>
    USE_CUDA_DOCKER_RUNTIME: << parameters.use_cuda_docker_runtime >>
  resource_class: << parameters.resource_class >>

pytorch_ios_params: &pytorch_ios_params
  parameters:
    build_environment:
      type: string
      default: ""
    ios_arch:
      type: string
      default: ""
    ios_platform:
      type: string
      default: ""
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>
    IOS_ARCH: << parameters.ios_arch >>
    IOS_PLATFORM: << parameters.ios_platform >>




caffe2_params: &caffe2_params
  parameters:
    build_environment:
      type: string
      default: ""
    build_ios:
      type: string
      default: ""
    docker_image:
      type: string
      default: ""
    use_cuda_docker_runtime:
      type: string
      default: ""
    build_only:
      type: string
      default: ""
    resource_class:
      type: string
      default: "large"
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>
    BUILD_IOS: << parameters.build_ios >>
    USE_CUDA_DOCKER_RUNTIME: << parameters.use_cuda_docker_runtime >>
    DOCKER_IMAGE: << parameters.docker_image >>
    BUILD_ONLY: << parameters.build_only >>
  resource_class: << parameters.resource_class >>

binary_linux_build_params: &binary_linux_build_params
  parameters:
    build_environment:
      type: string
      default: ""
    docker_image:
      type: string
      default: ""
    libtorch_variant:
      type: string
      default: ""
    resource_class:
      type: string
      default: "2xlarge+"
    sha1:
      type: string
      default: ""
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>
    LIBTORCH_VARIANT: << parameters.libtorch_variant >>
    ANACONDA_USER: pytorch
    SHA1: << parameters.sha1 >>
  resource_class: << parameters.resource_class >>
  docker:
    - image: << parameters.docker_image >>

binary_linux_test_upload_params: &binary_linux_test_upload_params
  parameters:
    build_environment:
      type: string
      default: ""
    docker_image:
      type: string
      default: ""
    libtorch_variant:
      type: string
      default: ""
    resource_class:
      type: string
      default: "medium"
    use_cuda_docker_runtime:
      type: string
      default: ""
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>
    DOCKER_IMAGE: << parameters.docker_image >>
    USE_CUDA_DOCKER_RUNTIME: << parameters.use_cuda_docker_runtime >>
    LIBTORCH_VARIANT: << parameters.libtorch_variant >>
  resource_class: << parameters.resource_class >>

binary_mac_params: &binary_mac_params
  parameters:
    build_environment:
      type: string
      default: ""
  environment:
    BUILD_ENVIRONMENT: << parameters.build_environment >>

##############################################################################
# Job specs
##############################################################################
jobs:
  pytorch_linux_build:
    <<: *pytorch_params
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - checkout
    - setup_ci_environment
    - run:
        name: Build
        no_output_timeout: "1h"
        command: |
          set -e
          # Pull Docker image and run build
          echo "DOCKER_IMAGE: "${DOCKER_IMAGE}
          time docker pull ${DOCKER_IMAGE} >/dev/null
          export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${DOCKER_IMAGE})

          # TODO We may want to move the rebase logic to a separate step after checkout
          # Rebase to master only if in xenial_py3_6_gcc5_4 case
          if [[ "${CIRCLE_BRANCH}" != "master" && "${BUILD_ENVIRONMENT}" == *"gcc5"* ]]; then
            echo "Merge master branch into $CIRCLE_BRANCH before build in environment $BUILD_ENVIRONMENT"
            set -x
            git config --global user.email "circleci.ossci@gmail.com"
            git config --global user.name "CircleCI"
            git config remote.origin.url https://github.com/pytorch/pytorch.git
            git config --add remote.origin.fetch +refs/heads/master:refs/remotes/origin/master
            git fetch --tags --progress https://github.com/pytorch/pytorch.git +refs/heads/master:refs/remotes/origin/master --depth=100 --quiet
            export GIT_MERGE_TARGET=`git log -n 1 --pretty=format:"%H" origin/master`
            echo "GIT_MERGE_TARGET: " ${GIT_MERGE_TARGET}
            export GIT_COMMIT=${CIRCLE_SHA1}
            echo "GIT_COMMIT: " ${GIT_COMMIT}
            git checkout -f ${GIT_COMMIT}
            git reset --hard ${GIT_COMMIT}
            git merge --allow-unrelated-histories --no-edit --no-ff ${GIT_MERGE_TARGET}
            set +x
          else
            echo "Do NOT merge master branch into $CIRCLE_BRANCH in environment $BUILD_ENVIRONMENT"
          fi

          git submodule sync && git submodule update -q --init --recursive

          docker cp /home/circleci/project/. $id:/var/lib/jenkins/workspace

          if [[ ${BUILD_ENVIRONMENT} == *"paralleltbb"* ]]; then
            export PARALLEL_FLAGS="export ATEN_THREADING=TBB USE_TBB=1 "
          elif [[ ${BUILD_ENVIRONMENT} == *"parallelnative"* ]]; then
            export PARALLEL_FLAGS="export ATEN_THREADING=NATIVE "
          fi
          echo "Parallel backend flags: "${PARALLEL_FLAGS}

          export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo '"$PARALLEL_FLAGS"' && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && .jenkins/pytorch/build.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'

          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          # Push intermediate Docker image for next phase to use
          if [ -z "${BUILD_ONLY}" ]; then
            # Note [Special build images]
            # The xla build uses the same docker image as
            # pytorch-linux-trusty-py3.6-gcc5.4-build. In the push step, we have to
            # distinguish between them so the test can pick up the correct image.
            output_image=${DOCKER_IMAGE}-${CIRCLE_SHA1}
            if [[ ${BUILD_ENVIRONMENT} == *"xla"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-xla
            elif [[ ${BUILD_ENVIRONMENT} == *"libtorch"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-libtorch
            elif [[ ${BUILD_ENVIRONMENT} == *"android-ndk-r19c-x86_64"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-android-x86_64
            elif [[ ${BUILD_ENVIRONMENT} == *"android-ndk-r19c-arm-v7a"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-android-arm-v7a
            elif [[ ${BUILD_ENVIRONMENT} == *"android-ndk-r19c-arm-v8a"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-android-arm-v8a
            elif [[ ${BUILD_ENVIRONMENT} == *"android-ndk-r19c-x86_32"* ]]; then
              export COMMIT_DOCKER_IMAGE=$output_image-android-x86_32
            else
              export COMMIT_DOCKER_IMAGE=$output_image
            fi
            docker commit "$id" ${COMMIT_DOCKER_IMAGE}
            time docker push ${COMMIT_DOCKER_IMAGE}
          fi

  pytorch_linux_test:
    <<: *pytorch_params
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        name: Test
        no_output_timeout: "90m"
        command: |
          set -e
          # See Note [Special build images]
          output_image=${DOCKER_IMAGE}-${CIRCLE_SHA1}
          if [[ ${BUILD_ENVIRONMENT} == *"xla"* ]]; then
            export COMMIT_DOCKER_IMAGE=$output_image-xla
          elif [[ ${BUILD_ENVIRONMENT} == *"libtorch"* ]]; then
            export COMMIT_DOCKER_IMAGE=$output_image-libtorch
          else
            export COMMIT_DOCKER_IMAGE=$output_image
          fi
          echo "DOCKER_IMAGE: "${COMMIT_DOCKER_IMAGE}

          if [[ ${BUILD_ENVIRONMENT} == *"paralleltbb"* ]]; then
            export PARALLEL_FLAGS="export ATEN_THREADING=TBB USE_TBB=1 "
          elif [[ ${BUILD_ENVIRONMENT} == *"parallelnative"* ]]; then
            export PARALLEL_FLAGS="export ATEN_THREADING=NATIVE "
          fi
          echo "Parallel backend flags: "${PARALLEL_FLAGS}

          time docker pull ${COMMIT_DOCKER_IMAGE} >/dev/null

          if [ -n "${USE_CUDA_DOCKER_RUNTIME}" ]; then
            export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --runtime=nvidia -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})
          else
            export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})
          fi

          retrieve_test_reports() {
            echo "retrieving test reports"
            docker cp $id:/var/lib/jenkins/workspace/test/test-reports ./ || echo 'No test reports found!'
          }
          trap "retrieve_test_reports" ERR

          if [[ ${BUILD_ENVIRONMENT} == *"multigpu"* ]]; then
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "${PARALLEL_FLAGS}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && .jenkins/pytorch/multigpu-test.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
          else
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "${PARALLEL_FLAGS}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && .jenkins/pytorch/test.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
          fi
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          retrieve_test_reports
    - store_test_results:
        path: test-reports
  caffe2_linux_build:
    <<: *caffe2_params
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - checkout
    - setup_ci_environment
    - run:
        name: Build
        no_output_timeout: "1h"
        command: |
          set -e
          cat >/home/circleci/project/ci_build_script.sh \<<EOL
          # =================== The following code will be executed inside Docker container ===================
          set -ex
          export BUILD_ENVIRONMENT="$BUILD_ENVIRONMENT"

          # Reinitialize submodules
          git submodule sync && git submodule update -q --init --recursive

          # conda must be added to the path for Anaconda builds (this location must be
          # the same as that in install_anaconda.sh used to build the docker image)
          if [[ "${BUILD_ENVIRONMENT}" == conda* ]]; then
            export PATH=/opt/conda/bin:$PATH
            sudo chown -R jenkins:jenkins '/opt/conda'
          fi

          # Build
          ./.jenkins/caffe2/build.sh

          # Show sccache stats if it is running
          if pgrep sccache > /dev/null; then
            sccache --show-stats
          fi
          # =================== The above code will be executed inside Docker container ===================
          EOL
          chmod +x /home/circleci/project/ci_build_script.sh

          echo "DOCKER_IMAGE: "${DOCKER_IMAGE}
          time docker pull ${DOCKER_IMAGE} >/dev/null
          export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${DOCKER_IMAGE})
          docker cp /home/circleci/project/. $id:/var/lib/jenkins/workspace

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && ./ci_build_script.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          # Push intermediate Docker image for next phase to use
          if [ -z "${BUILD_ONLY}" ]; then
            if [[ "$BUILD_ENVIRONMENT" == *cmake* ]]; then
              export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-cmake-${CIRCLE_SHA1}
            else
              export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-${CIRCLE_SHA1}
            fi
            docker commit "$id" ${COMMIT_DOCKER_IMAGE}
            time docker push ${COMMIT_DOCKER_IMAGE}
          fi

  caffe2_linux_test:
    <<: *caffe2_params
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        name: Test
        no_output_timeout: "1h"
        command: |
          set -e
          # TODO: merge this into Caffe2 test.sh
          cat >/home/circleci/project/ci_test_script.sh \<<EOL
          # =================== The following code will be executed inside Docker container ===================
          set -ex

          export BUILD_ENVIRONMENT="$BUILD_ENVIRONMENT"

          # libdc1394 (dependency of OpenCV) expects /dev/raw1394 to exist...
          sudo ln /dev/null /dev/raw1394

          # conda must be added to the path for Anaconda builds (this location must be
          # the same as that in install_anaconda.sh used to build the docker image)
          if [[ "${BUILD_ENVIRONMENT}" == conda* ]]; then
            export PATH=/opt/conda/bin:$PATH
          fi

          # Upgrade SSL module to avoid old SSL warnings
          pip -q install --user --upgrade pyOpenSSL ndg-httpsclient pyasn1

          pip -q install --user -b /tmp/pip_install_onnx "file:///var/lib/jenkins/workspace/third_party/onnx#egg=onnx"

          # Build
          ./.jenkins/caffe2/test.sh

          # Remove benign core dumps.
          # These are tests for signal handling (including SIGABRT).
          rm -f ./crash/core.fatal_signal_as.*
          rm -f ./crash/core.logging_test.*
          # =================== The above code will be executed inside Docker container ===================
          EOL
          chmod +x /home/circleci/project/ci_test_script.sh

          if [[ "$BUILD_ENVIRONMENT" == *cmake* ]]; then
            export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-cmake-${CIRCLE_SHA1}
          else
            export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-${CIRCLE_SHA1}
          fi
          echo "DOCKER_IMAGE: "${COMMIT_DOCKER_IMAGE}
          time docker pull ${COMMIT_DOCKER_IMAGE} >/dev/null
          if [ -n "${USE_CUDA_DOCKER_RUNTIME}" ]; then
            export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --runtime=nvidia -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})
          else
            export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})
          fi
          docker cp /home/circleci/project/. "$id:/var/lib/jenkins/workspace"

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && ./ci_test_script.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

  caffe2_macos_build:
    <<: *caffe2_params
    macos:
      xcode: "9.4.1"
    steps:
      # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
      - should_run_job
      - checkout
      - run_brew_for_macos_build
      - run:
          name: Build
          no_output_timeout: "1h"
          command: |
            set -e

            export IN_CIRCLECI=1

            brew install cmake

            # Reinitialize submodules
            git submodule sync && git submodule update -q --init --recursive

            # Reinitialize path (see man page for path_helper(8))
            eval `/usr/libexec/path_helper -s`

            export PATH=/usr/local/opt/python/libexec/bin:/usr/local/bin:$PATH

            # Install Anaconda if we need to
            if [ -n "${CAFFE2_USE_ANACONDA}" ]; then
              rm -rf ${TMPDIR}/anaconda
              curl --retry 3 -o ${TMPDIR}/conda.sh https://repo.continuum.io/miniconda/Miniconda${ANACONDA_VERSION}-latest-MacOSX-x86_64.sh
              chmod +x ${TMPDIR}/conda.sh
              /bin/bash ${TMPDIR}/conda.sh -b -p ${TMPDIR}/anaconda
              rm -f ${TMPDIR}/conda.sh
              export PATH="${TMPDIR}/anaconda/bin:${PATH}"
              source ${TMPDIR}/anaconda/bin/activate
            fi

            pip -q install numpy

            # Install sccache
            sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache --output /usr/local/bin/sccache
            sudo chmod +x /usr/local/bin/sccache
            export SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2

            # This IAM user allows write access to S3 bucket for sccache
            set +x
            export AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            export AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            set -x

            export SCCACHE_BIN=${PWD}/sccache_bin
            mkdir -p ${SCCACHE_BIN}
            if which sccache > /dev/null; then
              printf "#!/bin/sh\nexec sccache $(which clang++) \$*" > "${SCCACHE_BIN}/clang++"
              chmod a+x "${SCCACHE_BIN}/clang++"

              printf "#!/bin/sh\nexec sccache $(which clang) \$*" > "${SCCACHE_BIN}/clang"
              chmod a+x "${SCCACHE_BIN}/clang"

              export PATH="${SCCACHE_BIN}:$PATH"
            fi

            # Build
            if [ "${BUILD_IOS:-0}" -eq 1 ]; then
              unbuffer scripts/build_ios.sh 2>&1 | ts
            elif [ -n "${CAFFE2_USE_ANACONDA}" ]; then
              # All conda build logic should be in scripts/build_anaconda.sh
              unbuffer scripts/build_anaconda.sh 2>&1 | ts
            else
              unbuffer scripts/build_local.sh 2>&1 | ts
            fi

            # Show sccache stats if it is running
            if which sccache > /dev/null; then
              sccache --show-stats
            fi
  binary_linux_build:
    <<: *binary_linux_build_params
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_populate_env
    - run:
        name: Install unbuffer and ts
        command: |
            set -eux -o pipefail
            source /env
            OS_NAME=`awk -F= '/^NAME/{print $2}' /etc/os-release`
            if [[ "$OS_NAME" == *"CentOS Linux"* ]]; then
              retry yum -q -y install epel-release
              retry yum -q -y install expect moreutils
            elif [[ "$OS_NAME" == *"Ubuntu"* ]]; then
              retry apt-get update
              retry apt-get -y install expect moreutils
              retry conda install -y -c eumetsat expect
              retry conda install -y cmake
            fi
    - run:
        name: Update compiler to devtoolset7
        command: |
            set -eux -o pipefail
            source /env
            if [[ "$DESIRED_DEVTOOLSET" == 'devtoolset7' ]]; then
              source "/builder/update_compiler.sh"

              # Env variables are not persisted into the next step
              echo "export PATH=$PATH" >> /env
              echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> /env
            else
              echo "Not updating compiler"
            fi
    - run:
        name: Build
        no_output_timeout: "1h"
        command: |
            source "/pytorch/.circleci/scripts/binary_linux_build.sh"
    - run:
        name: Upload binary size
        no_output_timeout: "5m"
        command: |
            source /env
            cd /pytorch
            export COMMIT_TIME=$(git log --max-count=1 --format=%ct || echo 0)
            mv /tmp/upload_binary_size_to_scuba.py /pytorch/.circleci/scripts/upload_binary_size_to_scuba.py
            pip3 install requests
            SCRIBE_GRAPHQL_ACCESS_TOKEN=${SCRIBE_GRAPHQL_ACCESS_TOKEN} \
            CIRCLE_SHA1=${SHA1} python3 /pytorch/.circleci/scripts/upload_binary_size_to_scuba.py || exit 0
    - persist_to_workspace:
        root: /
        paths: final_pkgs

    # This should really just be another step of the binary_linux_build job above.
    # This isn't possible right now b/c the build job uses the docker executor
    # (otherwise they'd be really really slow) but this one uses the macine
    # executor (b/c we have to run the docker with --runtime=nvidia and we can't do
    # that on the docker executor)
  binary_linux_test:
    <<: *binary_linux_test_upload_params
    machine:
        image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    # TODO: We shouldn't attach the workspace multiple times
    - attach_workspace:
        at: /home/circleci/project
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_populate_env
    - run:
        name: Prepare test code
        no_output_timeout: "1h"
        command: ~/workspace/.circleci/scripts/binary_linux_test.sh
    - run:
        <<: *binary_run_in_docker

  binary_linux_upload:
    <<: *binary_linux_test_upload_params
    machine:
        image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - setup_ci_environment
    - attach_workspace:
        at: /home/circleci/project
    - run:
        <<: *binary_populate_env
    - run:
        <<: *binary_install_miniconda
    - run:
        name: Upload
        no_output_timeout: "1h"
        command: ~/workspace/.circleci/scripts/binary_linux_upload.sh

  # Nighlty build smoke tests defaults
  # These are the second-round smoke tests. These make sure that the binaries are
  # correct from a user perspective, testing that they exist from the cloud are
  # are runnable. Note that the pytorch repo is never cloned into these jobs
  ##############################################################################
  smoke_linux_test:
    <<: *binary_linux_test_upload_params
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - attach_workspace:
        at: ~/workspace
    - attach_workspace:
        at: /home/circleci/project
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_populate_env
    - run:
        name: Test
        no_output_timeout: "1h"
        command: |
          set -ex
          cat >/home/circleci/project/ci_test_script.sh \<<EOL
          # The following code will be executed inside Docker container
          set -eux -o pipefail
          /builder/smoke_test.sh
          # The above code will be executed inside Docker container
          EOL
    - run:
        <<: *binary_run_in_docker

  smoke_mac_test:
    <<: *binary_linux_test_upload_params
    macos:
      xcode: "9.4.1"
    steps:
      - attach_workspace:
          at: ~/workspace
      - attach_workspace: # TODO - we can `cp` from ~/workspace
          at: /Users/distiller/project
      - run:
          <<: *binary_checkout
      - run:
          <<: *binary_populate_env
      - brew_update
      - run:
          <<: *binary_install_miniconda
      - run:
          name: Build
          no_output_timeout: "1h"
          command: |
            set -ex
            source "/Users/distiller/project/env"
            export "PATH=$workdir/miniconda/bin:$PATH"
            # TODO unbuffer and ts this, but it breaks cause miniconda overwrites
            # tclsh. But unbuffer and ts aren't that important so they're just
            # disabled for now
            ./builder/smoke_test.sh

  binary_mac_build:
    <<: *binary_mac_params
    macos:
      xcode: "9.4.1"
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_populate_env
    - brew_update
    - run:
        <<: *binary_install_miniconda

    - run:
        name: Build
        no_output_timeout: "1h"
        command: |
          # Do not set -u here; there is some problem with CircleCI
          # variable expansion with PROMPT_COMMAND
          set -ex -o pipefail
          script="/Users/distiller/project/pytorch/.circleci/scripts/binary_macos_build.sh"
          cat "$script"
          source "$script"

    - run:
        name: Test
        no_output_timeout: "1h"
        command: |
          # Do not set -u here; there is some problem with CircleCI
          # variable expansion with PROMPT_COMMAND
          set -ex -o pipefail
          script="/Users/distiller/project/pytorch/.circleci/scripts/binary_macos_test.sh"
          cat "$script"
          source "$script"

    - persist_to_workspace:
        root: /Users/distiller/project
        paths: final_pkgs

  binary_mac_upload: &binary_mac_upload
    <<: *binary_mac_params
    macos:
      xcode: "9.4.1"
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_populate_env
    - brew_update
    - run:
        <<: *binary_install_miniconda
    - attach_workspace: # TODO - we can `cp` from ~/workspace
        at: /Users/distiller/project
    - run:
        name: Upload
        no_output_timeout: "10m"
        command: |
          script="/Users/distiller/project/pytorch/.circleci/scripts/binary_macos_upload.sh"
          cat "$script"
          source "$script"

  binary_ios_build:
    <<: *pytorch_ios_params
    macos:
      xcode: "10.2.1"
    steps:
    - attach_workspace:
        at: ~/workspace
    - should_run_job
    - checkout
    - run_brew_for_ios_build
    - run:
        name: Build
        no_output_timeout: "1h"
        command: |
          script="/Users/distiller/project/.circleci/scripts/binary_ios_build.sh"
          cat "$script"
          source "$script"
    - run:
        name: Test
        no_output_timeout: "30m"
        command: |
          script="/Users/distiller/project/.circleci/scripts/binary_ios_test.sh"
          cat "$script"
          source "$script"
    - persist_to_workspace:
        root: /Users/distiller/workspace/
        paths: ios

  binary_ios_upload:
    <<: *pytorch_ios_params
    macos:
      xcode: "10.2.1"
    steps:
    - attach_workspace:
        at: ~/workspace
    - should_run_job
    - checkout
    - run_brew_for_ios_build
    - run:
        name: Upload
        no_output_timeout: "1h"
        command: |
          script="/Users/distiller/project/.circleci/scripts/binary_ios_upload.sh"
          cat "$script"
          source "$script"

  setup:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: Save commit message
          command: git log --format='%B' -n 1 HEAD > .circleci/scripts/COMMIT_MSG
      # Note [Workspace for CircleCI scripts]
      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      # In the beginning, you wrote your CI scripts in a
      # .circleci/config.yml file, and life was good.  Your CI
      # configurations flourished and multiplied.
      #
      # Then one day, CircleCI cometh down high and say, "Your YAML file
      # is too biggeth, it stresses our servers so."  And thus they
      # asketh us to smite the scripts in the yml file.
      #
      # But you can't just put the scripts in the .circleci folder,
      # because in some jobs, you don't ever actually checkout the
      # source repository.  Where you gonna get the scripts from?
      #
      # Here's how you do it: you persist .circleci/scripts into a
      # workspace, attach the workspace in your subjobs, and run all
      # your scripts from there.
      - persist_to_workspace:
          root: .
          paths: .circleci/scripts

  pytorch_python_doc_push:
    environment:
      BUILD_ENVIRONMENT: pytorch-python-doc-push
      # TODO: stop hardcoding this
      DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-cuda9-cudnn7-py3:405"
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        name: Doc Build and Push
        no_output_timeout: "1h"
        command: |
          set -ex
          export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-${CIRCLE_SHA1}
          echo "DOCKER_IMAGE: "${COMMIT_DOCKER_IMAGE}
          time docker pull ${COMMIT_DOCKER_IMAGE} >/dev/null
          export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})

          # master branch docs push
          if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/python_doc_push_script.sh docs/master master site") | docker exec -u jenkins -i "$id" bash) 2>&1'

          # stable release docs push. Due to some circleci limitations, we keep
          # an eternal PR open for merging v1.2.0 -> master for this job.
          # XXX: The following code is only run on the v1.2.0 branch, which might
          # not be exactly the same as what you see here.
          elif [[ "${CIRCLE_BRANCH}" == "v1.2.0" ]]; then
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/python_doc_push_script.sh docs/stable 1.2.0 site dry_run") | docker exec -u jenkins -i "$id" bash) 2>&1'

          # For open PRs: Do a dry_run of the docs build, don't push build
          else
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/python_doc_push_script.sh docs/master master site dry_run") | docker exec -u jenkins -i "$id" bash) 2>&1'
          fi

          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          # Save the docs build so we can debug any problems
          export DEBUG_COMMIT_DOCKER_IMAGE=${COMMIT_DOCKER_IMAGE}-debug
          docker commit "$id" ${DEBUG_COMMIT_DOCKER_IMAGE}
          time docker push ${DEBUG_COMMIT_DOCKER_IMAGE}

  pytorch_cpp_doc_push:
    environment:
      BUILD_ENVIRONMENT: pytorch-cpp-doc-push
      DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-cuda9-cudnn7-py3:405"
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
    - should_run_job
    - setup_linux_system_environment
    - setup_ci_environment
    - run:
        name: Doc Build and Push
        no_output_timeout: "1h"
        command: |
          set -ex
          export COMMIT_DOCKER_IMAGE=${DOCKER_IMAGE}-${CIRCLE_SHA1}
          echo "DOCKER_IMAGE: "${COMMIT_DOCKER_IMAGE}
          time docker pull ${COMMIT_DOCKER_IMAGE} >/dev/null
          export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${COMMIT_DOCKER_IMAGE})

          # master branch docs push
          if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/cpp_doc_push_script.sh docs/master master") | docker exec -u jenkins -i "$id" bash) 2>&1'

          # stable release docs push. Due to some circleci limitations, we keep
          # an eternal PR open (#16502) for merging v1.0.1 -> master for this job.
          # XXX: The following code is only run on the v1.0.1 branch, which might
          # not be exactly the same as what you see here.
          elif [[ "${CIRCLE_BRANCH}" == "v1.0.1" ]]; then
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/cpp_doc_push_script.sh docs/stable 1.0.1") | docker exec -u jenkins -i "$id" bash) 2>&1'

          # For open PRs: Do a dry_run of the docs build, don't push build
          else
            export COMMAND='((echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" && echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && . ./.circleci/scripts/cpp_doc_push_script.sh docs/master master dry_run") | docker exec -u jenkins -i "$id" bash) 2>&1'
          fi

          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          # Save the docs build so we can debug any problems
          export DEBUG_COMMIT_DOCKER_IMAGE=${COMMIT_DOCKER_IMAGE}-debug
          docker commit "$id" ${DEBUG_COMMIT_DOCKER_IMAGE}
          time docker push ${DEBUG_COMMIT_DOCKER_IMAGE}

  pytorch_macos_10_13_py3_build:
    environment:
      BUILD_ENVIRONMENT: pytorch-macos-10.13-py3-build
    macos:
      xcode: "9.4.1"
    steps:
      # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
      - should_run_job
      - checkout
      - run_brew_for_macos_build
      - run:
          name: Build
          no_output_timeout: "1h"
          command: |
            set -e
            export IN_CIRCLECI=1

            # Install sccache
            sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache --output /usr/local/bin/sccache
            sudo chmod +x /usr/local/bin/sccache
            export SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2

            # This IAM user allows write access to S3 bucket for sccache
            set +x
            export AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            export AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            set -x

            chmod a+x .jenkins/pytorch/macos-build.sh
            unbuffer .jenkins/pytorch/macos-build.sh 2>&1 | ts

            # copy with -a to preserve relative structure (e.g., symlinks), and be recursive
            cp -a ~/project ~/workspace

      - persist_to_workspace:
          root: ~/workspace
          paths:
            - miniconda3
            - project

  pytorch_macos_10_13_py3_test:
    environment:
      BUILD_ENVIRONMENT: pytorch-macos-10.13-py3-test
    macos:
      xcode: "9.4.1"
    steps:
      # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
      # This workspace also carries binaries from the build job
      - should_run_job
      - run_brew_for_macos_build
      - run:
          name: Test
          no_output_timeout: "1h"
          command: |
            set -e
            export IN_CIRCLECI=1

            # copy with -a to preserve relative structure (e.g., symlinks), and be recursive
            cp -a ~/workspace/project/. ~/project

            chmod a+x .jenkins/pytorch/macos-test.sh
            unbuffer .jenkins/pytorch/macos-test.sh 2>&1 | ts
      - store_test_results:
          path: test/test-reports

  pytorch_macos_10_13_cuda10_0_cudnn7_py3_build:
    environment:
      BUILD_ENVIRONMENT: pytorch-macos-10.13-cuda10.0-cudnn7-py3-build
    macos:
      xcode: "9.4.1"
    steps:
      # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
      - should_run_job
      - checkout
      - run_brew_for_macos_build
      - run:
          name: Build
          no_output_timeout: "1h"
          command: |
            set -e

            export IN_CIRCLECI=1

            # Install CUDA 10.0
            sudo rm -rf ~/CUDAMacOSXInstaller.app || true
            curl --retry 3 https://s3.amazonaws.com/ossci-macos/cuda_10.0.130_mac_installer.zip -o ~/cuda_10.0.130_mac_installer.zip
            unzip ~/cuda_10.0.130_mac_installer.zip -d ~/
            sudo ~/CUDAMacOSXInstaller.app/Contents/MacOS/CUDAMacOSXInstaller --accept-eula --no-window
            sudo cp /usr/local/cuda/lib/libcuda.dylib /Developer/NVIDIA/CUDA-10.0/lib/libcuda.dylib
            sudo rm -rf /usr/local/cuda || true

            # Install cuDNN 7.6.5 for CUDA 10.0
            curl --retry 3 https://s3.amazonaws.com/ossci-macos/cudnn-10.0-osx-x64-v7.6.5.32.tgz -o ~/cudnn-10.0-osx-x64-v7.6.5.32.tgz
            rm -rf ~/cudnn-10.0-osx-x64-v7.6.5.32 && mkdir ~/cudnn-10.0-osx-x64-v7.6.5.32
            tar -xzvf ~/cudnn-10.0-osx-x64-v7.6.5.32.tgz -C ~/cudnn-10.0-osx-x64-v7.6.5.32
            sudo cp ~/cudnn-10.0-osx-x64-v7.6.5.32/cuda/include/cudnn.h /Developer/NVIDIA/CUDA-10.0/include/
            sudo cp ~/cudnn-10.0-osx-x64-v7.6.5.32/cuda/lib/libcudnn* /Developer/NVIDIA/CUDA-10.0/lib/
            sudo chmod a+r /Developer/NVIDIA/CUDA-10.0/include/cudnn.h /Developer/NVIDIA/CUDA-10.0/lib/libcudnn*

            # Install sccache
            sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache --output /usr/local/bin/sccache
            sudo chmod +x /usr/local/bin/sccache
            export SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2
            # This IAM user allows write access to S3 bucket for sccache
            set +x
            export AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            export AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_SCCACHE_S3_BUCKET_V4}
            set -x

            git submodule sync && git submodule update -q --init --recursive
            chmod a+x .jenkins/pytorch/macos-build.sh
            unbuffer .jenkins/pytorch/macos-build.sh 2>&1 | ts

  pytorch_android_gradle_build:
    environment:
      BUILD_ENVIRONMENT: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build
      DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-py3-clang5-android-ndk-r19c:405"
      PYTHON_VERSION: "3.6"
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - should_run_job
    - setup_linux_system_environment
    - checkout
    - setup_ci_environment
    - run:
        name: pytorch android gradle build
        no_output_timeout: "1h"
        command: |
          set -eux
          docker_image_commit=${DOCKER_IMAGE}-${CIRCLE_SHA1}

          docker_image_libtorch_android_x86_32=${docker_image_commit}-android-x86_32
          docker_image_libtorch_android_x86_64=${docker_image_commit}-android-x86_64
          docker_image_libtorch_android_arm_v7a=${docker_image_commit}-android-arm-v7a
          docker_image_libtorch_android_arm_v8a=${docker_image_commit}-android-arm-v8a

          echo "docker_image_commit: "${docker_image_commit}
          echo "docker_image_libtorch_android_x86_32: "${docker_image_libtorch_android_x86_32}
          echo "docker_image_libtorch_android_x86_64: "${docker_image_libtorch_android_x86_64}
          echo "docker_image_libtorch_android_arm_v7a: "${docker_image_libtorch_android_arm_v7a}
          echo "docker_image_libtorch_android_arm_v8a: "${docker_image_libtorch_android_arm_v8a}

          # x86_32
          time docker pull ${docker_image_libtorch_android_x86_32} >/dev/null
          export id_x86_32=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_x86_32})

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace") | docker exec -u jenkins -i "$id_x86_32" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          # arm-v7a
          time docker pull ${docker_image_libtorch_android_arm_v7a} >/dev/null
          export id_arm_v7a=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_arm_v7a})

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace") | docker exec -u jenkins -i "$id_arm_v7a" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          mkdir ~/workspace/build_android_install_arm_v7a
          docker cp $id_arm_v7a:/var/lib/jenkins/workspace/build_android/install ~/workspace/build_android_install_arm_v7a

          # x86_64
          time docker pull ${docker_image_libtorch_android_x86_64} >/dev/null
          export id_x86_64=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_x86_64})

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace") | docker exec -u jenkins -i "$id_x86_64" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          mkdir ~/workspace/build_android_install_x86_64
          docker cp $id_x86_64:/var/lib/jenkins/workspace/build_android/install ~/workspace/build_android_install_x86_64

          # arm-v8a
          time docker pull ${docker_image_libtorch_android_arm_v8a} >/dev/null
          export id_arm_v8a=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_arm_v8a})

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace") | docker exec -u jenkins -i "$id_arm_v8a" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          mkdir ~/workspace/build_android_install_arm_v8a
          docker cp $id_arm_v8a:/var/lib/jenkins/workspace/build_android/install ~/workspace/build_android_install_arm_v8a

          docker cp ~/workspace/build_android_install_arm_v7a $id_x86_32:/var/lib/jenkins/workspace/build_android_install_arm_v7a
          docker cp ~/workspace/build_android_install_x86_64 $id_x86_32:/var/lib/jenkins/workspace/build_android_install_x86_64
          docker cp ~/workspace/build_android_install_arm_v8a $id_x86_32:/var/lib/jenkins/workspace/build_android_install_arm_v8a

          # run gradle buildRelease
          export COMMAND='((echo "source ./workspace/env" && echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GRADLE_OFFLINE=1" && echo "sudo chown -R jenkins workspace && cd workspace && ./.circleci/scripts/build_android_gradle.sh") | docker exec -u jenkins -i "$id_x86_32" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          mkdir -p ~/workspace/build_android_artifacts
          docker cp $id_x86_32:/var/lib/jenkins/workspace/android/artifacts.tgz ~/workspace/build_android_artifacts/

          output_image=$docker_image_libtorch_android_x86_32-gradle
          docker commit "$id_x86_32" ${output_image}
          time docker push ${output_image}
    - store_artifacts:
        path: ~/workspace/build_android_artifacts/artifacts.tgz
        destination: artifacts.tgz

  pytorch_android_publish_snapshot:
    environment:
      BUILD_ENVIRONMENT: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-publish-snapshot
      DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-py3-clang5-android-ndk-r19c:405"
      PYTHON_VERSION: "3.6"
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - should_run_job
    - setup_linux_system_environment
    - checkout
    - setup_ci_environment
    - run:
        name: pytorch android gradle build
        no_output_timeout: "1h"
        command: |
          set -eux
          docker_image_commit=${DOCKER_IMAGE}-${CIRCLE_SHA1}

          docker_image_libtorch_android_x86_32_gradle=${docker_image_commit}-android-x86_32-gradle

          echo "docker_image_commit: "${docker_image_commit}
          echo "docker_image_libtorch_android_x86_32_gradle: "${docker_image_libtorch_android_x86_32_gradle}

          # x86_32
          time docker pull ${docker_image_libtorch_android_x86_32_gradle} >/dev/null
          export id_x86_32=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_x86_32_gradle})

          export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace" && echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export SONATYPE_NEXUS_USERNAME=${SONATYPE_NEXUS_USERNAME}" && echo "export SONATYPE_NEXUS_PASSWORD=${SONATYPE_NEXUS_PASSWORD}" && echo "export ANDROID_SIGN_KEY=${ANDROID_SIGN_KEY}" && echo "export ANDROID_SIGN_PASS=${ANDROID_SIGN_PASS}" && echo "sudo chown -R jenkins workspace && cd workspace && ./.circleci/scripts/publish_android_snapshot.sh") | docker exec -u jenkins -i "$id_x86_32" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          output_image=${docker_image_libtorch_android_x86_32_gradle}-publish-snapshot
          docker commit "$id_x86_32" ${output_image}
          time docker push ${output_image}

  pytorch_android_gradle_build-x86_32:
    environment:
      BUILD_ENVIRONMENT: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build-only-x86_32
      DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-py3-clang5-android-ndk-r19c:405"
      PYTHON_VERSION: "3.6"
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - should_run_job
    - run:
        name: filter out not PR runs
        no_output_timeout: "5m"
        command: |
          echo "CIRCLE_PULL_REQUEST: ${CIRCLE_PULL_REQUEST:-}"
          if [ -z "${CIRCLE_PULL_REQUEST:-}" ]; then
            circleci step halt
          fi
    - setup_linux_system_environment
    - checkout
    - setup_ci_environment
    - run:
        name: pytorch android gradle build only x86_32 (for PR)
        no_output_timeout: "1h"
        command: |
          set -e
          docker_image_libtorch_android_x86_32=${DOCKER_IMAGE}-${CIRCLE_SHA1}-android-x86_32
          echo "docker_image_libtorch_android_x86_32: "${docker_image_libtorch_android_x86_32}

          # x86
          time docker pull ${docker_image_libtorch_android_x86_32} >/dev/null
          export id=$(docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -t -d -w /var/lib/jenkins ${docker_image_libtorch_android_x86_32})

          export COMMAND='((echo "source ./workspace/env" && echo "export BUILD_ENVIRONMENT=${BUILD_ENVIRONMENT}" && echo "export GRADLE_OFFLINE=1" && echo "sudo chown -R jenkins workspace && cd workspace && ./.circleci/scripts/build_android_gradle.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
          echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

          mkdir -p ~/workspace/build_android_x86_32_artifacts
          docker cp $id:/var/lib/jenkins/workspace/android/artifacts.tgz ~/workspace/build_android_x86_32_artifacts/

          output_image=${docker_image_libtorch_android_x86_32}-gradle
          docker commit "$id" ${output_image}
          time docker push ${output_image}
    - store_artifacts:
        path: ~/workspace/build_android_x86_32_artifacts/artifacts.tgz
        destination: artifacts.tgz

  pytorch_ios_build:
    <<: *pytorch_ios_params
    macos:
      xcode: "10.2.1"
    steps:
      # See Note [Workspace for CircleCI scripts] in job-specs-setup.yml
      - should_run_job
      - checkout
      - run_brew_for_ios_build
      - run:
          name: cert install
          no_output_timeout: "1h"
          command: |
            set -e
            PROJ_ROOT=/Users/distiller/project
            cd ${PROJ_ROOT}/ios/TestApp
            # install fastlane
            sudo gem install bundler && bundle install
            # install certificates
            echo ${IOS_CERT_KEY} >> cert.txt
            base64 --decode cert.txt -o Certificates.p12
            rm cert.txt
            bundle exec fastlane install_cert
            # install the provisioning profile
            PROFILE=TestApp_CI.mobileprovision
            PROVISIONING_PROFILES=~/Library/MobileDevice/Provisioning\ Profiles
            mkdir -pv "${PROVISIONING_PROFILES}"
            cd "${PROVISIONING_PROFILES}"
            echo ${IOS_SIGN_KEY} >> cert.txt
            base64 --decode cert.txt -o ${PROFILE}
            rm cert.txt
      - run:
          name: Build
          no_output_timeout: "1h"
          command: |
            set -e
            export IN_CIRCLECI=1
            WORKSPACE=/Users/distiller/workspace
            PROJ_ROOT=/Users/distiller/project
            export TCLLIBPATH="/usr/local/lib"

            # Install conda
            curl --retry 3 -o ~/Downloads/conda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            chmod +x ~/Downloads/conda.sh
            /bin/bash ~/Downloads/conda.sh -b -p ~/anaconda
            export PATH="~/anaconda/bin:${PATH}"
            source ~/anaconda/bin/activate

            # Install dependencies
            retry () {
                $*  || (sleep 1 && $*) || (sleep 2 && $*) || (sleep 4 && $*) || (sleep 8 && $*)
            }

            retry conda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing requests --yes

            # sync submodules
            cd ${PROJ_ROOT}
            git submodule sync
            git submodule update --init --recursive

            # export
            export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}

            # run build script
            chmod a+x ${PROJ_ROOT}/scripts/build_ios.sh
            echo "IOS_ARCH: ${IOS_ARCH}"
            echo "IOS_PLATFORM: ${IOS_PLATFORM}"
            export BUILD_PYTORCH_MOBILE=1
            export IOS_ARCH=${IOS_ARCH}
            export IOS_PLATFORM=${IOS_PLATFORM}
            unbuffer ${PROJ_ROOT}/scripts/build_ios.sh 2>&1 | ts
      - run:
          name: Test
          no_output_timeout: "30m"
          command: |
            set -e
            PROJ_ROOT=/Users/distiller/project
            PROFILE=TestApp_CI
            # run the ruby build script
            if ! [ -x "$(command -v xcodebuild)" ]; then
              echo 'Error: xcodebuild is not installed.'
              exit 1
            fi
            echo ${IOS_DEV_TEAM_ID}
            ruby ${PROJ_ROOT}/scripts/xcode_build.rb -i ${PROJ_ROOT}/build_ios/install -x ${PROJ_ROOT}/ios/TestApp/TestApp.xcodeproj -p ${IOS_PLATFORM} -c ${PROFILE} -t ${IOS_DEV_TEAM_ID}
            if ! [ "$?" -eq "0" ]; then
              echo 'xcodebuild failed!'
              exit 1
            fi

  # update_s3_htmls job
  # These jobs create html files for every cpu/cu## folder in s3. The html
  # files just store the names of all the files in that folder (which are
  # binary files (.whl files)). This is to allow pip installs of the latest
  # version in a folder without having to know the latest date. Pip has a flag
  # -f that you can pass an html file listing a bunch of packages, and pip will
  # then install the one with the most recent version.
  update_s3_htmls: &update_s3_htmls
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - attach_workspace:
        at: ~/workspace
    - setup_linux_system_environment
    - run:
        <<: *binary_checkout
    # N.B. we do not run binary_populate_env. The only variable we need is
    # PIP_UPLOAD_FOLDER (which is 'nightly/' for the nightlies and '' for
    # releases, and sometimes other things for special cases). Instead we
    # expect PIP_UPLOAD_FOLDER to be passed directly in the env. This is
    # because, unlike all the other binary jobs, these jobs only get run once,
    # in a separate workflow. They are not a step in other binary jobs like
    # build, test, upload.
    #
    # You could attach this to every job, or include it in the upload step if
    # you wanted. You would need to add binary_populate_env in this case to
    # make sure it has the same upload folder as the job it's attached to. This
    # function is idempotent, so it won't hurt anything; it's just a little
    # unnescessary"
    - run:
        name: Update s3 htmls
        no_output_timeout: "1h"
        command: |
          set +x
          echo "declare -x \"AWS_ACCESS_KEY_ID=${PYTORCH_BINARY_AWS_ACCESS_KEY_ID}\"" >> /home/circleci/project/env
          echo "declare -x \"AWS_SECRET_ACCESS_KEY=${PYTORCH_BINARY_AWS_SECRET_ACCESS_KEY}\"" >> /home/circleci/project/env
          source /home/circleci/project/env
          set -eux -o pipefail
          retry () {
              $*  || (sleep 1 && $*) || (sleep 2 && $*) || (sleep 4 && $*) || (sleep 8 && $*)
          }
          retry pip install awscli==1.6
          "/home/circleci/project/builder/cron/update_s3_htmls.sh"

  # Update s3 htmls for the nightlies
  update_s3_htmls_for_nightlies:
    environment:
      PIP_UPLOAD_FOLDER: "nightly/"
    <<: *update_s3_htmls

  # Update s3 htmls for the nightlies for devtoolset7
  update_s3_htmls_for_nightlies_devtoolset7:
    environment:
      PIP_UPLOAD_FOLDER: "nightly/devtoolset7/"
    <<: *update_s3_htmls


  # upload_binary_logs job
  # The builder hud at pytorch.org/builder shows the sizes of all the binaries
  # over time. It gets this info from html files stored in S3, which this job
  # populates every day.
  upload_binary_sizes: &upload_binary_sizes
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - attach_workspace:
        at: ~/workspace
    - setup_linux_system_environment
    - run:
        <<: *binary_checkout
    - run:
        <<: *binary_install_miniconda
    - run:
        name: Upload binary sizes
        no_output_timeout: "1h"
        command: |
          set +x
          echo "declare -x \"AWS_ACCESS_KEY_ID=${PYTORCH_BINARY_AWS_ACCESS_KEY_ID}\"" > /home/circleci/project/env
          echo "declare -x \"AWS_SECRET_ACCESS_KEY=${PYTORCH_BINARY_AWS_SECRET_ACCESS_KEY}\"" >> /home/circleci/project/env
          export DATE="$(date -u +%Y_%m_%d)"
          retry () {
              $*  || (sleep 1 && $*) || (sleep 2 && $*) || (sleep 4 && $*) || (sleep 8 && $*)
          }
          source /home/circleci/project/env
          set -eux -o pipefail

          # This is hardcoded to match binary_install_miniconda.sh
          export PATH="/home/circleci/project/miniconda/bin:$PATH"
          # Not any awscli will work. Most won't. This one will work
          retry conda create -qyn aws36 python=3.6
          source activate aws36
          pip install awscli==1.16.46

          "/home/circleci/project/builder/cron/upload_binary_sizes.sh"


# There is currently no testing for libtorch TODO
#  binary_linux_libtorch_2.7m_cpu_test:
#    environment:
#      BUILD_ENVIRONMENT: "libtorch 2.7m cpu"
#    resource_class: gpu.medium
#    <<: *binary_linux_test
#
#  binary_linux_libtorch_2.7m_cu90_test:
#    environment:
#      BUILD_ENVIRONMENT: "libtorch 2.7m cu90"
#    resource_class: gpu.medium
#    <<: *binary_linux_test
#
#  binary_linux_libtorch_2.7m_cu100_test:
#    environment:
#      BUILD_ENVIRONMENT: "libtorch 2.7m cu100"
#    resource_class: gpu.medium
#    <<: *binary_linux_test

  docker_build_job:
      parameters:
        image_name:
          type: string
          default: ""
      machine:
        image: ubuntu-1604:201903-01
      resource_class: large
      environment:
        IMAGE_NAME: << parameters.image_name >>
      steps:
        - checkout
        - run:
            name: build_docker_image_<< parameters.image_name >>
            no_output_timeout: "1h"
            command: |
              set +x
              export AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_DOCKER_BUILDER_V1}
              export AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_DOCKER_BUILDER_V1}
              set -x
              cd .circleci/docker && ./build_docker.sh

##############################################################################
##############################################################################
# Workflows
##############################################################################
##############################################################################

# PR jobs pr builds
workflows:
  build:
    jobs:
      - setup
      #     name: binary_linux_manywheel_2_7mu_cu101_devtoolset7_nightly_build
      #     build_environment: "manywheel 2.7mu cu101 devtoolset7"
      #     requires:
      #       - setup
      #     docker_image: "soumith/manylinux-cuda101"
      # - binary_linux_build:
      #     name: binary_linux_manywheel_3_5m_cu101_devtoolset7_nightly_build
      #     build_environment: "manywheel 3.5m cu101 devtoolset7"
      #     requires:
      #       - setup
      #     docker_image: "soumith/manylinux-cuda101"
      # - binary_linux_build:
      #     name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build
      #     build_environment: "manywheel 3.6m cu101 devtoolset7"
      #     requires:
      #       - setup
      #     docker_image: "soumith/manylinux-cuda101"
      # - binary_linux_build:
      #     name: binary_linux_manywheel_3_7m_cu101_devtoolset7_nightly_build
      #     build_environment: "manywheel 3.7m cu101 devtoolset7"
      #     requires:
      #       - setup
      #     docker_image: "soumith/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9fd7db616a0e220a74f4459958ea2d3186d5e55a
          sha1: 9fd7db616a0e220a74f4459958ea2d3186d5e55a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ba74be0d3ee1c4d69edb013dba289908fcd4e655
          sha1: ba74be0d3ee1c4d69edb013dba289908fcd4e655
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4a27d2be18f0225986ff472e8e2a2f7b26378957
          sha1: 4a27d2be18f0225986ff472e8e2a2f7b26378957
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f3b15727c58ab9d0010a03fd90c124f0727826e3
          sha1: f3b15727c58ab9d0010a03fd90c124f0727826e3
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-aa6e992ffb1681193aa7351d436cdb6e7e7f5dde
          sha1: aa6e992ffb1681193aa7351d436cdb6e7e7f5dde
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a68c52494c69d3cee10fb9e7ab9918b175903d18
          sha1: a68c52494c69d3cee10fb9e7ab9918b175903d18
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9ee6fa01454ed3a56a3b0915343aeea5a97baa33
          sha1: 9ee6fa01454ed3a56a3b0915343aeea5a97baa33
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ed788ec7804cac24db42069f41a7109c65cc57f1
          sha1: ed788ec7804cac24db42069f41a7109c65cc57f1
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b8dca04f7381798a344d01e52a34a20cf300c277
          sha1: b8dca04f7381798a344d01e52a34a20cf300c277
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5654eccfe2cd5097e85b88681dd1b2dea5bb6abc
          sha1: 5654eccfe2cd5097e85b88681dd1b2dea5bb6abc
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-681b610f35968761435b28a6bc564e17a7f553d0
          sha1: 681b610f35968761435b28a6bc564e17a7f553d0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-91bef3d189b303c27a91941ae3dff16c5cfe19e4
          sha1: 91bef3d189b303c27a91941ae3dff16c5cfe19e4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-65f691f2c250408898dd7739a8c6f8b88ab5ac9f
          sha1: 65f691f2c250408898dd7739a8c6f8b88ab5ac9f
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2bcac59a309e31589113e8b87a5b21eed1fea2fa
          sha1: 2bcac59a309e31589113e8b87a5b21eed1fea2fa
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3fb9bbc99b8e1af286ca84045697a951f5346832
          sha1: 3fb9bbc99b8e1af286ca84045697a951f5346832
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-78bd0069d36153d90413121010c8cff001146590
          sha1: 78bd0069d36153d90413121010c8cff001146590
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-71aacf7b82b9c6b1f2af7f73aabe3298698bae7e
          sha1: 71aacf7b82b9c6b1f2af7f73aabe3298698bae7e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2b05ae0704cc25bf8d801e9a2242b4de09518505
          sha1: 2b05ae0704cc25bf8d801e9a2242b4de09518505
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c800591030bf8baf69da5d721be9a56633ee9cfb
          sha1: c800591030bf8baf69da5d721be9a56633ee9cfb
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b37c235d8647b5e4be53ee482cc50e244fe3f1ac
          sha1: b37c235d8647b5e4be53ee482cc50e244fe3f1ac
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7f485121a6416541649ab9871775ad2a8b613d78
          sha1: 7f485121a6416541649ab9871775ad2a8b613d78
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ed215b1c03015b2077a45c3a6dea32c2f1d0f947
          sha1: ed215b1c03015b2077a45c3a6dea32c2f1d0f947
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5e64cfa66302a3ddba3e61ee8657f032b9c5220d
          sha1: 5e64cfa66302a3ddba3e61ee8657f032b9c5220d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-6de1016f9dbf624f93f8c8d45feb56f8c222b7a6
          sha1: 6de1016f9dbf624f93f8c8d45feb56f8c222b7a6
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-73a926fd5da3d8aae879f3cfb3c04a137b95ef86
          sha1: 73a926fd5da3d8aae879f3cfb3c04a137b95ef86
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f0dd7517f2c71a1ae566e75d935d6aefd651ff72
          sha1: f0dd7517f2c71a1ae566e75d935d6aefd651ff72
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-03d021ddb83873994ca1a1ba1b31d30c096263ed
          sha1: 03d021ddb83873994ca1a1ba1b31d30c096263ed
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5635a72069f2148198348561c5dd94eb1bcc6788
          sha1: 5635a72069f2148198348561c5dd94eb1bcc6788
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-6d54c5ddd22ea69f6adaacc428d6c60aa63c8b77
          sha1: 6d54c5ddd22ea69f6adaacc428d6c60aa63c8b77
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9b1ff8090da092b9b53f82683268887f1090dbf2
          sha1: 9b1ff8090da092b9b53f82683268887f1090dbf2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0c91ebb694fc225b66f8fa6e7d90fe2cdadc6b22
          sha1: 0c91ebb694fc225b66f8fa6e7d90fe2cdadc6b22
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-89e187a2f599ac8cca95651844563364d598773c
          sha1: 89e187a2f599ac8cca95651844563364d598773c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-30092df15e32057bbf67864e7749f1f3873d1395
          sha1: 30092df15e32057bbf67864e7749f1f3873d1395
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7da9ac5afd32f4c200cfaccc56f03da1f46e0699
          sha1: 7da9ac5afd32f4c200cfaccc56f03da1f46e0699
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-715e951e3cf385d3dfbe624bcd49b8a1131ca3b3
          sha1: 715e951e3cf385d3dfbe624bcd49b8a1131ca3b3
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-e870a9a87042805cd52973e36534357f428a0748
          sha1: e870a9a87042805cd52973e36534357f428a0748
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7b86199fc01bf4b2840293a8b3239af276108c98
          sha1: 7b86199fc01bf4b2840293a8b3239af276108c98
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3a72662d018b853636eb1802a559e236920a8584
          sha1: 3a72662d018b853636eb1802a559e236920a8584
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-09d359dfd937ab0c9a0a355cfa4d23d1c422a668
          sha1: 09d359dfd937ab0c9a0a355cfa4d23d1c422a668
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-d2aa4c611f6c1c885eb168612d64ee776c008e7a
          sha1: d2aa4c611f6c1c885eb168612d64ee776c008e7a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-d8732b3b43983dd16d8f3c4bfd3970adc4c03b89
          sha1: d8732b3b43983dd16d8f3c4bfd3970adc4c03b89
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-20fb8a814c89caf54fa643e1a0ae5cb1140c4420
          sha1: 20fb8a814c89caf54fa643e1a0ae5cb1140c4420
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-87363a8102bc8aa390db4a4fcc4004fcb3c3d019
          sha1: 87363a8102bc8aa390db4a4fcc4004fcb3c3d019
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5a8ad66354c81f1fbe1e68848b420cad7a2ce97b
          sha1: 5a8ad66354c81f1fbe1e68848b420cad7a2ce97b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-95cad57340cefa431df70ec1143f315ab6dba9dc
          sha1: 95cad57340cefa431df70ec1143f315ab6dba9dc
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-907a29de70491bb1431b86d9a14829816965cdc0
          sha1: 907a29de70491bb1431b86d9a14829816965cdc0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-29e509ff1d4a573976f26813a6f9c6053ab50a21
          sha1: 29e509ff1d4a573976f26813a6f9c6053ab50a21
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8875120b54b91aa5dd71ad5717dafef6db267b7a
          sha1: 8875120b54b91aa5dd71ad5717dafef6db267b7a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-422fbfb1084bef720e50c3af7f14ddfb38d5bb7d
          sha1: 422fbfb1084bef720e50c3af7f14ddfb38d5bb7d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bd0394d47321c310bd6ff70d138e3ea648b79427
          sha1: bd0394d47321c310bd6ff70d138e3ea648b79427
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8e7b406773b9b4e71f2bb027752e06635c23ddc0
          sha1: 8e7b406773b9b4e71f2bb027752e06635c23ddc0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-433baf1b9067774aecdeef8e32664827779ddb86
          sha1: 433baf1b9067774aecdeef8e32664827779ddb86
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-65bfcde05eaaeb8702cbadc7d51ce4ad478ea560
          sha1: 65bfcde05eaaeb8702cbadc7d51ce4ad478ea560
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-57eab22c6a04f59f7b4c8ab1756a7e2e8cf2684d
          sha1: 57eab22c6a04f59f7b4c8ab1756a7e2e8cf2684d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9f879ef5320cf8ee61af36109182989517fb351b
          sha1: 9f879ef5320cf8ee61af36109182989517fb351b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c3b2c2e353179bd591b6bbafa303d9affca9babb
          sha1: c3b2c2e353179bd591b6bbafa303d9affca9babb
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b0c245d52d8759c5fcb10efc20ee8461f7843797
          sha1: b0c245d52d8759c5fcb10efc20ee8461f7843797
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fd8f74e688cb88714e5448c52c0068878af6e1a2
          sha1: fd8f74e688cb88714e5448c52c0068878af6e1a2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fbe90b65fa8a8e5358edc90daca126b6d87deeab
          sha1: fbe90b65fa8a8e5358edc90daca126b6d87deeab
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3175f5543ab09528477e72baf3ef5268a858e859
          sha1: 3175f5543ab09528477e72baf3ef5268a858e859
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-eeb7199ccc413a8c0048e9c4e525a65c56bdd61e
          sha1: eeb7199ccc413a8c0048e9c4e525a65c56bdd61e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9bb0e2834db19b5fe7dd49c24ac0edb221db3fe8
          sha1: 9bb0e2834db19b5fe7dd49c24ac0edb221db3fe8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-82913a266d76279d282a10edbb59e405d7cec648
          sha1: 82913a266d76279d282a10edbb59e405d7cec648
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3b43cfde80d828b39abfd988eb64efcbdb5b61a1
          sha1: 3b43cfde80d828b39abfd988eb64efcbdb5b61a1
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5db361bd32a46f06a8241cfa3e823e345b7f7a77
          sha1: 5db361bd32a46f06a8241cfa3e823e345b7f7a77
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9c9c361f67cc5de0245035a719f9d38deebedcd9
          sha1: 9c9c361f67cc5de0245035a719f9d38deebedcd9
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f95e8ea1be22bb3bf5d04f5fb20cd22f9a81710e
          sha1: f95e8ea1be22bb3bf5d04f5fb20cd22f9a81710e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f111f1b1a77702d632f2d5c9cea750064bc1d82a
          sha1: f111f1b1a77702d632f2d5c9cea750064bc1d82a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-949d6ae184a15bbed3f30bb0427268c86dc4f5bb
          sha1: 949d6ae184a15bbed3f30bb0427268c86dc4f5bb
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-450949c7feb44dd48944ea7645c4e965433acb01
          sha1: 450949c7feb44dd48944ea7645c4e965433acb01
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7073ee209000a7781c0c863c4ef39bb3bfdb4932
          sha1: 7073ee209000a7781c0c863c4ef39bb3bfdb4932
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3b452ca4287ef573b189cefc54192f19da28aef7
          sha1: 3b452ca4287ef573b189cefc54192f19da28aef7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a0d4d5062b4b7db9b3ece88c8e391865e4942f2c
          sha1: a0d4d5062b4b7db9b3ece88c8e391865e4942f2c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-e651494d47ce1b4db714c2ccec538f18f2f24999
          sha1: e651494d47ce1b4db714c2ccec538f18f2f24999
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2fb4059652fa5a1326907226d8bd7a6f04777cce
          sha1: 2fb4059652fa5a1326907226d8bd7a6f04777cce
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bbff06ee96f4ce7323f5bb1043b802833362e075
          sha1: bbff06ee96f4ce7323f5bb1043b802833362e075
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2acca09e1a276b739b97dcd9817b18a073cf11b2
          sha1: 2acca09e1a276b739b97dcd9817b18a073cf11b2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8db06732bfe4f3aa817c984f85242c94b78c00f4
          sha1: 8db06732bfe4f3aa817c984f85242c94b78c00f4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0c9e672727d9406b8be903a154f59cd47caf771e
          sha1: 0c9e672727d9406b8be903a154f59cd47caf771e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8b53515b8aa3657112b9cfa5ed8e811767e2262d
          sha1: 8b53515b8aa3657112b9cfa5ed8e811767e2262d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5249c43d9396bc19c8778b5c1fe0c2213af76314
          sha1: 5249c43d9396bc19c8778b5c1fe0c2213af76314
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fb07098e2bff887cd069efc2a5071c171255b881
          sha1: fb07098e2bff887cd069efc2a5071c171255b881
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7df854bddd75be2eb62665b564cbc1ec0752a92a
          sha1: 7df854bddd75be2eb62665b564cbc1ec0752a92a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bf61405ed61816b23c57718722145f26f217666a
          sha1: bf61405ed61816b23c57718722145f26f217666a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8df602400bf825e15ae42e9beb2f82143b35ba2e
          sha1: 8df602400bf825e15ae42e9beb2f82143b35ba2e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-858b2010aeaa63d2680ac8fd09f59a69ac899026
          sha1: 858b2010aeaa63d2680ac8fd09f59a69ac899026
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-1bb5209f7e6173582f260bcf0dd1720e84e3646a
          sha1: 1bb5209f7e6173582f260bcf0dd1720e84e3646a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ddeeb561c388b502f09ba8399d489a7fd17a4c4b
          sha1: ddeeb561c388b502f09ba8399d489a7fd17a4c4b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-70f886ffa43bd4b0173396eb818e4125edc2fa01
          sha1: 70f886ffa43bd4b0173396eb818e4125edc2fa01
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-af3468a1c7e4cab3eea4b092edc8794ac490feca
          sha1: af3468a1c7e4cab3eea4b092edc8794ac490feca
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7374dd0d5242e74a0f1d86d735853e394085753d
          sha1: 7374dd0d5242e74a0f1d86d735853e394085753d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fdcb203e8ef18011512a55974918ee8c62637f5b
          sha1: fdcb203e8ef18011512a55974918ee8c62637f5b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-587996ef0479ec5ab2fcb26e78eacb4c56ad171a
          sha1: 587996ef0479ec5ab2fcb26e78eacb4c56ad171a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-81116fd7cd31e16ef780624661a4a87472dc5ee7
          sha1: 81116fd7cd31e16ef780624661a4a87472dc5ee7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a9308f9d8bd08026f601840ac6df68ba01915fe5
          sha1: a9308f9d8bd08026f601840ac6df68ba01915fe5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b5a38fa98eeb5e3f8a381c6ca4dafda86ba21f82
          sha1: b5a38fa98eeb5e3f8a381c6ca4dafda86ba21f82
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a09197561ee599210a7f56f4a65ca5f35d37df50
          sha1: a09197561ee599210a7f56f4a65ca5f35d37df50
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-1a9e5dad81c3f93a22df9ddd318b209cf982005f
          sha1: 1a9e5dad81c3f93a22df9ddd318b209cf982005f
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-00c224f0f27ec1c05f2782a5e03e08c5526fec85
          sha1: 00c224f0f27ec1c05f2782a5e03e08c5526fec85
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-137eea59381b002bde34a3de8d973cb7d9821d83
          sha1: 137eea59381b002bde34a3de8d973cb7d9821d83
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-6104f4e37c7c25a77c6a5e7f049acb72621f61d3
          sha1: 6104f4e37c7c25a77c6a5e7f049acb72621f61d3
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0e5299a44100117cf3234477e76fd162ab62cc51
          sha1: 0e5299a44100117cf3234477e76fd162ab62cc51
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-85752df4a101bf14a614f52388e5fb3df1e63138
          sha1: 85752df4a101bf14a614f52388e5fb3df1e63138
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-01ad2bc5da88386fd3fd1118c2e93f3e8ffd2775
          sha1: 01ad2bc5da88386fd3fd1118c2e93f3e8ffd2775
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-6bfa7c047133060889ccb0234616160853b5fb9a
          sha1: 6bfa7c047133060889ccb0234616160853b5fb9a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-627f2823e0c0a37cbd33c9fe8bb736050a8224de
          sha1: 627f2823e0c0a37cbd33c9fe8bb736050a8224de
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4e4e29a5119b548c26baa0701b18d0a5879c41f2
          sha1: 4e4e29a5119b548c26baa0701b18d0a5879c41f2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5b702ab52b572895f8dd2bf49e50f187febe4047
          sha1: 5b702ab52b572895f8dd2bf49e50f187febe4047
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-cedca377bd005d68f553648c5b36dbd58a62a520
          sha1: cedca377bd005d68f553648c5b36dbd58a62a520
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b3b8f522e8b90bce95ff67f063a78e4ee3c2b568
          sha1: b3b8f522e8b90bce95ff67f063a78e4ee3c2b568
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5b43becfc5159668c2a46352f8f7b36b31719682
          sha1: 5b43becfc5159668c2a46352f8f7b36b31719682
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c49b324cbf17272d02f3811f517fe82106ce77d4
          sha1: c49b324cbf17272d02f3811f517fe82106ce77d4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bb90c18791a397ccfae6f64c360e466c9ed12195
          sha1: bb90c18791a397ccfae6f64c360e466c9ed12195
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b885eff4be274284f6f3877e564655c77a27902d
          sha1: b885eff4be274284f6f3877e564655c77a27902d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bc4457f5b615c5fc3c450f7e7a2eab1e2f1a40e0
          sha1: bc4457f5b615c5fc3c450f7e7a2eab1e2f1a40e0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-93b5c9d723dd4003ebd7439074a9e9722d58d33c
          sha1: 93b5c9d723dd4003ebd7439074a9e9722d58d33c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-17b0ab47276030315396d39ffa882da0f65d0b36
          sha1: 17b0ab47276030315396d39ffa882da0f65d0b36
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9276cd449d1a0467e1c93e5b8eea69d5d609fac3
          sha1: 9276cd449d1a0467e1c93e5b8eea69d5d609fac3
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b0cf43b2dd0b9d85f4b65aaee000a709644894ea
          sha1: b0cf43b2dd0b9d85f4b65aaee000a709644894ea
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-604fc9ec41aaa243460090dc93a02ed26f10505c
          sha1: 604fc9ec41aaa243460090dc93a02ed26f10505c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-65f3b98c35bad68d88864ab29785581cf4a3dcf1
          sha1: 65f3b98c35bad68d88864ab29785581cf4a3dcf1
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-310343e946231e01462ba29e5f3013827a80f275
          sha1: 310343e946231e01462ba29e5f3013827a80f275
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-e01fc56ecb7c7437fab5bd00665386e05e077ce4
          sha1: e01fc56ecb7c7437fab5bd00665386e05e077ce4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9de0b63554e25827b0642d1038ceeefd3eee1cc5
          sha1: 9de0b63554e25827b0642d1038ceeefd3eee1cc5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-72eff0021e8fb1e77a557b82f89f6fae2dc1a821
          sha1: 72eff0021e8fb1e77a557b82f89f6fae2dc1a821
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-344e7c26c40378bac373e15f7269ddc7e0a04c00
          sha1: 344e7c26c40378bac373e15f7269ddc7e0a04c00
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b141754b7fa1f048fb27dfbd5cb3491419156273
          sha1: b141754b7fa1f048fb27dfbd5cb3491419156273
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-bb119d957e331a1dbca91fbdf00f298088218e5b
          sha1: bb119d957e331a1dbca91fbdf00f298088218e5b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-be757957bace28100e571ec7914765020be4a069
          sha1: be757957bace28100e571ec7914765020be4a069
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-23483406aab765c10a74a3466ea8c17322b997d6
          sha1: 23483406aab765c10a74a3466ea8c17322b997d6
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3e5af22650c3dc05dd324fdd87c4595c4f08b605
          sha1: 3e5af22650c3dc05dd324fdd87c4595c4f08b605
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f6f428b67598034dac69c41bf29327e7f565d6a4
          sha1: f6f428b67598034dac69c41bf29327e7f565d6a4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-46c4ae5719cb428be8c022557e2df893bda43ccd
          sha1: 46c4ae5719cb428be8c022557e2df893bda43ccd
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-466ab93ef55ce05da99c251ea88cdcfc8f1c2cfa
          sha1: 466ab93ef55ce05da99c251ea88cdcfc8f1c2cfa
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2032482eb97f0b650f11fd117791c9bc62125dee
          sha1: 2032482eb97f0b650f11fd117791c9bc62125dee
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5c9eae075fd7ffbf8580204dd30cc8986faef965
          sha1: 5c9eae075fd7ffbf8580204dd30cc8986faef965
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-958d0cd4df7cfc01ca69685e0f7a0254f0f6f3e6
          sha1: 958d0cd4df7cfc01ca69685e0f7a0254f0f6f3e6
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5ba9209755605f3d72019c7131a2e92ac503901d
          sha1: 5ba9209755605f3d72019c7131a2e92ac503901d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-cc6af45944c413a683fe728d37a574103193f6f5
          sha1: cc6af45944c413a683fe728d37a574103193f6f5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-86fee25d99f53ce85d4b29ff84a327a025d893a2
          sha1: 86fee25d99f53ce85d4b29ff84a327a025d893a2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c7ed89cf6556ed18312f32d2b3239c6ede75a2be
          sha1: c7ed89cf6556ed18312f32d2b3239c6ede75a2be
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a47fe407290b11b8cd0c136ad0636eeb9d4fcb41
          sha1: a47fe407290b11b8cd0c136ad0636eeb9d4fcb41
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-aa658a2a68a11fd62ca31b1442e191f60232f607
          sha1: aa658a2a68a11fd62ca31b1442e191f60232f607
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4874120804d702dde293ebddfad26c5fe4993f9c
          sha1: 4874120804d702dde293ebddfad26c5fe4993f9c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-687ea7460a45ff122ef9137a6b5bde331153fce8
          sha1: 687ea7460a45ff122ef9137a6b5bde331153fce8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fb2eb01955dfaf6b6699d9de576bedcee0f85d5c
          sha1: fb2eb01955dfaf6b6699d9de576bedcee0f85d5c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f5074ccafe24d656d2b3a3f29442c03fcadee21e
          sha1: f5074ccafe24d656d2b3a3f29442c03fcadee21e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-6c020673c9428839a7aeac4d5276791e5cfa58e4
          sha1: 6c020673c9428839a7aeac4d5276791e5cfa58e4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ebfe846ad29b420ab8d4aceb698cb2a1442f0efa
          sha1: ebfe846ad29b420ab8d4aceb698cb2a1442f0efa
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4606deb2beb818ce53fe291d1afce917498df181
          sha1: 4606deb2beb818ce53fe291d1afce917498df181
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-d00579da938ecee18743ead0ee89fefa5e97b108
          sha1: d00579da938ecee18743ead0ee89fefa5e97b108
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-cb74ede59ee7e144369677cdde1f15fe2db0ae79
          sha1: cb74ede59ee7e144369677cdde1f15fe2db0ae79
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5c29160c7ccbd92cf5617d7ef3f40f36f75ae922
          sha1: 5c29160c7ccbd92cf5617d7ef3f40f36f75ae922
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f31d6c70fe394ca509565efcd32abff3a5795b2a
          sha1: f31d6c70fe394ca509565efcd32abff3a5795b2a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8e8a5e0664af2aaeb0c4aa0f243271bbbdf8455a
          sha1: 8e8a5e0664af2aaeb0c4aa0f243271bbbdf8455a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3657df383669a651a2d7717f93e59fbd9a8458c4
          sha1: 3657df383669a651a2d7717f93e59fbd9a8458c4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-91e1f07967dc42f50b5bdb7a2f5657f49ada81b8
          sha1: 91e1f07967dc42f50b5bdb7a2f5657f49ada81b8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4da3ac91b78ba3bf107bd227a93d87175562325c
          sha1: 4da3ac91b78ba3bf107bd227a93d87175562325c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-e80f7506c2abe7ae41286bb92fc31d961a4a7300
          sha1: e80f7506c2abe7ae41286bb92fc31d961a4a7300
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-675a4cb9fb3122a20fdd9e04582d81e53e064ed0
          sha1: 675a4cb9fb3122a20fdd9e04582d81e53e064ed0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-eae4a69069871725dd9aaa912201ba14d6e2b477
          sha1: eae4a69069871725dd9aaa912201ba14d6e2b477
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c1140f20dc4fa81f6544c761dc41597eed9be1d7
          sha1: c1140f20dc4fa81f6544c761dc41597eed9be1d7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0cfa4965a24a1978a90ff7f39e3ec896e8b67ff7
          sha1: 0cfa4965a24a1978a90ff7f39e3ec896e8b67ff7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-abf55eb3a8618adcacb41b92becb29f35c7f2b76
          sha1: abf55eb3a8618adcacb41b92becb29f35c7f2b76
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-92b9de14283dbd52dc610d0ca97fa9cb8fdfdc0e
          sha1: 92b9de14283dbd52dc610d0ca97fa9cb8fdfdc0e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-52456b2eba08a3babce743ef1ccb4734a5858151
          sha1: 52456b2eba08a3babce743ef1ccb4734a5858151
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7a63728d5ff7ae4925019901888ea73492f7af7a
          sha1: 7a63728d5ff7ae4925019901888ea73492f7af7a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-98bb1d1f034ee8abbf65e4b5b39e1a87747aaed5
          sha1: 98bb1d1f034ee8abbf65e4b5b39e1a87747aaed5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-991c2ac383801ecd3b0bf40c0c8595dd216bb988
          sha1: 991c2ac383801ecd3b0bf40c0c8595dd216bb988
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3ab44c48d137a18fa7013acdb3c0e37c8555976e
          sha1: 3ab44c48d137a18fa7013acdb3c0e37c8555976e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5b1a1a17ed27fe3a13608bcf0c699ff676ab697b
          sha1: 5b1a1a17ed27fe3a13608bcf0c699ff676ab697b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-a4b872b65eecb125bfae2270fbad337c9af128c7
          sha1: a4b872b65eecb125bfae2270fbad337c9af128c7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f362ae1f72525138b0b5e6240fc480f72148712f
          sha1: f362ae1f72525138b0b5e6240fc480f72148712f
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2e5fc034fb1a9a64fb4b21cfa639f2ab96bc2fc5
          sha1: 2e5fc034fb1a9a64fb4b21cfa639f2ab96bc2fc5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-3bc014ecf2a1badee5b1aa19e8b99273134f9590
          sha1: 3bc014ecf2a1badee5b1aa19e8b99273134f9590
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-edcf659e423d24a5a15939e55310d4f84d7c0270
          sha1: edcf659e423d24a5a15939e55310d4f84d7c0270
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2cd4f86422fe3da79641d5b0ac1781d29a329824
          sha1: 2cd4f86422fe3da79641d5b0ac1781d29a329824
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-64a66e8320927576911c6cc05506b0d05f9353bc
          sha1: 64a66e8320927576911c6cc05506b0d05f9353bc
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5e1983f90fccf7bbc145b613922765bf8ca8fb45
          sha1: 5e1983f90fccf7bbc145b613922765bf8ca8fb45
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-36b73d5a1bc69e6a42e0792f627c3518c00d972e
          sha1: 36b73d5a1bc69e6a42e0792f627c3518c00d972e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-740c9da267c7622354a24c5a69c355ba2fba504d
          sha1: 740c9da267c7622354a24c5a69c355ba2fba504d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-c69c243d883d319e5a883dc5a19be149db9903fd
          sha1: c69c243d883d319e5a883dc5a19be149db9903fd
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-587ec3f55f364f7d867b5d886b39754bc442cc0c
          sha1: 587ec3f55f364f7d867b5d886b39754bc442cc0c
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ab47465384b8491b0c382082072dcabd8b534c3b
          sha1: ab47465384b8491b0c382082072dcabd8b534c3b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-f441bb1c2088e9ce6684765a75869a72817be39d
          sha1: f441bb1c2088e9ce6684765a75869a72817be39d
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4e21157e01e07202b91274d19c1fb2849977d9e0
          sha1: 4e21157e01e07202b91274d19c1fb2849977d9e0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b24b967e00ce6ee8984ddfbcb9024501a7828a15
          sha1: b24b967e00ce6ee8984ddfbcb9024501a7828a15
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-63675b1969d5437384851e0e543b2fe9785334ce
          sha1: 63675b1969d5437384851e0e543b2fe9785334ce
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-d75222f3f53099810f0483a44e2067b5fd667ff2
          sha1: d75222f3f53099810f0483a44e2067b5fd667ff2
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b7fc26a9ef3a4568748734e24c29f2953ad6cdd8
          sha1: b7fc26a9ef3a4568748734e24c29f2953ad6cdd8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-255b2340fcab23b6a1b2d9ba15444bfe9221576e
          sha1: 255b2340fcab23b6a1b2d9ba15444bfe9221576e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5f03ad96982fca914ec34525c43154b8282e3b4a
          sha1: 5f03ad96982fca914ec34525c43154b8282e3b4a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-baef925d5d56ef8741e755cb023ddebed25821ee
          sha1: baef925d5d56ef8741e755cb023ddebed25821ee
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4bcf4796aa68cde64922aa13fbfd2b3111c10526
          sha1: 4bcf4796aa68cde64922aa13fbfd2b3111c10526
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-19d3a7ad02d38c29830f6491da7ea1306e159125
          sha1: 19d3a7ad02d38c29830f6491da7ea1306e159125
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-e66626ae5c58473e7f591b4fb2ce0f0525c3060a
          sha1: e66626ae5c58473e7f591b4fb2ce0f0525c3060a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-7da11f49670436e0f7c15060c92578f62c73c3f5
          sha1: 7da11f49670436e0f7c15060c92578f62c73c3f5
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-782e80e6e71ab05b53bd5f0ca2db079f8e86b243
          sha1: 782e80e6e71ab05b53bd5f0ca2db079f8e86b243
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-90f28c2756042a30bc748b8a027b7e4c85bc6bf7
          sha1: 90f28c2756042a30bc748b8a027b7e4c85bc6bf7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8a33f1150d816462d01c933a38b0e0b628ac8875
          sha1: 8a33f1150d816462d01c933a38b0e0b628ac8875
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fa66a1498eb1fac5b36811d5c1d6ba1540ffc824
          sha1: fa66a1498eb1fac5b36811d5c1d6ba1540ffc824
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-de9a54466db92a8184bcc8966e1f5460f061ed38
          sha1: de9a54466db92a8184bcc8966e1f5460f061ed38
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5a441071468435150437508ee33f40bca60399c8
          sha1: 5a441071468435150437508ee33f40bca60399c8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0be2f12ef9f8b0cb3c03758d02a77ef4e9f1dd06
          sha1: 0be2f12ef9f8b0cb3c03758d02a77ef4e9f1dd06
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-821f8bfc2fe9b57712a40723ae4983712f568fc7
          sha1: 821f8bfc2fe9b57712a40723ae4983712f568fc7
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5bb35fe923831c1f3b5ae916c0d65cff24c2e3ac
          sha1: 5bb35fe923831c1f3b5ae916c0d65cff24c2e3ac
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-1dd3c8e53909d6cf35ade5cf85cd7430e5c655f9
          sha1: 1dd3c8e53909d6cf35ade5cf85cd7430e5c655f9
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-02921e79852e8530911ff89a4beaf7e151c0e8d3
          sha1: 02921e79852e8530911ff89a4beaf7e151c0e8d3
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b008b34bd86532732c8ad83a1dc0bd77f7014b10
          sha1: b008b34bd86532732c8ad83a1dc0bd77f7014b10
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-09822a1d62ee65b5943831fc3257e9ee8dcbbfb8
          sha1: 09822a1d62ee65b5943831fc3257e9ee8dcbbfb8
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-564384fe12ddb4d37b96b90852b7cb94429a62ae
          sha1: 564384fe12ddb4d37b96b90852b7cb94429a62ae
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-255505f232a52e1ccb09b376e6eaa031290e1b60
          sha1: 255505f232a52e1ccb09b376e6eaa031290e1b60
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-d5d524dadb595d7469498eb26a04dc4e315793df
          sha1: d5d524dadb595d7469498eb26a04dc4e315793df
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-fdab1cf0d485820907d7541266d69b70e1d3d16b
          sha1: fdab1cf0d485820907d7541266d69b70e1d3d16b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0aba5ba13c4e3f757a6f13e918712455538a6e8f
          sha1: 0aba5ba13c4e3f757a6f13e918712455538a6e8f
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-abbe6347ff3a54fe1c165874ebe36208549d1b9e
          sha1: abbe6347ff3a54fe1c165874ebe36208549d1b9e
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-86c64440c9169d94bffb58b523da1db00c896703
          sha1: 86c64440c9169d94bffb58b523da1db00c896703
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-ca20b569be556ff56ed02712547ee0c5b9123f28
          sha1: ca20b569be556ff56ed02712547ee0c5b9123f28
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-43d4d019c415dd4168ae83fc5e6db686b36856df
          sha1: 43d4d019c415dd4168ae83fc5e6db686b36856df
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-2704af09708a97dc23a5ccbc65a46f3e786556f0
          sha1: 2704af09708a97dc23a5ccbc65a46f3e786556f0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b14c5943d463d358b0a7f75cf80bf24e5d5cc384
          sha1: b14c5943d463d358b0a7f75cf80bf24e5d5cc384
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-0ff1696c753b4be1f16c287f390097ef44a2d679
          sha1: 0ff1696c753b4be1f16c287f390097ef44a2d679
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9b875e1256d679d96615bf4bfdde63d3d813bab4
          sha1: 9b875e1256d679d96615bf4bfdde63d3d813bab4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-cb3232fdb9d742c8a07fb5eecb7d88a8deaf01f1
          sha1: cb3232fdb9d742c8a07fb5eecb7d88a8deaf01f1
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-528a0cfb96e8631ec6f1774ab59422333a6387c4
          sha1: 528a0cfb96e8631ec6f1774ab59422333a6387c4
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-b05e9d452118ed242ee794e88c8e20f145027c79
          sha1: b05e9d452118ed242ee794e88c8e20f145027c79
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-5d70b11d36dce08c896415ca7254b8c727803501
          sha1: 5d70b11d36dce08c896415ca7254b8c727803501
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-4926a51010b0ea8c190165d88157cf2f66a4a25b
          sha1: 4926a51010b0ea8c190165d88157cf2f66a4a25b
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-8498a1555b16155859a1de011786db7bb6f3012a
          sha1: 8498a1555b16155859a1de011786db7bb6f3012a
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-9dcf5191d5fe201712ca9111a866ed748d04354f
          sha1: 9dcf5191d5fe201712ca9111a866ed748d04354f
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-75309b45f32e41121b2deaf8f4b1d16d209f51d0
          sha1: 75309b45f32e41121b2deaf8f4b1d16d209f51d0
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
      - binary_linux_build:
          name: binary_linux_manywheel_3_6m_cu101_devtoolset7_nightly_build-78a34d3205ef82ccdb60ed8c8162666c0b46a435
          sha1: 78a34d3205ef82ccdb60ed8c8162666c0b46a435
          build_environment: "manywheel 3.6m cu101 devtoolset7"
          requires:
            - setup
          docker_image: "pytorch/manylinux-cuda101"
