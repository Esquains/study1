#
# .zshrc is sourced in interactive shells.
# It should contain commands to set up aliases,
# functions, options, key bindings, etc.
#

export PATH="/data/users/${USER}/fbsource/xplat/third-party/node/bin:$PATH"

function upload_buck_hh {
    HH_CLIENT="$HOME/fbsource/fbcode/buck-out/opt/bin/hphp/hack/src/hh_client_precopy/hh_client_precopy.opt"
    HH_SERVER="$HOME/fbsource/fbcode/buck-out/opt/bin/hphp/hack/src/hh_server_precopy/hh_server_precopy.opt"

    if [[ ! -f "$HH_CLIENT" ]]; then
        echo "not found: $HH_CLIENT" >&2
        return
    fi
    if [[ ! -f "$HH_SERVER" ]]; then
        echo "not found: $HH_SERVER" >&2
        return
    fi

    set -x
    TMP_DIR=$(mktemp -d)
    cp "$HH_CLIENT" "$TMP_DIR/hh_client"
    cp "$HH_SERVER" "$TMP_DIR/hh_server"
    strip "$TMP_DIR/hh_client"
    strip "$TMP_DIR/hh_server"
    pushd "$TMP_DIR"
    tar -czvf binaries.tgz hh_client hh_server
    popd
    clowder_put_paste "$TMP_DIR/binaries.tgz" | tee "$TMP_DIR/clowder_handle"
    clowder_handle=$(cat "$TMP_DIR/clowder_handle")
    rm -rf "$TMP_DIR"
    set +x

    echo "Run the following command on an OD:"
    echo ""
    echo 'TMP_DIR=$(mktemp -d) && clowder get '$clowder_handle' $TMP_DIR/bins.tgz && tar -xv -C $TMP_DIR -f $TMP_DIR/bins.tgz && hh --switch $TMP_DIR'
}

function pm () {
  pingme "done";
}

function tbgfl() {
  vim `tbgf $1`
}

function s() {
  yes | arc lint; hg addremove .; hg amend; jf submit; hg restack;
}

function d() {
  yes | arc lint; hg addremove .; hg amend; jf submit --draft; hg restack;
}

function gd() {
  lintrunner -a; git add .; git commit --amend --no-edit; ghstack;
}

function hs() {
  hg addremove; hg commit -m $1; jf submit;
}

function ha() {
  hg addremove; hg amend; hg restack; jf submit;
}

function rl() {
  hg bookmark -d arcpatch-$1; arc patch $1 && arc pull && arc rebuild && hg amend && yes | arc amend --revision $1 && jf submit && arc land;
}

function m() {
  vim $(myc);
}

function c() {
  clear; tmux clear-history; 
}

function buckcheck {
  buck build --keep-going \
    $(buck query "kind('^rust_(library|binary|test)$', '%s')" "$@" | \
      sed -e 's,$,#check,')
}

alias bl=' cd ~/fbsource/fbcode/devx_www/www-re-leaser; buck build @mode/opt //devx_www/www-re-leaser:www-re-leaser-leader && cp ~/fbsource/fbcode/buck-out/opt/gen/devx_www/www-re-leaser/www-re-leaser-leader#binary/www_re_leaser_leader ~/www; strip ~/www/www_re_leaser_leader';
alias bw=' cd ~/fbsource/fbcode/devx_www/www-re-leaser; buck build @mode/opt //devx_www/www-re-leaser:www-re-leaser-worker && cp ~/fbsource/fbcode/buck-out/opt/gen/devx_www/www-re-leaser/www-re-leaser-worker#binary/www_re_leaser_worker ~/www; strip ~/www/www_re_leaser_worker';
alias kd="kdestroy && kinit";
alias hcm="hg checkout master";
alias v="vim";
alias www="cd ~/www";
alias t0="tmux a -t www";
alias t1="tmux a -t www1";
alias t2="tmux a -t www2";
alias tt="tmux a -t temp";
alias k="clear";
alias hs="hg status";
alias ab="arc build";
alias ap="arc pull;";
alias ar="arc rebuild";
alias ae="arc pull; arc fix; hh";
alias apbr="ap; ab; ar";
alias adp="arc diff --preview";
alias amend="hg amend; hg amend --fixup";
alias schema="./scripts/relay/update-schema intern";
alias hd="cd ~/fbsource/fbcode/hphp";
alias fbcode="cd ~/fbsource/fbcode";
alias bh="hd; buck -c \"modern_build_rule.strategy=NONE\" build @mode/dev --show-json-output //hphp/hack/src:hh_server //hphp/hack/src:hh_client //hphp/hack/src:symlink_hh_server;";
alias bho="hd; buck -c \"modern_build_rule.strategy=NONE\" build @mode/opt --show-json-output //hphp/hack/src:hh_server //hphp/hack/src:hh_client //hphp/hack/src:symlink_hh_server;";
alias hp="cd ~/fbsource/fbcode/hphp";
alias es="cd ~/fbsource/fbcode/tupperware/config/elasticsearch";
alias qa="cd ~/fbsource/fbcode/internsearch/qa/scripts";
alias ds="cd /home/bobren/fbsource/fbcode/dataswarm-pipelines";
alias dsi="cd /home/bobren/fbsource/fbcode/dataswarm-pipelines/tasks/infrastructure/info_tools";
alias ilprn="tw scp tsp_prn/elasticsearch/elasticsearch-internsearch_ephemeral_prn-mixed-tsp_prn/0:/logs/stdout stdout.txt";
alias iprn="tw ssh tsp_prn/elasticsearch/elasticsearch-internsearch_ephemeral_prn-mixed-tsp_prn/0";
alias ifrc="tw ssh tsp_frc/elasticsearch/elasticsearch-internsearch_ephemeral_frc-mixed-tsp_frc/0";
alias ilfrc="tw scp tsp_frc/elasticsearch/elasticsearch-internsearch_ephemeral_frc-mixed-tsp_frc/0:/logs/stdout stdout.txt";
alias iatn="tw ssh tsp_atn/elasticsearch/elasticsearch-internsearch_ephemeral_atn-mixed-tsp_atn/0";
alias illa="tw ssh tsp_lla/elasticsearch/elasticsearch-internsearch_ephemeral_lla-mixed-tsp_lla/0";
alias tprn="tw ssh tsp_prn/elasticsearch/elasticsearch-tasks_ephemeral_prn-mixed-tsp_prn/0";
alias tfrc="tw ssh tsp_frc/elasticsearch/elasticsearch-tasks_ephemeral_frc-mixed-tsp_frc/0";
alias tatn="tw ssh tsp_atn/elasticsearch/elasticsearch-tasks_ephemeral_atn-mixed-tsp_atn/0";
alias tlla="tw ssh tsp_lla/elasticsearch/elasticsearch-tasks_ephemeral_lla-mixed-tsp_lla/0";

set -g history-limit 30000
bindkey "^R" history-incremental-search-backward
set -o vi
unsetopt nomatch

if [ -f $LOCAL_ADMIN_SCRIPTS/scm-prompt ]; then
  source $LOCAL_ADMIN_SCRIPTS/scm-prompt
fi

# Show the current bookmark or branch
function parse_hg_branch {
  if [[ -n $(_dotfiles_scm_info) ]]; then
    # wrap in parens
    echo "$(_dotfiles_scm_info)" | tr -d ' '
  fi
}

autoload -U colors && colors
function hgproml {
  local user="%{$fg[green]%}%n"
  local at="%{$fg[yellow]%}@"
  local host="%{$fg[green]%}%m"

  export PS1="[%T] $host:%{$fg[yellow]%}%d %{$reset_color%}"
  PS2='> '
  PS4='+ '
}
hgproml

setopt PROMPT_SUBST

autoload -U compinit
compinit

#allow tab completion in the middle of a word
setopt COMPLETE_IN_WORD

## keep background processes at full speed
#setopt NOBGNICE
## restart running processes on exit
#setopt HUP

## history
#setopt APPEND_HISTORY
## for sharing history between zsh processes
#setopt INC_APPEND_HISTORY
#setopt SHARE_HISTORY

## never ever beep ever
#setopt NO_BEEP

## automatically decide when to page a list of completions
#LISTMAX=0

## disable mail checking
#MAILCHECK=0

# autoload -U colors
#colors

HISTSIZE=50000               #How many lines of history to keep in memory
HISTFILE=~/.zsh_history     #Where to save history to disk
SAVEHIST=50000               #Number of history entries to save to disk
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt    incappendhistory  #Immediately append to the history file, not just when a term is killed

[ -z "$ZSH_NAME"  ] && [ -f ~/.fzf.bash  ] && source ~/.fzf.bash

function vf() {
  vim "/home/bobren/$(tbgs -i --sample $1 | head -n 1 | awk '{print $1}' | cut -d: -f1)"
}

export http_proxy=http://fwdproxy:8080
export https_proxy=http://fwdproxy:8080
export no_proxy=".fbcdn.net,.facebook.com,.thefacebook.com,.tfbnw.net,.fb.com,.fb"
export GIT_PROXY_SSL_CERT=$THRIFT_TLS_CL_CERT_PATH
export GIT_PROXY_SSL_KEY=$THRIFT_TLS_CL_KEY_PATH
export HTTPS_PROXY=https://fwdproxy:8082

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# cargo/rustc/rust-analyzer/rustfmt/etc. are here
export PATH="/data/users/$USER/fbsource/fbcode/third-party-buck/platform007/build/rust/bin:$PATH"
# # cargo-fbcode is here
export PATH="/data/users/$USER/fbsource/fbcode/common/rust/cargo_from_buck/bin:$PATH"
# # need proxy configured (may need sudo feature install ttls_fwdproxy)
export CARGO_HTTP_PROXY=http://fwdproxy:8080

# opam configuration
test -r /home/bobren/.opam/opam-init/init.zsh && . /home/bobren/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# To save every command before it is executed (this is different from bash's `history -a`):
setopt INC_APPEND_HISTORY
#
# # To share history across all sessions:
setopt SHARE_HISTORY
#
# # Remove duplicate entries:
setopt HIST_IGNORE_DUPS
#
# # Save the history file without a newline (avoids problems with `fortune`, for example):
setopt HIST_SAVE_NO_DUPS

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/bobren/local/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/bobren/local/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/bobren/local/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/bobren/local/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

