# DO NOT EDIT! This file was generated by jschema_to_python version 0.0.1.dev29,
# with extension for dataclasses and type annotation.

from __future__ import annotations

import dataclasses
from typing import Literal, Optional

from torch.onnx._internal.diagnostics.infra.sarif import _location, _property_bag


@dataclasses.dataclass
class Suppression:
    """A suppression that is relevant to a result."""

    kind: Literal["inSource", "external"] = dataclasses.field(
        metadata={"schema_property_name": "kind"}
    )
    guid: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "guid"}
    )
    justification: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "justification"}
    )
    location: _location.Location | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "location"}
    )
    properties: _property_bag.PropertyBag | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "properties"}
    )
    state: Literal["accepted", "underReview", "rejected"] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "state"}
    )


# flake8: noqa
