# DO NOT EDIT! This file was generated by jschema_to_python version 0.0.1.dev29,
# with extension for dataclasses and type annotation.

from __future__ import annotations

import dataclasses
from typing import Optional

from torch.onnx._internal.diagnostics.infra.sarif import (
    _artifact_content,
    _message,
    _property_bag,
)


@dataclasses.dataclass
class Region:
    """A region within an artifact where a result was detected."""

    byte_length: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "byteLength"}
    )
    byte_offset: int = dataclasses.field(
        default=-1, metadata={"schema_property_name": "byteOffset"}
    )
    char_length: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "charLength"}
    )
    char_offset: int = dataclasses.field(
        default=-1, metadata={"schema_property_name": "charOffset"}
    )
    end_column: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "endColumn"}
    )
    end_line: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "endLine"}
    )
    message: _message.Message | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "message"}
    )
    properties: _property_bag.PropertyBag | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "properties"}
    )
    snippet: _artifact_content.ArtifactContent | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "snippet"}
    )
    source_language: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "sourceLanguage"}
    )
    start_column: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "startColumn"}
    )
    start_line: int | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "startLine"}
    )


# flake8: noqa
