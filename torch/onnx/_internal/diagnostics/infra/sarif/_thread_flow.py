# DO NOT EDIT! This file was generated by jschema_to_python version 0.0.1.dev29,
# with extension for dataclasses and type annotation.

from __future__ import annotations

import dataclasses
from typing import Any, List, Optional

from torch.onnx._internal.diagnostics.infra.sarif import (
    _message,
    _property_bag,
    _thread_flow_location,
)


@dataclasses.dataclass
class ThreadFlow:
    """Describes a sequence of code locations that specify a path through a single thread of execution such as an operating system or fiber."""

    locations: list[_thread_flow_location.ThreadFlowLocation] = dataclasses.field(
        metadata={"schema_property_name": "locations"}
    )
    id: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "id"}
    )
    immutable_state: Any = dataclasses.field(
        default=None, metadata={"schema_property_name": "immutableState"}
    )
    initial_state: Any = dataclasses.field(
        default=None, metadata={"schema_property_name": "initialState"}
    )
    message: _message.Message | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "message"}
    )
    properties: _property_bag.PropertyBag | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "properties"}
    )


# flake8: noqa
