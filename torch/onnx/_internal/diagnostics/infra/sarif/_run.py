# DO NOT EDIT! This file was generated by jschema_to_python version 0.0.1.dev29,
# with extension for dataclasses and type annotation.

from __future__ import annotations

import dataclasses
from typing import Any, List, Literal, Optional

from torch.onnx._internal.diagnostics.infra.sarif import (
    _address,
    _artifact,
    _conversion,
    _external_property_file_references,
    _graph,
    _invocation,
    _logical_location,
    _property_bag,
    _result,
    _run_automation_details,
    _special_locations,
    _thread_flow_location,
    _tool,
    _tool_component,
    _version_control_details,
    _web_request,
    _web_response,
)


@dataclasses.dataclass
class Run:
    """Describes a single run of an analysis tool, and contains the reported output of that run."""

    tool: _tool.Tool = dataclasses.field(metadata={"schema_property_name": "tool"})
    addresses: list[_address.Address] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "addresses"}
    )
    artifacts: list[_artifact.Artifact] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "artifacts"}
    )
    automation_details: None | (
        _run_automation_details.RunAutomationDetails
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "automationDetails"}
    )
    baseline_guid: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "baselineGuid"}
    )
    column_kind: None | (
        Literal["utf16CodeUnits", "unicodeCodePoints"]
    ) = dataclasses.field(default=None, metadata={"schema_property_name": "columnKind"})
    conversion: _conversion.Conversion | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "conversion"}
    )
    default_encoding: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "defaultEncoding"}
    )
    default_source_language: str | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "defaultSourceLanguage"}
    )
    external_property_file_references: None | (
        _external_property_file_references.ExternalPropertyFileReferences
    ) = dataclasses.field(
        default=None,
        metadata={"schema_property_name": "externalPropertyFileReferences"},
    )
    graphs: list[_graph.Graph] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "graphs"}
    )
    invocations: list[_invocation.Invocation] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "invocations"}
    )
    language: str = dataclasses.field(
        default="en-US", metadata={"schema_property_name": "language"}
    )
    logical_locations: None | (
        list[_logical_location.LogicalLocation]
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "logicalLocations"}
    )
    newline_sequences: list[str] = dataclasses.field(
        default_factory=lambda: ["\r\n", "\n"],
        metadata={"schema_property_name": "newlineSequences"},
    )
    original_uri_base_ids: Any = dataclasses.field(
        default=None, metadata={"schema_property_name": "originalUriBaseIds"}
    )
    policies: list[_tool_component.ToolComponent] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "policies"}
    )
    properties: _property_bag.PropertyBag | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "properties"}
    )
    redaction_tokens: list[str] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "redactionTokens"}
    )
    results: list[_result.Result] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "results"}
    )
    run_aggregates: None | (
        list[_run_automation_details.RunAutomationDetails]
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "runAggregates"}
    )
    special_locations: None | (
        _special_locations.SpecialLocations
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "specialLocations"}
    )
    taxonomies: list[_tool_component.ToolComponent] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "taxonomies"}
    )
    thread_flow_locations: None | (
        list[_thread_flow_location.ThreadFlowLocation]
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "threadFlowLocations"}
    )
    translations: list[_tool_component.ToolComponent] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "translations"}
    )
    version_control_provenance: None | (
        list[_version_control_details.VersionControlDetails]
    ) = dataclasses.field(
        default=None, metadata={"schema_property_name": "versionControlProvenance"}
    )
    web_requests: list[_web_request.WebRequest] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "webRequests"}
    )
    web_responses: list[_web_response.WebResponse] | None = dataclasses.field(
        default=None, metadata={"schema_property_name": "webResponses"}
    )


# flake8: noqa
