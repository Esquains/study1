from typing import List, Optional, overload, Sequence, Tuple, Union

from torch import Generator, memory_format, Tensor
from torch.types import (
    _bool,
    _complex,
    _device,
    _dtype,
    _float,
    _int,
    _size,
    Number,
    SymInt,
)

# Defined in tools/autograd/templates/python_nn_functions.cpp
# Definition extracted from aten/src/ATen/native/native_functions.yaml

${nn_function_hints}

# Defined at tools/autograd/templates/python_nn_functions.cpp
@overload
def _parse_to(
    device: _device,
    dtype: _dtype,
    non_blocking: _bool,
    copy: _bool,
    *,
    memory_format: memory_format,
) -> Tuple[_device, _dtype, _bool, memory_format]: ...
@overload
def _parse_to(
    dtype: _dtype,
    non_blocking: _bool,
    copy: _bool,
    *,
    memory_format: memory_format,
) -> Tuple[_device, _dtype, _bool, memory_format]: ...
@overload
def _parse_to(
    tensor: Tensor,
    non_blocking: _bool,
    copy: _bool,
    *,
    memory_format: memory_format,
) -> Tuple[_device, _dtype, _bool, memory_format]: ...
