// Example IDL file for our monster's schema.

// TODO(gmagogsfm): Update namespace.
namespace torch.jit.mobile.serialization;

table Int {
  int_val:int;
}

table Bool {
  bool_val:bool;
}

table Double{
  double_val:double;
}

table None{
  unused:byte;
}

table Tensor {
  data:[byte];
}

table TensorMetadata {
  // Save name
}

// Is it needed to represent other types?
union IValue {
  None,
  Int,
  Bool,
  Double,
  Tensor,
  TensorMetadata
}

table IValue2 {
  pickled:[byte];
}

table Instruction {
  // Should op be enum instead?
  op:byte;
  n:ushort;
  x:int;
}

table Operator {
  name:string;
  overload_name:string;
  num_args_serialized:int = -1;
}

table Code {
  instructions:[Instruction];
  operators:[Operator];
  constants:[int]; // positions
  types:[string];
  register_size:int;
}

table Arg {
  name:string;
  // Why do we use string to represent types
  // rather than index into Code.types?
  type:string;
  default_value:int;  // position into ivalues
}

table Schema {
  arguments:[Arg];
  returns:[Arg];
}

table DebugInfo {
  debug_handle:[long];
}

table Function {
  qn:string;
  code:Code;
  schema:Schema;
  debug_info:DebugInfo;
}

table Module {
  methods:[Function];
  // ivalues: [IValue2]
}

root_type Module;