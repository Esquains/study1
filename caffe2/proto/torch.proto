syntax = "proto2";

import "caffe2/proto/caffe2.proto";

package torch;

enum ProtoVersion {
  _START_VERSION = 0;
  IR_VERSION_NEWEST = 0x0000000000000101;
}

message MethodDef {
  // method name
  optional string name = 1; // method name

  // static graph
  optional caffe2.NetDef graph = 2;
  // method is represented as torch script
  optional string torch_script = 3;

  // the names of inputs and outputs
  repeated string inputs = 4;
  repeated string outputs = 5;

  // method type, can be one of the following:
  //   1) MAIN, the main method, by default is `forward` method
  //   2) INIT, only run once for initialization
  //   3) REGULAR, may run multiple times at runtime
  enum MethodType {
    MAIN = 1;
    INIT = 2;
    REGULAR = 3;
  }

  optional MethodType method_type = 6;

  optional string debug_info = 7;

  repeated caffe2.Argument annotations = 8;
}


message ModuleDef {
  repeated ModuleDef submodules = 1;

  // We suppose to store the modules in one of the following format:
  //   - methods (static graph or torch script)
  //   - pickle
  //   - cpp_arena
  repeated MethodDef methods = 2;
  // because the old pickle modules may not be supported by torch_script,
  // have to stored as pickle_arena at this moment.
  optional bytes pickle_arena = 3;
  // should be exposed by the Class Archive, so user can save
  // module specific data which cannot be store in the graph or torch_script
  optional bytes cpp_arena = 4;

  // the names of inputs and outputs of the module are inferred
  // from the main method.

  optional string debug_info = 5;

  repeated caffe2.Argument annotations = 6;
}

message ModelDef {
  optional int64 ir_version = 1;

  // main module of the model
  optional ModuleDef main_module = 2;

  repeated caffe2.TensorProto parameters = 3;
  repeated caffe2.TensorProto value_infos = 4;

  // to distinguish whether exported from c2 or torch
  optional string producer_name = 5;

  // put build version here
  optional string producer_version = 6;

  optional string name = 7;

  optional string debug_info = 8;

  // annotations, it is used for MetaNetDef's metadata
  repeated caffe2.Argument annotations = 9;

}
