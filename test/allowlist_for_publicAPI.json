{"torch.amp": ["autocast"], "torch.amp.autocast_mode": ["autocast", "autocast_decorator"], "torch.ao.nn.sparse.quantized": ["Linear", "LinearPackedParams"], "torch.ao.nn.sparse.quantized.dynamic": ["Linear"], "torch.ao.nn.sparse.quantized.dynamic.linear": ["Linear"], "torch.ao.nn.sparse.quantized.linear": ["Linear", "LinearPackedParams"], "torch.ao.nn.sparse.quantized.utils": ["LinearBlockSparsePattern", "is_valid_linear_block_sparse_pattern"], "torch.ao.quantization": ["has_no_children_ignoring_parametrizations", "DeQuantStub", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FixedQParamsObserver", "FusedMovingAvgObsFakeQuantize", "HistogramObserver", "MatchAllNode", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "QConfig", "QConfigDynamic", "QuantStub", "QuantType", "QuantWrapper", "RecordingObserver", "ReuseInputObserver", "activation_is_memoryless", "add_module_to_qconfig_obs_ctr", "add_observer_", "add_quant_dequant", "assert_valid_qconfig", "calculate_qmin_qmax", "check_min_max_valid", "convert", "convert_dynamic_jit", "convert_jit", "default_affine_fixed_qparams_fake_quant", "default_affine_fixed_qparams_observer", "default_debug_observer", "default_dynamic_fake_quant", "default_dynamic_quant_observer", "default_embedding_fake_quant", "default_embedding_fake_quant_4bit", "default_eval_fn", "default_fake_quant", "default_float_qparams_observer", "default_float_qparams_observer_4bit", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_histogram_observer", "default_observer", "default_per_channel_weight_fake_quant", "default_per_channel_weight_observer", "default_placeholder_observer", "default_reuse_input_observer", "default_symmetric_fixed_qparams_fake_quant", "default_symmetric_fixed_qparams_observer", "default_weight_fake_quant", "default_weight_observer", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_conv_bn", "fuse_conv_bn_jit", "fuse_conv_bn_relu", "fuse_convtranspose_bn", "fuse_linear_bn", "fuse_modules", "fuse_modules_qat", "fused_per_channel_wt_fake_quant_range_neg_127_to_127", "fused_wt_fake_quant_range_neg_127_to_127", "get_combined_dict", "get_default_compare_output_module_list", "get_default_dynamic_quant_module_mappings", "get_default_dynamic_sparse_quant_module_mappings", "get_default_float_to_quantized_operator_mappings", "get_default_qat_module_mappings", "get_default_qat_qconfig", "get_default_qat_qconfig_dict", "get_default_qconfig", "get_default_qconfig_dict", "get_default_qconfig_propagation_list", "get_default_static_quant_module_mappings", "get_default_static_quant_reference_module_mappings", "get_default_static_sparse_quant_module_mappings", "get_dynamic_quant_module_class", "get_embedding_qat_module_mappings", "get_embedding_static_quant_module_mappings", "get_fuser_method", "get_fuser_method_new", "get_observer_dict", "get_observer_state_dict", "get_qparam_dict", "get_quantized_operator", "get_static_quant_module_class", "get_unique_devices_", "get_valid_patterns", "is_activation_post_process", "is_reuse_input_qconfig", "load_observer_state_dict", "no_observer_set", "per_channel_weight_observer_range_neg_127_to_127", "prepare", "prepare_dynamic_jit", "prepare_jit", "prepare_qat", "propagate_qconfig_", "qconfig_equals", "quant_type_to_str", "quantize", "quantize_dynamic", "quantize_dynamic_jit", "quantize_jit", "quantize_qat", "register_activation_post_process_hook", "reverse2", "reverse3", "reverse_sequential_wrapper2", "script_qconfig", "script_qconfig_dict", "sequential_wrapper2", "swap_module", "weight_observer_range_neg_127_to_127"], "torch.ao.quantization.fake_quantize": ["FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer"], "torch.ao.quantization.fuse_modules": ["fuse_known_modules", "fuse_modules", "fuse_modules_qat"], "torch.ao.quantization.fuser_method_mappings": ["fuse_conv_bn", "fuse_conv_bn_relu", "fuse_convtranspose_bn", "fuse_linear_bn", "get_fuser_method", "get_fuser_method_new", "get_valid_patterns", "reverse2", "reverse3", "reverse_sequential_wrapper2", "sequential_wrapper2"], "torch.ao.quantization.fx.backend_config": ["get_native_backend_config_dict", "get_tensorrt_backend_config_dict", "validate_backend_config_dict"], "torch.ao.quantization.fx.backend_config.fuse_handler": ["get_fuse_handler_cls"], "torch.ao.quantization.fx.backend_config.native": ["get_native_backend_config_dict"], "torch.ao.quantization.fx.backend_config.observation_type": ["ObservationType"], "torch.ao.quantization.fx.backend_config.quantize_handler": ["get_quantize_handler_cls"], "torch.ao.quantization.fx.backend_config.tensorrt": ["get_tensorrt_backend_config_dict"], "torch.ao.quantization.fx.backend_config.utils": ["get_native_quant_patterns", "get_fuser_method_mapping", "get_fusion_pattern_to_extra_inputs_getter", "get_fusion_pattern_to_fuse_handler_cls", "get_fusion_pattern_to_root_node_getter", "get_module_to_qat_module", "get_pattern_to_dtype_configs", "get_pattern_to_input_type_to_index", "get_pattern_to_quantize_handlers", "get_quantized_reference_module_mapping"], "torch.ao.quantization.fx.convert": ["convert", "convert_custom_module", "convert_standalone_module", "convert_weighted_module", "duplicate_dequantize_node", "duplicate_quantize_dynamic_node", "get_module_path_and_prefix", "has_none_qconfig", "insert_dequantize_node", "maybe_get_observer_for_node", "maybe_recursive_remove_dequantize", "remove_extra_dequantize", "remove_quant_dequant_pairs", "restore_state", "run_weight_observers"], "torch.ao.quantization.fx.fuse": ["fuse"], "torch.ao.quantization.fx.fusion_patterns": ["DefaultFuseHandler", "FuseHandler"], "torch.ao.quantization.fx.graph_module": ["FusedGraphModule", "ObservedGraphModule", "ObservedStandaloneGraphModule", "QuantizedGraphModule", "is_observed_module", "is_observed_standalone_module"], "torch.ao.quantization.fx.lower_to_fbgemm": ["lower_to_fbgemm"], "torch.ao.quantization.fx.match_utils": ["find_matches", "is_match"], "torch.ao.quantization.fx.pattern_utils": ["sorted_patterns_dict", "get_default_fusion_patterns", "get_default_output_activation_post_process_map", "get_default_quant_patterns", "register_fusion_pattern", "register_quant_pattern"], "torch.ao.quantization.fx.prepare": ["add_matched_node_name_to_set", "get_arg_target_compute_dtype_as_input_to_node", "get_arg_target_dtype_as_input_to_node", "get_arg_target_dtype_as_output", "get_target_activation_dtype_for_node", "insert_observer", "insert_observers_for_model", "is_activation_post_process_node", "is_input_arg_dtype_supported_by_backend", "is_observer_in_same_graph", "is_output_dtype_supported_by_backend", "is_pattern_dtype_config_supported_by_backend", "maybe_insert_input_equalization_observers_for_node", "maybe_insert_input_observer_for_arg_or_kwarg", "maybe_insert_input_observers_for_node", "maybe_insert_observers_before_graph_output", "maybe_insert_output_observer_for_node", "maybe_make_input_output_share_observers", "maybe_propagate_dtype_for_node", "node_arg_is_bias", "node_arg_is_weight", "prepare", "prepare_get_standalone_module_configs", "propagate_dtypes_for_known_nodes", "qat_swap_modules", "remove_output_observer", "run_prepare_fx_on_standalone_modules", "save_state", "swap_custom_module_to_observed"], "torch.ao.quantization.fx.qconfig_utils": ["check_is_valid_config_dict", "check_is_valid_convert_custom_config_dict", "check_is_valid_fuse_custom_config_dict", "check_is_valid_prepare_custom_config_dict", "check_is_valid_qconfig_dict", "compare_prepare_convert_qconfig_dict", "generate_qconfig_map", "get_standalone_module_configs", "maybe_adjust_qconfig_for_module_name_object_type_order", "update_qconfig_for_fusion"], "torch.ao.quantization.fx.quantization_patterns": ["BatchNormQuantizeHandler", "BinaryOpQuantizeHandler", "CatQuantizeHandler", "ConvReluQuantizeHandler", "CopyNodeQuantizeHandler", "CustomModuleQuantizeHandler", "DefaultNodeQuantizeHandler", "EmbeddingQuantizeHandler", "FixedQParamsOpQuantizeHandler", "GeneralTensorShapeOpQuantizeHandler", "LinearReLUQuantizeHandler", "QuantizeHandler", "RNNDynamicQuantizeHandler", "StandaloneModuleQuantizeHandler"], "torch.ao.quantization.fx.utils": ["NodeInfo", "all_node_args_except_first", "all_node_args_have_no_tensors", "assert_and_get_unique_device", "collect_producer_nodes", "create_getattr_from_value", "create_node_from_old_node_preserve_meta", "create_qparam_nodes", "get_custom_module_class_keys", "get_linear_prepack_op_for_dtype", "get_new_attr_name_with_prefix", "get_non_observable_arg_indexes_and_types", "get_per_tensor_qparams", "get_qconv_op", "get_qconv_prepack_op", "get_quantize_node_info", "graph_module_from_producer_nodes", "graph_pretty_str", "is_get_tensor_info_node", "maybe_get_next_module", "node_return_type_is_int", "quantize_node", "return_arg_list"], "torch.ao.quantization.observer": ["FixedQParamsObserver", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "ReuseInputObserver", "default_affine_fixed_qparams_observer", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_float_qparams_observer_4bit", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_reuse_input_observer", "default_symmetric_fixed_qparams_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "per_channel_weight_observer_range_neg_127_to_127", "weight_observer_range_neg_127_to_127"], "torch.ao.quantization.qconfig": ["QConfig", "QConfigDynamic", "activation_is_memoryless", "add_module_to_qconfig_obs_ctr", "assert_valid_qconfig", "get_default_qat_qconfig", "get_default_qat_qconfig_dict", "get_default_qconfig", "get_default_qconfig_dict", "is_reuse_input_qconfig", "qconfig_equals"], "torch.ao.quantization.qconfig_dict_utils": ["convert_dict_to_ordered_dict", "get_flattened_qconfig_dict", "get_module_name_qconfig", "get_module_name_regex_qconfig", "get_object_type_qconfig", "maybe_adjust_qconfig_for_module_type_or_name", "update_qconfig_for_qat"], "torch.ao.quantization.quant_type": ["QuantType", "quant_type_to_str"], "torch.ao.quantization.quantization_mappings": ["get_default_compare_output_module_list", "get_default_dynamic_quant_module_mappings", "get_default_dynamic_sparse_quant_module_mappings", "get_default_float_to_quantized_operator_mappings", "get_default_qat_module_mappings", "get_default_qconfig_propagation_list", "get_default_static_quant_module_mappings", "get_default_static_quant_reference_module_mappings", "get_default_static_sparse_quant_module_mappings", "get_dynamic_quant_module_class", "get_embedding_qat_module_mappings", "get_embedding_static_quant_module_mappings", "get_quantized_operator", "get_static_quant_module_class", "no_observer_set"], "torch.ao.quantization.quantize": ["add_observer_", "add_quant_dequant", "convert", "get_observer_dict", "get_unique_devices_", "is_activation_post_process", "prepare", "prepare_qat", "propagate_qconfig_", "quantize", "quantize_dynamic", "quantize_qat", "register_activation_post_process_hook", "swap_module"], "torch.ao.quantization.quantize_jit": ["convert_dynamic_jit", "convert_jit", "fuse_conv_bn_jit", "prepare_dynamic_jit", "prepare_jit", "quantize_dynamic_jit", "quantize_jit", "script_qconfig", "script_qconfig_dict"], "torch.ao.quantization.stubs": ["DeQuantStub", "QuantStub", "QuantWrapper"], "torch.ao.quantization.utils": ["has_no_children_ignoring_parametrizations", "MatchAllNode", "activation_dtype", "activation_is_dynamically_quantized", "activation_is_int32_quantized", "activation_is_int8_quantized", "activation_is_statically_quantized", "calculate_qmin_qmax", "check_min_max_valid", "check_node", "get_combined_dict", "get_qconfig_dtypes", "get_qparam_dict", "get_quant_type", "get_swapped_custom_module_class", "getattr_from_fqn", "is_per_channel", "is_per_tensor", "op_is_int8_dynamically_quantized", "weight_dtype", "weight_is_quantized", "weight_is_statically_quantized"], "torch.ao.sparsity.experimental.pruner.base_pruner": ["BasePruner"], "torch.ao.sparsity.experimental.pruner.parametrization": ["ActivationReconstruction", "BiasHook", "PruningParametrization", "ZeroesParametrization"], "torch.ao.sparsity.scheduler.base_scheduler": ["BaseScheduler"], "torch.ao.sparsity.scheduler.lambda_scheduler": ["LambdaSL"], "torch.ao.sparsity.sparsifier.base_sparsifier": ["BaseSparsifier"], "torch.ao.sparsity.sparsifier.utils": ["FakeSparsity", "fqn_to_module", "module_to_fqn"], "torch.ao.sparsity.sparsifier.weight_norm_sparsifier": ["WeightNormSparsifier"], "torch.autograd": ["Function", "NestedIOFunction", "Variable", "backward", "detect_anomaly", "enable_grad", "grad", "gradcheck", "gradgradcheck", "inference_mode", "no_grad", "set_detect_anomaly", "set_grad_enabled", "variable"], "torch.autograd.anomaly_mode": ["detect_anomaly", "set_detect_anomaly"], "torch.autograd.forward_ad": ["UnpackedDualTensor", "dual_level", "enter_dual_level", "exit_dual_level", "make_dual", "unpack_dual"], "torch.autograd.function": ["BackwardCFunction", "Function", "FunctionCtx", "FunctionMeta", "InplaceFunction", "NestedIOFunction", "once_differentiable", "traceable"], "torch.autograd.functional": ["hessian", "hvp", "jacobian", "jvp", "vhp", "vjp"], "torch.autograd.grad_mode": ["enable_grad", "inference_mode", "no_grad", "set_grad_enabled"], "torch.autograd.gradcheck": ["GradcheckError", "check_outputs_same_dtype_and_shape", "get_analytical_jacobian", "get_numerical_jacobian", "get_numerical_jacobian_wrt_specific_input", "gradcheck", "gradgradcheck"], "torch.autograd.graph": ["save_on_cpu", "saved_tensors_hooks"], "torch.autograd.profiler": ["EnforceUnique", "EventList", "FunctionEvent", "MemRecordsAcc", "emit_nvtx", "kineto_step", "load_nvprof", "parse_nvprof_trace", "profile", "record_function"], "torch.autograd.profiler_legacy": ["profile"], "torch.autograd.profiler_util": ["EventList", "FormattedTimesMixin", "FunctionEvent", "FunctionEventAvg", "Interval", "Kernel", "MemRecordsAcc", "StringTable"], "torch.autograd.variable": ["Variable", "VariableMeta"], "torch.backends": ["ContextProp", "PropModule", "disable_global_flags", "flags_frozen"], "torch.backends.cuda": ["cuBLASModule", "cuFFTPlanCache", "cuFFTPlanCacheAttrContextProp", "cuFFTPlanCacheManager", "is_built", "preferred_linalg_library"], "torch.backends.mkl": ["is_available"], "torch.backends.openmp": ["is_available"], "torch.cpu.amp": ["autocast"], "torch.cpu.amp.autocast_mode": ["autocast"], "torch.cuda": ["BFloat16Storage", "BFloat16Tensor", "BoolStorage", "BoolTensor", "ByteStorage", "ByteTensor", "CUDAGraph", "CharStorage", "CharTensor", "ComplexDoubleStorage", "ComplexFloatStorage", "CudaError", "DeferredCudaCallError", "DoubleStorage", "DoubleTensor", "Event", "ExternalStream", "FloatStorage", "FloatTensor", "HalfStorage", "HalfTensor", "IntStorage", "IntTensor", "LongStorage", "LongTensor", "ShortStorage", "ShortTensor", "Stream", "StreamContext", "caching_allocator_alloc", "caching_allocator_delete", "can_device_access_peer", "check_error", "cudaStatus", "cudart", "current_blas_handle", "current_device", "current_stream", "default_stream", "device", "device_count", "device_of", "empty_cache", "get_arch_list", "get_device_capability", "get_device_name", "get_device_properties", "get_gencode_flags", "get_rng_state", "get_rng_state_all", "get_sync_debug_mode", "graph", "graph_pool_handle", "init", "initial_seed", "ipc_collect", "is_available", "is_bf16_supported", "is_initialized", "list_gpu_processes", "make_graphed_callables", "manual_seed", "manual_seed_all", "max_memory_allocated", "max_memory_cached", "max_memory_reserved", "mem_get_info", "memory_allocated", "memory_cached", "memory_reserved", "memory_snapshot", "memory_stats", "memory_stats_as_nested_dict", "memory_summary", "memory_usage", "reset_accumulated_memory_stats", "reset_max_memory_allocated", "reset_max_memory_cached", "reset_peak_memory_stats", "seed", "seed_all", "set_device", "set_per_process_memory_fraction", "set_rng_state", "set_rng_state_all", "set_stream", "set_sync_debug_mode", "stream", "synchronize", "utilization"], "torch.cuda.amp": ["GradScaler", "autocast", "custom_bwd", "custom_fwd"], "torch.cuda.amp.autocast_mode": ["autocast", "custom_bwd", "custom_fwd"], "torch.cuda.amp.common": ["amp_definitely_not_available"], "torch.cuda.amp.grad_scaler": ["GradScaler", "OptState"], "torch.cuda.graphs": ["CUDAGraph", "graph", "graph_pool_handle", "make_graphed_callables"], "torch.cuda.memory": ["caching_allocator_alloc", "caching_allocator_delete", "empty_cache", "list_gpu_processes", "max_memory_allocated", "max_memory_cached", "max_memory_reserved", "mem_get_info", "memory_allocated", "memory_cached", "memory_reserved", "memory_snapshot", "memory_stats", "memory_stats_as_nested_dict", "memory_summary", "reset_accumulated_memory_stats", "reset_max_memory_allocated", "reset_max_memory_cached", "reset_peak_memory_stats", "set_per_process_memory_fraction"], "torch.cuda.nccl": ["all_gather", "all_reduce", "broadcast", "init_rank", "is_available", "reduce", "reduce_scatter", "unique_id", "version"], "torch.cuda.nvtx": ["mark", "range", "range_end", "range_pop", "range_push", "range_start"], "torch.cuda.profiler": ["init", "profile", "start", "stop"], "torch.cuda.random": ["get_rng_state", "get_rng_state_all", "initial_seed", "manual_seed", "manual_seed_all", "seed", "seed_all", "set_rng_state", "set_rng_state_all"], "torch.cuda.sparse": ["BFloat16Tensor", "ByteTensor", "CharTensor", "DoubleTensor", "FloatTensor", "HalfTensor", "IntTensor", "LongTensor", "ShortTensor"], "torch.cuda.streams": ["Event", "ExternalStream", "Stream"], "torch.distributed": ["Backend", "GroupMember", "P2POp", "all_gather", "all_gather_coalesced", "all_gather_multigpu", "all_gather_object", "all_reduce", "all_reduce_coalesced", "all_reduce_multigpu", "all_to_all", "all_to_all_single", "barrier", "batch_isend_irecv", "broadcast", "broadcast_multigpu", "broadcast_object_list", "destroy_process_group", "dist_backend", "gather", "gather_object", "get_backend", "get_rank", "get_world_size", "group", "init_process_group", "irecv", "is_available", "is_gloo_available", "is_initialized", "is_mpi_available", "is_nccl_available", "is_torchelastic_launched", "isend", "monitored_barrier", "new_group", "new_subgroups", "new_subgroups_by_enumeration", "recv", "reduce", "reduce_multigpu", "reduce_scatter", "reduce_scatter_multigpu", "register_rendezvous_handler", "rendezvous", "scatter", "scatter_object_list", "send", "supports_complex"], "torch.distributed.algorithms": ["Join", "JoinHook", "Joinable"], "torch.distributed.algorithms.ddp_comm_hooks": ["DDPCommHookType", "register_ddp_comm_hook"], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": ["noop_hook"], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": ["allreduce_hook", "bf16_compress_hook", "bf16_compress_wrapper", "fp16_compress_hook", "fp16_compress_wrapper"], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": ["PowerSGDState", "batched_powerSGD_hook", "powerSGD_hook"], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": ["quantization_perchannel_hook", "quantization_pertensor_hook"], "torch.distributed.algorithms.join": ["Join", "JoinHook", "Joinable"], "torch.distributed.algorithms.model_averaging.averagers": ["ModelAverager", "PeriodicModelAverager"], "torch.distributed.algorithms.model_averaging.utils": ["average_parameters"], "torch.distributed.autograd": ["context", "is_available"], "torch.distributed.distributed_c10d": ["Backend", "GroupMember", "P2POp", "all_gather", "all_gather_coalesced", "all_gather_multigpu", "all_gather_object", "all_reduce", "all_reduce_coalesced", "all_reduce_multigpu", "all_to_all", "all_to_all_single", "barrier", "batch_isend_irecv", "broadcast", "broadcast_multigpu", "broadcast_object_list", "destroy_process_group", "dist_backend", "gather", "gather_object", "get_backend", "get_rank", "get_world_size", "group", "init_process_group", "irecv", "is_gloo_available", "is_initialized", "is_mpi_available", "is_nccl_available", "is_torchelastic_launched", "isend", "monitored_barrier", "new_group", "new_subgroups", "new_subgroups_by_enumeration", "recv", "reduce", "reduce_multigpu", "reduce_scatter", "reduce_scatter_multigpu", "scatter", "scatter_object_list", "send", "supports_complex"], "torch.distributed.elastic.agent.server.api": ["ElasticAgent", "RunResult", "SimpleElasticAgent", "Worker", "WorkerGroup", "WorkerSpec", "WorkerState"], "torch.distributed.elastic.events": ["Event", "EventSource", "NodeState", "RdzvEvent", "construct_and_record_rdzv_event", "get_logging_handler", "record", "record_rdzv_event"], "torch.distributed.elastic.events.api": ["Event", "EventSource", "NodeState", "RdzvEvent"], "torch.distributed.elastic.events.handlers": ["get_logging_handler"], "torch.distributed.elastic.metrics": ["ConsoleMetricHandler", "MetricData", "MetricHandler", "MetricsConfig", "NullMetricHandler", "configure", "getStream", "get_elapsed_time_ms", "initialize_metrics", "prof", "profile", "publish_metric", "put_metric"], "torch.distributed.elastic.metrics.api": ["ConsoleMetricHandler", "MetricData", "MetricHandler", "MetricStream", "MetricsConfig", "NullMetricHandler", "configure", "getStream", "get_elapsed_time_ms", "prof", "profile", "publish_metric", "put_metric"], "torch.distributed.elastic.multiprocessing": ["MultiprocessContext", "PContext", "ProcessFailure", "RunProcsResult", "SignalException", "Std", "SubprocessContext", "start_processes", "to_map"], "torch.distributed.elastic.multiprocessing.api": ["MultiprocessContext", "PContext", "RunProcsResult", "SignalException", "Std", "SubprocessContext", "SubprocessHandler", "get_std_cm", "to_map"], "torch.distributed.elastic.multiprocessing.errors": ["ChildFailedError", "ErrorHandler", "ProcessFailure", "get_error_handler", "record"], "torch.distributed.elastic.multiprocessing.errors.error_handler": ["ErrorHandler"], "torch.distributed.elastic.multiprocessing.errors.handlers": ["get_error_handler"], "torch.distributed.elastic.multiprocessing.redirects": ["get_libc", "redirect"], "torch.distributed.elastic.multiprocessing.tail_log": ["TailLog", "tail_logfile"], "torch.distributed.elastic.rendezvous": ["RendezvousClosedError", "RendezvousConnectionError", "RendezvousError", "RendezvousHandler", "RendezvousHandlerRegistry", "RendezvousParameters", "RendezvousStateError", "RendezvousTimeoutError"], "torch.distributed.elastic.rendezvous.api": ["RendezvousClosedError", "RendezvousConnectionError", "RendezvousError", "RendezvousHandler", "RendezvousHandlerRegistry", "RendezvousParameters", "RendezvousStateError", "RendezvousTimeoutError"], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": ["DynamicRendezvousHandler", "RendezvousBackend", "RendezvousSettings", "RendezvousTimeout", "create_handler", "get_method_name"], "torch.distributed.elastic.rendezvous.registry": ["get_rendezvous_handler"], "torch.distributed.elastic.rendezvous.utils": ["parse_rendezvous_endpoint"], "torch.distributed.elastic.timer.api": ["RequestQueue", "TimerClient", "TimerRequest", "TimerServer", "configure", "expires"], "torch.distributed.elastic.timer.local_timer": ["LocalTimerClient", "LocalTimerServer", "MultiprocessingRequestQueue"], "torch.distributed.elastic.utils": ["get_env_variable_or_raise", "get_socket_with_port", "macros"], "torch.distributed.elastic.utils.api": ["get_env_variable_or_raise", "get_socket_with_port", "macros"], "torch.distributed.elastic.utils.data.cycling_iterator": ["CyclingIterator"], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": ["ElasticDistributedSampler"], "torch.distributed.elastic.utils.log_level": ["get_log_level"], "torch.distributed.elastic.utils.logging": ["get_logger"], "torch.distributed.elastic.utils.store": ["barrier", "get_all", "synchronize"], "torch.distributed.fsdp": ["MixedPrecision", "OptimStateKeyType", "BackwardPrefetch", "CPUOffload", "FlatParameter", "FullyShardedDataParallel", "ShardingStrategy", "StateDictType"], "torch.distributed.fsdp.flatten_params_wrapper": ["FlatParameter", "FlattenParamsWrapper", "ParamInfo", "ShardMetadata"], "torch.distributed.fsdp.fully_sharded_data_parallel": ["MixedPrecision", "OptimStateKeyType", "BackwardPrefetch", "CPUOffload", "FullyShardedDataParallel", "ShardingStrategy", "StateDictType", "TrainingState_", "p_assert"], "torch.distributed.fsdp.optim_utils": ["ConsolidatedOptimState"], "torch.distributed.fsdp.wrap": ["always_wrap_policy", "default_auto_wrap_policy", "enable_wrap", "wrap"], "torch.distributed.launcher.api": ["LaunchConfig", "elastic_launch", "launch_agent"], "torch.distributed.nn": ["RemoteModule", "all_gather", "all_reduce", "all_to_all", "all_to_all_single", "broadcast", "gather", "reduce", "reduce_scatter", "scatter"], "torch.distributed.nn.api.remote_module": ["RemoteModule"], "torch.distributed.nn.functional": ["all_gather", "all_reduce", "all_to_all", "all_to_all_single", "broadcast", "gather", "reduce", "reduce_scatter", "scatter"], "torch.distributed.nn.jit.instantiator": ["get_arg_return_types_from_interface", "instantiate_non_scriptable_remote_module_template", "instantiate_scriptable_remote_module_template"], "torch.distributed.nn.jit.templates.remote_module_template": ["get_remote_module_template"], "torch.distributed.optim": ["DistributedOptimizer", "PostLocalSGDOptimizer", "ZeroRedundancyOptimizer", "as_functional_optim"], "torch.distributed.optim.optimizer": ["DistributedOptimizer"], "torch.distributed.optim.post_localSGD_optimizer": ["PostLocalSGDOptimizer"], "torch.distributed.optim.utils": ["as_functional_optim"], "torch.distributed.optim.zero_redundancy_optimizer": ["ZeroRedundancyOptimizer"], "torch.distributed.pipeline.sync.batchnorm": ["DeferredBatchNorm"], "torch.distributed.pipeline.sync.checkpoint": ["Checkpoint", "Checkpointing", "Context", "Function", "Recompute", "ThreadLocal", "checkpoint", "enable_checkpointing", "enable_recomputing", "is_checkpointing", "is_recomputing", "restore_rng_states", "save_rng_states"], "torch.distributed.pipeline.sync.copy": ["Context", "Copy", "Wait"], "torch.distributed.pipeline.sync.dependency": ["Fork", "Join", "fork", "join"], "torch.distributed.pipeline.sync.microbatch": ["Batch", "NoChunk", "check", "gather", "scatter"], "torch.distributed.pipeline.sync.phony": ["get_phony"], "torch.distributed.pipeline.sync.pipe": ["BalanceError", "Pipe", "PipeSequential", "Pipeline", "WithDevice"], "torch.distributed.pipeline.sync.pipeline": ["Pipeline"], "torch.distributed.pipeline.sync.skip": ["Namespace", "pop", "skippable", "stash", "verify_skippables"], "torch.distributed.pipeline.sync.skip.layout": ["SkipLayout", "inspect_skip_layout"], "torch.distributed.pipeline.sync.skip.namespace": ["Namespace"], "torch.distributed.pipeline.sync.skip.portal": ["Context", "Portal", "PortalBlue", "PortalCopy", "PortalOrange"], "torch.distributed.pipeline.sync.skip.skippable": ["Skippable", "pop", "skippable", "stash", "verify_skippables"], "torch.distributed.pipeline.sync.skip.tracker": ["SkipTracker", "SkipTrackerThroughPotals", "ThreadLocal", "current_skip_tracker", "use_skip_tracker"], "torch.distributed.pipeline.sync.stream": ["CPUStreamType", "as_cuda", "current_stream", "default_stream", "get_device", "is_cuda", "new_stream", "record_stream", "use_device", "use_stream", "wait_stream"], "torch.distributed.pipeline.sync.worker": ["Task", "create_workers", "spawn_workers", "worker"], "torch.distributed.rendezvous": ["register_rendezvous_handler", "rendezvous"], "torch.distributed.rpc": ["AllGatherStates", "BackendType", "PythonUDF", "RPCExecMode", "RRef", "TensorPipeRpcBackendOptions", "get_worker_info", "init_rpc", "is_available", "method_factory", "new_method", "remote", "rpc_async", "rpc_sync", "shutdown"], "torch.distributed.rpc.api": ["AllGatherStates", "RRef", "get_worker_info", "method_factory", "new_method", "remote", "rpc_async", "rpc_sync", "shutdown"], "torch.distributed.rpc.backend_registry": ["BackendType", "BackendValue", "backend_registered", "construct_rpc_backend_options", "init_backend", "register_backend"], "torch.distributed.rpc.functions": ["async_execution"], "torch.distributed.rpc.internal": ["PythonUDF", "RPCExecMode", "RemoteException", "deserialize", "serialize"], "torch.distributed.rpc.options": ["TensorPipeRpcBackendOptions"], "torch.distributions": ["AbsTransform", "AffineTransform", "Bernoulli", "Beta", "Binomial", "CatTransform", "Categorical", "Cauchy", "Chi2", "ComposeTransform", "ContinuousBernoulli", "CorrCholeskyTransform", "CumulativeDistributionTransform", "Dirichlet", "Distribution", "ExpTransform", "Exponential", "ExponentialFamily", "FisherSnedecor", "Gamma", "Geometric", "Gumbel", "HalfCauchy", "HalfNormal", "Independent", "IndependentTransform", "Kumaraswamy", "LKJCholesky", "Laplace", "LogNormal", "LogisticNormal", "LowRankMultivariateNormal", "LowerCholeskyTransform", "MixtureSameFamily", "Multinomial", "MultivariateNormal", "NegativeBinomial", "Normal", "OneHotCategorical", "OneHotCategoricalStraightThrough", "Pareto", "Poisson", "PowerTransform", "RelaxedBernoulli", "RelaxedOneHotCategorical", "ReshapeTransform", "SigmoidTransform", "SoftmaxTransform", "SoftplusTransform", "StackTransform", "StickBreakingTransform", "StudentT", "TanhTransform", "Transform", "TransformedDistribution", "Uniform", "VonMises", "Weibull", "Wishart", "biject_to", "identity_transform", "kl_divergence", "register_kl", "transform_to"], "torch.distributions.bernoulli": ["Bernoulli"], "torch.distributions.beta": ["Beta"], "torch.distributions.binomial": ["Binomial"], "torch.distributions.categorical": ["Categorical"], "torch.distributions.cauchy": ["Cauchy"], "torch.distributions.chi2": ["Chi2"], "torch.distributions.constraint_registry": ["ConstraintRegistry", "biject_to", "transform_to"], "torch.distributions.constraints": ["Constraint", "cat", "dependent", "dependent_property", "greater_than", "greater_than_eq", "half_open_interval", "independent", "integer_interval", "interval", "is_dependent", "less_than", "multinomial", "stack"], "torch.distributions.continuous_bernoulli": ["ContinuousBernoulli"], "torch.distributions.dirichlet": ["Dirichlet"], "torch.distributions.distribution": ["Distribution"], "torch.distributions.exp_family": ["ExponentialFamily"], "torch.distributions.exponential": ["Exponential"], "torch.distributions.fishersnedecor": ["FisherSnedecor"], "torch.distributions.gamma": ["Gamma"], "torch.distributions.geometric": ["Geometric"], "torch.distributions.gumbel": ["Gumbel"], "torch.distributions.half_cauchy": ["HalfCauchy"], "torch.distributions.half_normal": ["HalfNormal"], "torch.distributions.independent": ["Independent"], "torch.distributions.kl": ["kl_divergence", "register_kl"], "torch.distributions.kumaraswamy": ["Kumaraswamy"], "torch.distributions.laplace": ["Laplace"], "torch.distributions.lkj_cholesky": ["LKJCholesky"], "torch.distributions.log_normal": ["LogNormal"], "torch.distributions.logistic_normal": ["LogisticNormal"], "torch.distributions.lowrank_multivariate_normal": ["LowRankMultivariateNormal"], "torch.distributions.mixture_same_family": ["MixtureSameFamily"], "torch.distributions.multinomial": ["Multinomial"], "torch.distributions.multivariate_normal": ["MultivariateNormal"], "torch.distributions.negative_binomial": ["NegativeBinomial"], "torch.distributions.normal": ["Normal"], "torch.distributions.one_hot_categorical": ["OneHotCategorical", "OneHotCategoricalStraightThrough"], "torch.distributions.pareto": ["Pareto"], "torch.distributions.poisson": ["Poisson"], "torch.distributions.relaxed_bernoulli": ["LogitRelaxedBernoulli", "RelaxedBernoulli"], "torch.distributions.relaxed_categorical": ["ExpRelaxedCategorical", "RelaxedOneHotCategorical"], "torch.distributions.studentT": ["StudentT"], "torch.distributions.transformed_distribution": ["TransformedDistribution"], "torch.distributions.transforms": ["AbsTransform", "AffineTransform", "CatTransform", "ComposeTransform", "CorrCholeskyTransform", "CumulativeDistributionTransform", "ExpTransform", "IndependentTransform", "LowerCholeskyTransform", "PowerTransform", "ReshapeTransform", "SigmoidTransform", "SoftmaxTransform", "SoftplusTransform", "StackTransform", "StickBreakingTransform", "TanhTransform", "Transform", "identity_transform"], "torch.distributions.uniform": ["Uniform"], "torch.distributions.utils": ["broadcast_all", "clamp_probs", "lazy_property", "logits_to_probs", "probs_to_logits", "tril_matrix_to_vec", "vec_to_tril_matrix"], "torch.distributions.von_mises": ["VonMises"], "torch.distributions.weibull": ["Weibull"], "torch.distributions.wishart": ["Wishart"], "torch.functional": ["align_tensors", "atleast_1d", "atleast_2d", "atleast_3d", "block_diag", "broadcast_shapes", "broadcast_tensors", "cartesian_prod", "cdist", "chain_matmul", "einsum", "histogramdd", "lu", "meshgrid", "norm", "split", "stft", "tensordot", "unique", "unique_consecutive"], "torch.futures": ["collect_all", "wait_all"], "torch.fx": ["CodeGen", "Graph", "GraphModule", "Interpreter", "Node", "Proxy", "ProxyableClassMeta", "Tracer", "Transformer", "map_arg", "replace_pattern", "symbolic_trace", "wrap"], "torch.fx.experimental.unification.core": ["reify"], "torch.fx.experimental.unification.more": ["reify_object", "unifiable", "unify_object"], "torch.fx.experimental.unification.multipledispatch": ["Dispatcher", "MDNotImplementedError", "dispatch", "halt_ordering", "restart_ordering"], "torch.fx.experimental.unification.multipledispatch.conflict": ["AmbiguityWarning", "ambiguities", "ambiguous", "consistent", "edge", "ordering", "super_signature", "supercedes"], "torch.fx.experimental.unification.multipledispatch.core": ["dispatch", "ismethod"], "torch.fx.experimental.unification.multipledispatch.dispatcher": ["Dispatcher", "MDNotImplementedError", "MethodDispatcher", "ambiguity_warn", "halt_ordering", "restart_ordering", "source", "str_signature", "variadic_signature_matches", "variadic_signature_matches_iter", "warning_text"], "torch.fx.experimental.unification.multipledispatch.utils": ["expand_tuples", "groupby", "raises", "reverse_dict", "typename"], "torch.fx.experimental.unification.multipledispatch.variadic": ["Variadic", "VariadicSignatureMeta", "VariadicSignatureType", "isvariadic"], "torch.fx.experimental.unification.unification_tools": ["assoc", "assoc_in", "dissoc", "first", "get_in", "getter", "groupby", "itemfilter", "itemmap", "keyfilter", "keymap", "merge", "merge_with", "update_in", "valfilter", "valmap"], "torch.fx.experimental.unification.utils": ["freeze", "hashable", "raises", "reverse_dict", "transitive_get", "xfail"], "torch.fx.experimental.unification.variable": ["Var", "var", "variables", "vars"], "torch.fx.graph": ["CodeGen", "Graph", "PythonCode"], "torch.fx.graph_module": ["GraphModule", "reduce_deploy_graph_module", "reduce_graph_module", "reduce_package_graph_module"], "torch.fx.immutable_collections": ["immutable_dict", "immutable_list"], "torch.fx.interpreter": ["Interpreter", "Transformer"], "torch.fx.node": ["Node", "map_aggregate", "map_arg"], "torch.fx.operator_schemas": ["ArgsKwargsPair", "check_for_mutable_operation", "create_type_hint", "get_signature_for_torch_op", "normalize_function", "normalize_module", "type_matches"], "torch.fx.passes.graph_drawer": ["FxGraphDrawer"], "torch.fx.passes.graph_manipulation": ["get_size_of_all_nodes", "get_size_of_node", "get_tensor_meta", "replace_target_nodes_with", "serialize_leaf_module", "serialize_module", "serialize_shape", "serialize_stride", "serialize_tensor_quantization", "serialize_weight", "size_bytes"], "torch.fx.passes.net_min_base": ["FxNetMinimizerBadModuleError", "FxNetMinimizerResultMismatchError", "FxNetMinimizerRunFuncError"], "torch.fx.passes.operator_support": ["OpSupports", "OperatorSupport", "OperatorSupportBase", "chain", "create_op_support"], "torch.fx.passes.param_fetch": ["default_matching", "extract_attrs_for_lowering", "lift_lowering_attrs_to_nodes"], "torch.fx.passes.shape_prop": ["ShapeProp", "TensorMetadata"], "torch.fx.passes.split_module": ["Partition", "split_module"], "torch.fx.passes.split_utils": ["Component", "HolderModule", "getattr_recursive", "setattr_recursive", "split_by_tags"], "torch.fx.passes.splitter_base": ["FxNetAccNodesFinder", "FxNetSplitterInternalError", "SplitResult", "Subgraph", "generate_inputs_for_submodules"], "torch.fx.passes.tools_common": ["FxNetAccFusionsFinder", "get_acc_ops_name", "get_node_target", "is_node_output_tensor"], "torch.fx.proxy": ["Attribute", "GraphAppendingTracer", "ParameterProxy", "Proxy", "TraceError", "TracerBase", "assert_fn"], "torch.fx.subgraph_rewriter": ["Match", "replace_pattern"], "torch.hub": ["download_url_to_file", "get_dir", "help", "list", "load", "load_state_dict_from_url", "set_dir"], "torch.jit": ["Attribute", "CompilationUnit", "Error", "Future", "ONNXTracedModule", "RecursiveScriptClass", "RecursiveScriptModule", "ScriptFunction", "ScriptModule", "ScriptWarning", "TopLevelTracedModule", "TracedModule", "TracerWarning", "TracingCheckError", "annotate", "export_opnames", "fork", "freeze", "fuser", "interface", "is_tracing", "isinstance", "jit_module_from_flatbuffer", "load", "optimize_for_inference", "optimized_execution", "run_frozen_optimizations", "save", "save_jit_module_to_flatbuffer", "script", "script_if_tracing", "script_method", "set_fusion_strategy", "trace", "trace_module", "wait"], "torch.jit.annotations": ["EvalEnv", "Module", "ann_to_type", "check_fn", "get_enum_value_type", "get_param_names", "get_signature", "get_type_line", "is_function_or_method", "is_tensor", "is_vararg", "parse_type_line", "split_type_line", "try_ann_to_type", "try_real_annotations"], "torch.jit.frontend": ["Builder", "ExprBuilder", "FrontendError", "FrontendTypeError", "NotSupportedError", "StmtBuilder", "UnsupportedNodeError", "WithItemBuilder", "build_class_def", "build_def", "build_expr", "build_ignore_context_manager", "build_param", "build_param_list", "build_stmt", "build_stmts", "build_withitem", "build_withitems", "find_before", "get_class_assigns", "get_class_properties", "get_default_args", "get_default_args_for_class", "get_jit_class_def", "get_jit_def", "is_reserved_name", "is_torch_jit_ignore_context_manager"], "torch.multiprocessing": ["ProcessContext", "ProcessExitedException", "ProcessRaisedException", "SpawnContext", "get_all_sharing_strategies", "get_sharing_strategy", "init_reductions", "set_sharing_strategy", "spawn", "start_processes"], "torch.multiprocessing.reductions": ["SharedCache", "StorageWeakRef", "fd_id", "init_reductions", "rebuild_cuda_tensor", "rebuild_event", "rebuild_storage_empty", "rebuild_storage_fd", "rebuild_storage_filename", "rebuild_tensor", "rebuild_typed_storage", "rebuild_typed_storage_child", "reduce_event", "reduce_storage", "reduce_tensor", "reduce_typed_storage", "reduce_typed_storage_child", "storage_from_cache"], "torch.multiprocessing.spawn": ["ProcessContext", "ProcessException", "ProcessExitedException", "ProcessRaisedException", "SpawnContext", "spawn", "start_processes"], "torch.nn": ["AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Container", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "CrossMapLRN2d", "DataParallel", "Dropout", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "NLLLoss2d", "PReLU", "PairwiseDistance", "Parameter", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RNNCellBase", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "UninitializedBuffer", "UninitializedParameter", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad2d", "factory_kwargs"], "torch.nn.functional": ["adaptive_avg_pool2d", "adaptive_avg_pool3d", "adaptive_max_pool1d", "adaptive_max_pool1d_with_indices", "adaptive_max_pool2d", "adaptive_max_pool2d_with_indices", "adaptive_max_pool3d", "adaptive_max_pool3d_with_indices", "affine_grid", "alpha_dropout", "assert_int_or_pair", "batch_norm", "binary_cross_entropy", "binary_cross_entropy_with_logits", "celu", "cosine_embedding_loss", "cross_entropy", "ctc_loss", "dropout", "dropout2d", "dropout3d", "elu", "embedding", "embedding_bag", "feature_alpha_dropout", "fold", "fractional_max_pool2d", "fractional_max_pool2d_with_indices", "fractional_max_pool3d", "fractional_max_pool3d_with_indices", "gaussian_nll_loss", "glu", "grid_sample", "group_norm", "gumbel_softmax", "hardsigmoid", "hardswish", "hardtanh", "hinge_embedding_loss", "huber_loss", "instance_norm", "interpolate", "kl_div", "l1_loss", "layer_norm", "leaky_relu", "local_response_norm", "log_softmax", "lp_pool1d", "lp_pool2d", "margin_ranking_loss", "max_pool1d", "max_pool1d_with_indices", "max_pool2d", "max_pool2d_with_indices", "max_pool3d", "max_pool3d_with_indices", "max_unpool1d", "max_unpool2d", "max_unpool3d", "mish", "mse_loss", "multi_head_attention_forward", "multi_margin_loss", "multilabel_margin_loss", "multilabel_soft_margin_loss", "nll_loss", "normalize", "pad", "poisson_nll_loss", "relu", "relu6", "rrelu", "selu", "sigmoid", "silu", "smooth_l1_loss", "soft_margin_loss", "softmax", "softmin", "softsign", "tanh", "tanhshrink", "threshold", "triplet_margin_loss", "triplet_margin_with_distance_loss", "unfold", "upsample", "upsample_bilinear", "upsample_nearest"], "torch.nn.grad": ["conv1d_input", "conv1d_weight", "conv2d_input", "conv2d_weight", "conv3d_input", "conv3d_weight"], "torch.nn.init": ["calculate_gain", "constant", "constant_", "dirac", "dirac_", "eye", "eye_", "kaiming_normal", "kaiming_normal_", "kaiming_uniform", "kaiming_uniform_", "normal", "normal_", "ones_", "orthogonal", "orthogonal_", "sparse", "sparse_", "trunc_normal_", "uniform", "uniform_", "xavier_normal", "xavier_normal_", "xavier_uniform", "xavier_uniform_", "zeros_"], "torch.nn.intrinsic": ["BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU"], "torch.nn.intrinsic.modules": ["BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU"], "torch.nn.intrinsic.modules.fused": ["BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU"], "torch.nn.intrinsic.qat": ["ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU", "freeze_bn_stats", "update_bn_stats"], "torch.nn.intrinsic.qat.modules": ["ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU", "freeze_bn_stats", "update_bn_stats"], "torch.nn.intrinsic.qat.modules.conv_fused": ["ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "freeze_bn_stats", "update_bn_stats"], "torch.nn.intrinsic.qat.modules.linear_fused": ["LinearBn1d"], "torch.nn.intrinsic.qat.modules.linear_relu": ["LinearReLU"], "torch.nn.intrinsic.quantized": ["BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU"], "torch.nn.intrinsic.quantized.dynamic": ["LinearReLU"], "torch.nn.intrinsic.quantized.dynamic.modules": ["LinearReLU"], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": ["LinearReLU"], "torch.nn.intrinsic.quantized.modules": ["BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU"], "torch.nn.intrinsic.quantized.modules.bn_relu": ["BNReLU2d", "BNReLU3d"], "torch.nn.intrinsic.quantized.modules.conv_relu": ["ConvReLU1d", "ConvReLU2d", "ConvReLU3d"], "torch.nn.intrinsic.quantized.modules.linear_relu": ["LinearReLU"], "torch.nn.modules": ["AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Container", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "CrossMapLRN2d", "Dropout", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "NLLLoss2d", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RNNCellBase", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad2d"], "torch.nn.modules.activation": ["CELU", "ELU", "GELU", "GLU", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "LeakyReLU", "LogSigmoid", "LogSoftmax", "Mish", "MultiheadAttention", "PReLU", "RReLU", "ReLU", "ReLU6", "SELU", "SiLU", "Sigmoid", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "Tanh", "Tanhshrink", "Threshold"], "torch.nn.modules.adaptive": ["AdaptiveLogSoftmaxWithLoss"], "torch.nn.modules.batchnorm": ["BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "SyncBatchNorm"], "torch.nn.modules.channelshuffle": ["ChannelShuffle"], "torch.nn.modules.container": ["Container", "ModuleDict", "ModuleList", "ParameterDict", "ParameterList", "Sequential"], "torch.nn.modules.conv": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d"], "torch.nn.modules.distance": ["CosineSimilarity", "PairwiseDistance"], "torch.nn.modules.dropout": ["AlphaDropout", "Dropout", "Dropout2d", "Dropout3d", "FeatureAlphaDropout"], "torch.nn.modules.flatten": ["Flatten", "Unflatten"], "torch.nn.modules.fold": ["Fold", "Unfold"], "torch.nn.modules.instancenorm": ["InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d"], "torch.nn.modules.lazy": ["LazyModuleMixin"], "torch.nn.modules.linear": ["Bilinear", "Identity", "LazyLinear", "Linear", "NonDynamicallyQuantizableLinear"], "torch.nn.modules.loss": ["BCELoss", "BCEWithLogitsLoss", "CTCLoss", "CosineEmbeddingLoss", "CrossEntropyLoss", "GaussianNLLLoss", "HingeEmbeddingLoss", "HuberLoss", "KLDivLoss", "L1Loss", "MSELoss", "MarginRankingLoss", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "NLLLoss", "NLLLoss2d", "PoissonNLLLoss", "SmoothL1Loss", "SoftMarginLoss", "TripletMarginLoss", "TripletMarginWithDistanceLoss"], "torch.nn.modules.module": ["Module", "register_module_backward_hook", "register_module_forward_hook", "register_module_forward_pre_hook", "register_module_full_backward_hook"], "torch.nn.modules.normalization": ["CrossMapLRN2d", "GroupNorm", "LayerNorm", "LocalResponseNorm"], "torch.nn.modules.padding": ["ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "ZeroPad2d"], "torch.nn.modules.pixelshuffle": ["PixelShuffle", "PixelUnshuffle"], "torch.nn.modules.pooling": ["AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AvgPool1d", "AvgPool2d", "AvgPool3d", "FractionalMaxPool2d", "FractionalMaxPool3d", "LPPool1d", "LPPool2d", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d"], "torch.nn.modules.rnn": ["GRU", "GRUCell", "LSTM", "LSTMCell", "RNN", "RNNBase", "RNNCell", "RNNCellBase", "apply_permutation"], "torch.nn.modules.sparse": ["Embedding", "EmbeddingBag"], "torch.nn.modules.transformer": ["Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer"], "torch.nn.modules.upsampling": ["Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d"], "torch.nn.modules.utils": ["consume_prefix_in_state_dict_if_present"], "torch.nn.parallel": ["DataParallel", "DistributedDataParallel", "DistributedDataParallelCPU", "data_parallel", "gather", "parallel_apply", "replicate", "scatter"], "torch.nn.parallel.comm": ["broadcast", "broadcast_coalesced", "gather", "reduce_add", "reduce_add_coalesced", "scatter"], "torch.nn.parallel.data_parallel": ["DataParallel", "data_parallel"], "torch.nn.parallel.distributed": ["DistributedDataParallel"], "torch.nn.parallel.parallel_apply": ["get_a_var", "parallel_apply"], "torch.nn.parallel.replicate": ["replicate"], "torch.nn.parallel.scatter_gather": ["gather", "is_namedtuple", "scatter", "scatter_kwargs"], "torch.nn.parameter": ["Parameter", "UninitializedBuffer", "UninitializedParameter", "UninitializedTensorMixin", "is_lazy"], "torch.nn.qat": ["Conv1d", "Conv2d", "Conv3d", "Embedding", "EmbeddingBag", "Linear"], "torch.nn.qat.dynamic": ["Linear"], "torch.nn.qat.dynamic.modules": ["Linear"], "torch.nn.qat.dynamic.modules.linear": ["Linear"], "torch.nn.qat.modules": ["Conv1d", "Conv2d", "Conv3d", "Embedding", "EmbeddingBag", "Linear"], "torch.nn.qat.modules.conv": ["Conv1d", "Conv2d", "Conv3d"], "torch.nn.qat.modules.embedding_ops": ["Embedding", "EmbeddingBag"], "torch.nn.qat.modules.linear": ["Linear"], "torch.nn.quantizable": ["LSTM", "LSTMCell", "MultiheadAttention"], "torch.nn.quantizable.modules": ["LSTM", "LSTMCell", "MultiheadAttention"], "torch.nn.quantizable.modules.activation": ["MultiheadAttention"], "torch.nn.quantizable.modules.rnn": ["LSTM", "LSTMCell"], "torch.nn.quantized": ["BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "DeQuantize", "Dropout", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "Quantize", "ReLU6", "Sigmoid"], "torch.nn.quantized.dynamic": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell"], "torch.nn.quantized.dynamic.modules": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell"], "torch.nn.quantized.dynamic.modules.conv": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d"], "torch.nn.quantized.dynamic.modules.linear": ["Linear"], "torch.nn.quantized.dynamic.modules.rnn": ["GRU", "GRUCell", "LSTM", "LSTMCell", "PackedParameter", "RNNBase", "RNNCell", "RNNCellBase", "apply_permutation", "pack_weight_bias"], "torch.nn.quantized.functional": ["adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest"], "torch.nn.quantized.modules": ["BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "DeQuantize", "Dropout", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "Quantize", "ReLU6", "Sigmoid"], "torch.nn.quantized.modules.activation": ["ELU", "Hardswish", "LeakyReLU", "ReLU6", "Sigmoid"], "torch.nn.quantized.modules.batchnorm": ["BatchNorm2d", "BatchNorm3d"], "torch.nn.quantized.modules.conv": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d"], "torch.nn.quantized.modules.dropout": ["Dropout"], "torch.nn.quantized.modules.embedding_ops": ["Embedding", "EmbeddingBag", "EmbeddingPackedParams"], "torch.nn.quantized.modules.functional_modules": ["FXFloatFunctional", "FloatFunctional", "QFunctional"], "torch.nn.quantized.modules.linear": ["Linear", "LinearPackedParams"], "torch.nn.quantized.modules.normalization": ["GroupNorm", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm"], "torch.nn.quantized.modules.utils": ["WeightedQuantizedModule", "hide_packed_params_repr"], "torch.nn.utils": ["clip_grad_norm", "clip_grad_norm_", "clip_grad_value_", "convert_conv2d_weight_memory_format", "fuse_conv_bn_eval", "fuse_conv_bn_weights", "parameters_to_vector", "remove_spectral_norm", "remove_weight_norm", "skip_init", "spectral_norm", "vector_to_parameters", "weight_norm"], "torch.nn.utils.clip_grad": ["clip_grad_norm", "clip_grad_norm_", "clip_grad_value_"], "torch.nn.utils.convert_parameters": ["parameters_to_vector", "vector_to_parameters"], "torch.nn.utils.fusion": ["fuse_conv_bn_eval", "fuse_conv_bn_weights", "fuse_linear_bn_eval", "fuse_linear_bn_weights"], "torch.nn.utils.init": ["skip_init"], "torch.nn.utils.memory_format": ["convert_conv2d_weight_memory_format"], "torch.nn.utils.parametrizations": ["orthogonal", "spectral_norm"], "torch.nn.utils.parametrize": ["transfer_parametrizations_and_params", "type_before_parametrizations", "ParametrizationList", "cached", "is_parametrized", "register_parametrization", "remove_parametrizations"], "torch.nn.utils.rnn": ["PackedSequence", "PackedSequence_", "bind", "invert_permutation", "pack_padded_sequence", "pack_sequence", "pad_packed_sequence", "pad_sequence", "unpack_sequence", "unpad_sequence"], "torch.nn.utils.spectral_norm": ["SpectralNorm", "SpectralNormLoadStateDictPreHook", "SpectralNormStateDictHook", "remove_spectral_norm", "spectral_norm"], "torch.nn.utils.weight_norm": ["WeightNorm", "remove_weight_norm", "weight_norm"], "torch.onnx": ["CheckerError", "ExportTypes", "SymbolicContext", "disable_log", "enable_log", "export", "export_to_pretty_string", "is_in_onnx_export", "is_onnx_log_enabled", "log", "register_custom_op_symbolic", "select_model_mode_for_export", "set_log_stream", "unregister_custom_op_symbolic"], "torch.optim": ["ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "Optimizer", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam"], "torch.optim.adadelta": ["Adadelta", "adadelta"], "torch.optim.adagrad": ["Adagrad", "adagrad"], "torch.optim.adam": ["Adam", "adam"], "torch.optim.adamax": ["Adamax", "adamax"], "torch.optim.adamw": ["AdamW", "adamw"], "torch.optim.asgd": ["ASGD", "asgd"], "torch.optim.lbfgs": ["LBFGS"], "torch.optim.lr_scheduler": ["ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "ReduceLROnPlateau", "SequentialLR", "StepLR"], "torch.optim.nadam": ["NAdam", "nadam"], "torch.optim.optimizer": ["Optimizer"], "torch.optim.radam": ["RAdam", "radam"], "torch.optim.rmsprop": ["RMSprop", "rmsprop"], "torch.optim.rprop": ["Rprop", "rprop"], "torch.optim.sgd": ["SGD", "sgd"], "torch.optim.sparse_adam": ["SparseAdam"], "torch.optim.swa_utils": ["AveragedModel", "SWALR", "update_bn"], "torch.overrides": ["BaseTorchFunctionMode", "TorchFunctionMode", "TorchFunctionModeMeta", "enable_torch_function_mode", "push_torch_function_mode", "get_default_nowrap_functions", "get_ignored_functions", "get_overridable_functions", "get_testing_overrides", "handle_torch_function", "is_tensor_like", "is_tensor_method_or_property", "wrap_torch_function"], "torch.package": ["Directory", "EmptyMatchError", "GlobGroup", "Importer", "ObjMismatchError", "ObjNotFoundError", "OrderedImporter", "PackageExporter", "PackageImporter", "PackagingError", "is_from_package"], "torch.package.analyze": ["find_first_use_of_broken_modules", "trace_dependencies"], "torch.package.analyze.find_first_use_of_broken_modules": ["find_first_use_of_broken_modules"], "torch.package.analyze.is_from_package": ["is_from_package"], "torch.package.analyze.trace_dependencies": ["trace_dependencies"], "torch.package.file_structure_representation": ["Directory"], "torch.package.find_file_dependencies": ["find_files_source_depends_on"], "torch.package.glob_group": ["GlobGroup"], "torch.package.importer": ["Importer", "ObjMismatchError", "ObjNotFoundError", "OrderedImporter"], "torch.package.package_exporter": ["EmptyMatchError", "PackageExporter", "PackagingError", "PackagingErrorReason"], "torch.package.package_importer": ["PackageImporter", "patched_getfile"], "torch.profiler": ["ProfilerAction", "profile", "schedule", "supported_activities", "tensorboard_trace_handler"], "torch.profiler.profiler": ["ProfilerAction", "profile", "schedule", "supported_activities", "tensorboard_trace_handler"], "torch.quantization": ["default_eval_fn"], "torch.quasirandom": ["SobolEngine"], "torch.random": ["fork_rng", "get_rng_state", "initial_seed", "manual_seed", "seed", "set_rng_state"], "torch.return_types": ["histogramdd", "aminmax", "aminmax_out", "cummax", "cummax_out", "cummin", "cummin_out", "eig", "eig_out", "frexp", "frexp_out", "geqrf", "geqrf_out", "histogram", "histogram_out", "kthvalue", "kthvalue_out", "linalg_cholesky_ex", "linalg_cholesky_ex_out", "linalg_eig", "linalg_eig_out", "linalg_eigh", "linalg_eigh_out", "linalg_inv_ex", "linalg_inv_ex_out", "linalg_lstsq", "linalg_lstsq_out", "linalg_lu_factor", "linalg_lu_factor_ex", "linalg_lu_factor_ex_out", "linalg_lu_factor_out", "linalg_qr", "linalg_qr_out", "linalg_slogdet", "linalg_slogdet_out", "linalg_svd", "linalg_svd_out", "lstsq", "lstsq_out", "lu_unpack", "lu_unpack_out", "max", "max_out", "median", "median_out", "min", "min_out", "mode", "mode_out", "nanmedian", "nanmedian_out", "qr", "qr_out", "slogdet", "solve", "solve_out", "sort", "sort_out", "svd", "svd_out", "symeig", "symeig_out", "topk", "topk_out", "triangular_solve", "triangular_solve_out"], "torch.serialization": ["SourceChangeWarning", "StorageType", "check_module_version_greater_or_equal", "default_restore_location", "load", "location_tag", "mkdtemp", "normalize_storage_type", "register_package", "save", "storage_to_tensor_type", "validate_cuda_device"], "torch.sparse": ["BFloat16Tensor", "ByteTensor", "CharTensor", "DoubleTensor", "FloatTensor", "HalfTensor", "IntTensor", "LongTensor", "ShortTensor", "sum"], "torch.testing": ["all_types", "all_types_and", "all_types_and_complex", "all_types_and_complex_and", "all_types_and_half", "assert_allclose", "assert_close", "complex_types", "double_types", "empty_types", "floating_and_complex_types", "floating_and_complex_types_and", "floating_types", "floating_types_and", "floating_types_and_half", "get_all_complex_dtypes", "get_all_device_types", "get_all_dtypes", "get_all_fp_dtypes", "get_all_int_dtypes", "get_all_math_dtypes", "integral_types", "integral_types_and", "make_non_contiguous", "make_tensor"], "torch.torch_version": ["InvalidVersion", "TorchVersion", "Version"], "torch.types": ["Storage", "SymInt"], "torch.utils": ["ThroughputBenchmark", "disable_minidumps", "enable_minidumps", "enable_minidumps_on_exceptions", "set_module"], "torch.utils.backcompat": ["Warning"], "torch.utils.benchmark.utils.common": ["Measurement", "TaskSpec", "ordered_unique", "select_unit", "set_torch_threads", "trim_sigfig", "unit_to_english"], "torch.utils.benchmark.utils.compare": ["Colorize", "Compare", "Table", "optional_min"], "torch.utils.benchmark.utils.cpp_jit": ["compile_callgrind_template", "compile_timeit_template", "get_compat_bindings"], "torch.utils.benchmark.utils.fuzzer": ["FuzzedParameter", "FuzzedTensor", "Fuzzer", "ParameterAlias", "dtype_size", "prod"], "torch.utils.benchmark.utils.sparse_fuzzer": ["FuzzedSparseTensor"], "torch.utils.benchmark.utils.timer": ["CPPTimer", "Language", "timer", "Timer"], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": ["CallgrindStats", "CopyIfCallgrind", "FunctionCount", "FunctionCounts", "GlobalsBridge", "Serialization", "wrapper_singleton"], "torch.utils.cpp_extension": ["BuildExtension", "CUDAExtension", "CppExtension", "check_compiler_ok_for_platform", "get_compiler_abi_compatibility_and_version", "get_default_build_root", "include_paths", "is_ninja_available", "library_paths", "load", "load_inline", "verify_ninja_availability"], "torch.utils.data": ["BatchSampler", "ChainDataset", "ConcatDataset", "DFIterDataPipe", "DataChunk", "DataLoader", "DataLoader2", "Dataset", "DistributedSampler", "IterDataPipe", "IterableDataset", "MapDataPipe", "RandomSampler", "Sampler", "SequentialSampler", "Subset", "SubsetRandomSampler", "TensorDataset", "WeightedRandomSampler", "argument_validation", "default_collate", "default_convert", "functional_datapipe", "get_worker_info", "guaranteed_datapipes_determinism", "non_deterministic", "random_split", "runtime_validation", "runtime_validation_disabled"], "torch.utils.data.backward_compatibility": ["worker_init_fn"], "torch.utils.data.communication.eventloop": ["DataPipeToQueuesLoop", "SpawnProcessForDataPipeline", "SpawnThreadForDataPipeline"], "torch.utils.data.communication.iter": ["DataPipeBehindQueues", "EnsureNonBlockingDataPipe", "InvalidStateResetRequired", "NonBlocking", "NotAvailable", "QueueWrapper", "default_not_available_hook"], "torch.utils.data.communication.map": ["DataPipeBehindQueues", "EnsureNonBlockingMapDataPipe", "NonBlockingMap", "NotAvailable", "QueueWrapperForMap", "default_not_available_hook"], "torch.utils.data.communication.messages": ["DataLoaderQueueMessage", "GetItemRequest", "GetItemResponse", "GetNextRequest", "GetNextResponse", "InvalidStateResponse", "LenRequest", "LenResponse", "Request", "ResetIteratorRequest", "ResetIteratorResponse", "Response", "StopIterationResponse", "TerminateRequest", "TerminateResponse"], "torch.utils.data.communication.protocol": ["EmptyQueue", "IterDataPipeQueueProtocolClient", "IterDataPipeQueueProtocolServer", "MapDataPipeQueueProtocolClient", "MapDataPipeQueueProtocolServer", "Protocol", "ProtocolClient", "ProtocolServer"], "torch.utils.data.communication.queue": ["LocalQueue", "ThreadingQueue"], "torch.utils.data.dataloader": ["DataLoader"], "torch.utils.data.dataloader_experimental": ["DataLoader2"], "torch.utils.data.datapipes.dataframe": ["CaptureDataFrame", "DataFramesAsTuplesPipe"], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": ["PandasWrapper", "concat", "create_dataframe", "default_wrapper", "get_df_wrapper", "get_item", "get_len", "is_column", "is_dataframe", "iterate", "set_df_wrapper"], "torch.utils.data.datapipes.dataframe.dataframes": ["Capture", "CaptureAdd", "CaptureCall", "CaptureDataFrame", "CaptureDataFrameWithDataPipeOps", "CaptureF", "CaptureGetAttr", "CaptureGetItem", "CaptureInitial", "CaptureMul", "CaptureSetItem", "CaptureSub", "CaptureVariable", "CaptureVariableAssign", "DataFrameTracedOps", "DataFrameTracer", "get_val"], "torch.utils.data.datapipes.dataframe.datapipes": ["ConcatDataFramesPipe", "DataFramesAsTuplesPipe", "ExampleAggregateAsDataFrames", "FilterDataFramesPipe", "PerRowDataFramesPipe", "ShuffleDataFramesPipe"], "torch.utils.data.datapipes.dataframe.structures": ["DataChunkDF"], "torch.utils.data.datapipes.datapipe": ["DFIterDataPipe", "DataChunk", "IterDataPipe", "MapDataPipe"], "torch.utils.data.datapipes.iter": ["Batcher", "Collator", "Concater", "Demultiplexer", "FileLister", "FileLoader", "FileOpener", "Filter", "Forker", "Grouper", "IterableWrapper", "Mapper", "Multiplexer", "RoutedDecoder", "Sampler", "ShardingFilter", "Shuffler", "StreamReader", "UnBatcher", "Zipper"], "torch.utils.data.datapipes.iter.callable": ["CollatorIterDataPipe", "MapperIterDataPipe"], "torch.utils.data.datapipes.iter.combinatorics": ["SamplerIterDataPipe", "ShufflerIterDataPipe"], "torch.utils.data.datapipes.iter.combining": ["ConcaterIterDataPipe", "DemultiplexerIterDataPipe", "ForkerIterDataPipe", "MultiplexerIterDataPipe", "ZipperIterDataPipe"], "torch.utils.data.datapipes.iter.filelister": ["FileListerIterDataPipe"], "torch.utils.data.datapipes.iter.fileopener": ["FileLoaderIterDataPipe", "FileOpenerIterDataPipe"], "torch.utils.data.datapipes.iter.grouping": ["BatcherIterDataPipe", "GrouperIterDataPipe", "ShardingFilterIterDataPipe", "UnBatcherIterDataPipe"], "torch.utils.data.datapipes.iter.routeddecoder": ["RoutedDecoderIterDataPipe"], "torch.utils.data.datapipes.iter.selecting": ["FilterIterDataPipe"], "torch.utils.data.datapipes.iter.streamreader": ["StreamReaderIterDataPipe"], "torch.utils.data.datapipes.iter.utils": ["IterableWrapperIterDataPipe"], "torch.utils.data.datapipes.map": ["Batcher", "Concater", "Mapper", "SequenceWrapper", "Shuffler", "Zipper"], "torch.utils.data.datapipes.map.callable": ["MapperMapDataPipe", "default_fn"], "torch.utils.data.datapipes.map.combinatorics": ["ShufflerMapDataPipe"], "torch.utils.data.datapipes.map.combining": ["ConcaterMapDataPipe", "ZipperMapDataPipe"], "torch.utils.data.datapipes.map.grouping": ["BatcherMapDataPipe"], "torch.utils.data.datapipes.map.utils": ["SequenceWrapperMapDataPipe"], "torch.utils.data.datapipes.utils.common": ["StreamWrapper", "check_lambda_fn", "deprecation_warning", "get_file_binaries_from_pathnames", "get_file_pathnames_from_root", "match_masks", "validate_pathname_binary_tuple"], "torch.utils.data.datapipes.utils.decoder": ["Decoder", "ImageHandler", "MatHandler", "audiohandler", "basichandlers", "extension_extract_fn", "handle_extension", "imagehandler", "mathandler", "videohandler"], "torch.utils.data.dataset": ["ChainDataset", "ConcatDataset", "Dataset", "IterableDataset", "Subset", "TensorDataset", "random_split"], "torch.utils.data.distributed": ["DistributedSampler"], "torch.utils.data.graph": ["list_connected_datapipes", "stub_unpickler", "traverse"], "torch.utils.data.graph_settings": ["apply_sharding", "apply_shuffle_settings", "get_all_graph_pipes"], "torch.utils.data.sampler": ["BatchSampler", "RandomSampler", "Sampler", "SequentialSampler", "SubsetRandomSampler", "WeightedRandomSampler"], "torch.utils.dlpack": ["DLDeviceType", "from_dlpack"], "torch.utils.file_baton": ["FileBaton"], "torch.utils.hipify.hipify_python": ["GeneratedFileCleaner", "InputError", "Trie", "add_dim3", "bcolors", "compute_stats", "extract_arguments", "file_add_header", "file_specific_replacement", "find_bracket_group", "find_closure_group", "find_parentheses_group", "fix_static_global_kernels", "get_hip_file_path", "hip_header_magic", "hipify", "is_caffe2_gpu_file", "is_cusparse_file", "is_out_of_place", "is_pytorch_file", "match_extensions", "matched_files_iter", "openf", "preprocess", "preprocess_file_and_save_result", "preprocessor", "processKernelLaunches", "replace_extern_shared", "replace_math_functions", "str2bool"], "torch.utils.hooks": ["BackwardHook", "RemovableHandle", "unserializable_hook", "warn_if_has_hooks"], "torch.utils.show_pickle": ["DumpUnpickler", "FakeClass", "FakeObject", "main"], "torch.utils.tensorboard.summary": ["audio", "compute_curve", "custom_scalars", "draw_boxes", "histogram", "histogram_raw", "hparams", "image", "image_boxes", "make_histogram", "make_image", "make_video", "mesh", "pr_curve", "pr_curve_raw", "scalar", "text", "video"], "torch.utils.tensorboard.writer": ["FileWriter", "SummaryWriter"], "torch.utils.throughput_benchmark": ["ExecutionStats", "ThroughputBenchmark", "format_time"], "torch": ["SymIntType", "AggregationType", "AliasDb", "AnyType", "Argument", "ArgumentSpec", "BFloat16Storage", "BFloat16Tensor", "BenchmarkConfig", "BenchmarkExecutionStats", "Block", "BoolStorage", "BoolTensor", "BoolType", "BufferDict", "ByteStorage", "ByteTensor", "CallStack", "Capsule", "CharStorage", "CharTensor", "ClassType", "Code", "CompilationUnit", "CompleteArgumentSpec", "ComplexDoubleStorage", "ComplexFloatStorage", "ComplexType", "ConcreteModuleType", "ConcreteModuleTypeBuilder", "CudaByteStorageBase", "DeepCopyMemoTable", "DeserializationStorageContext", "DeviceObjType", "DictType", "DisableTorchFunction", "DoubleStorage", "DoubleTensor", "EnumType", "ErrorReport", "ExecutionPlan", "FatalError", "FileCheck", "FloatStorage", "FloatTensor", "FloatType", "FunctionSchema", "Future", "FutureType", "Generator", "Gradient", "Graph", "GraphExecutorState", "HalfStorage", "HalfTensor", "IODescriptor", "InferredType", "IntStorage", "IntTensor", "IntType", "InterfaceType", "JITException", "ListType", "LiteScriptModule", "LockingLogger", "LoggerBase", "LongStorage", "LongTensor", "MobileOptimizerType", "ModuleDict", "NestedTensor", "Node", "NoneType", "NoopLogger", "NumberType", "OperatorInfo", "OptionalType", "ParameterDict", "PyObjectType", "PyTorchFileReader", "PyTorchFileWriter", "QInt32Storage", "QInt8Storage", "QUInt2x4Storage", "QUInt4x2Storage", "QUInt8Storage", "RRefType", "ScriptClass", "ScriptClassFunction", "ScriptDict", "ScriptDictIterator", "ScriptDictKeyIterator", "ScriptFunction", "ScriptList", "ScriptListIterator", "ScriptMethod", "ScriptModule", "ScriptModuleSerializer", "ScriptObject", "ScriptObjectProperty", "SerializationStorageContext", "ShortStorage", "ShortTensor", "Size", "StaticModule", "Storage", "Stream", "StreamObjType", "StringType", "Tensor", "TensorType", "ThroughputBenchmark", "TracingState", "TupleType", "Type", "UnionType", "Use", "Value", "align_tensors", "are_deterministic_algorithms_enabled", "atleast_1d", "atleast_2d", "atleast_3d", "autocast", "autocast_decrement_nesting", "autocast_increment_nesting", "block_diag", "broadcast_shapes", "broadcast_tensors", "candidate", "cartesian_prod", "cdist", "chain_matmul", "classproperty", "clear_autocast_cache", "compiled_with_cxx11_abi", "device", "dtype", "einsum", "enable_grad", "finfo", "fork", "from_dlpack", "get_autocast_cpu_dtype", "get_autocast_gpu_dtype", "get_default_dtype", "get_deterministic_debug_mode", "get_file_path", "get_num_interop_threads", "get_num_threads", "get_rng_state", "histogramdd", "iinfo", "import_ir_module", "import_ir_module_from_buffer", "inference_mode", "init_num_threads", "initial_seed", "is_anomaly_enabled", "is_autocast_cache_enabled", "is_autocast_cpu_enabled", "is_autocast_enabled", "is_deterministic_algorithms_warn_only_enabled", "is_grad_enabled", "is_inference_mode_enabled", "is_storage", "is_tensor", "is_warn_always_enabled", "layout", "load", "lobpcg", "lu", "manual_seed", "memory_format", "merge_type_from_type_comment", "meshgrid", "no_grad", "norm", "parse_ir", "parse_schema", "parse_type_comment", "pca_lowrank", "prepare_multiprocessing_environment", "qscheme", "quantized_gru", "quantized_lstm", "read_vitals", "save", "seed", "set_anomaly_enabled", "set_autocast_cache_enabled", "set_autocast_cpu_dtype", "set_autocast_cpu_enabled", "set_autocast_enabled", "set_autocast_gpu_dtype", "set_default_dtype", "set_default_tensor_type", "set_deterministic_debug_mode", "set_flush_denormal", "set_grad_enabled", "set_num_interop_threads", "set_num_threads", "set_printoptions", "set_rng_state", "set_vital", "set_warn_always", "split", "stft", "svd_lowrank", "tensordot", "to_dlpack", "typename", "unify_type_list", "unique", "unique_consecutive", "use_deterministic_algorithms", "vitals_enabled", "vmap", "wait"]}
