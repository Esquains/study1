graph(%x : Float(*, *)
      %hx : Float(*, *)
      %cx : Float(*, *)
      %w_ih : Float(*, *)
      %w_hh : Float(*, *)
      %alpha : Float(*)
      %beta_i : Float(*)
      %beta_h : Float(*)
      %bias : Float(*)) {
  %hy : Float(*, *), %cy : Float(*, *) = prim::DifferentiableGraph_0(%cx, %bias, %beta_h, %beta_i, %alpha, %hx, %w_hh, %x, %w_ih)
  return (%hy, %cy);
}
with prim::DifferentiableGraph_0 = graph(%0 : Float(*, *)
      %1 : Float(*)
      %2 : Float(*)
      %3 : Float(*)
      %4 : Float(*)
      %5 : Float(*, *)
      %6 : Float(*, *)
      %7 : Float(*, *)
      %8 : Float(*, *)) {
  %9 : Float(*, *) = aten::t(%8)
  %Wx.1 : Float(*, *) = aten::mm(%7, %9)
  %11 : Float(*, *) = aten::t(%6)
  %Uz.1 : Float(*, *) = aten::mm(%5, %11)
  %13 : Float(*, *) = aten::mul(%4, %Wx.1)
  %14 : int = prim::Constant[value=1]()
  %15 : Dynamic[] = prim::ListConstruct(%1, %2, %Uz.1, %13, %Uz.1, %3, %Wx.1)
  %16 : Dynamic[] = aten::broadcast_tensors(%15)
  %17 : Dynamic, %18 : Dynamic, %19 : Dynamic, %20 : Dynamic, %21 : Dynamic, %22 : Dynamic, %23 : Dynamic = prim::ListUnpack(%16)
  %hy : Float(*, *), %25 : Float(*, *), %cy : Float(*, *), %outgate.1 : Float(*, *), %cellgate.1 : Float(*, *), %forgetgate.1 : Float(*, *), %ingate.1 : Float(*, *) = prim::FusionGroup_0(%0, %17, %18, %19, %20, %21, %22, %23)
  return (%hy, %cy, %9, %Wx.1, %11, %Uz.1, %13, %ingate.1, %forgetgate.1, %cellgate.1, %outgate.1, %25);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Dynamic
      %2 : Dynamic
      %3 : Dynamic
      %4 : Dynamic
      %5 : Dynamic
      %6 : Dynamic
      %7 : Dynamic) {
  %8 : Float(*, *), %9 : Float(*, *), %10 : Float(*, *), %11 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%7)
  %12 : Float(*, *), %13 : Float(*, *), %14 : Float(*, *), %15 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%6)
  %16 : Float(*, *), %17 : Float(*, *), %18 : Float(*, *), %19 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%5)
  %20 : Float(*, *), %21 : Float(*, *), %22 : Float(*, *), %23 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%4)
  %24 : Float(*, *), %25 : Float(*, *), %26 : Float(*, *), %27 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%3)
  %28 : Float(*, *), %29 : Float(*, *), %30 : Float(*, *), %31 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%2)
  %32 : Float(*, *), %33 : Float(*, *), %34 : Float(*, *), %35 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%1)
  %36 : Float(*, *) = aten::mul(%12, %8)
  %37 : Float(*, *) = aten::mul(%13, %9)
  %38 : Float(*, *) = aten::mul(%14, %10)
  %39 : Float(*, *) = aten::mul(%15, %11)
  %40 : Float(*, *) = aten::mul(%20, %16)
  %41 : Float(*, *) = aten::mul(%21, %17)
  %42 : Float(*, *) = aten::mul(%22, %18)
  %43 : Float(*, *) = aten::mul(%23, %19)
  %44 : Float(*, *) = aten::mul(%28, %24)
  %45 : Float(*, *) = aten::mul(%29, %25)
  %46 : Float(*, *) = aten::mul(%30, %26)
  %47 : Float(*, *) = aten::mul(%31, %27)
  %48 : int = prim::Constant[value=1]()
  %49 : Float(*, *) = aten::add(%40, %36, %48)
  %50 : int = prim::Constant[value=1]()
  %51 : Float(*, *) = aten::add(%41, %37, %50)
  %52 : int = prim::Constant[value=1]()
  %53 : Float(*, *) = aten::add(%42, %38, %52)
  %54 : int = prim::Constant[value=1]()
  %55 : Float(*, *) = aten::add(%43, %39, %54)
  %56 : int = prim::Constant[value=1]()
  %57 : Float(*, *) = aten::add(%49, %44, %56)
  %58 : int = prim::Constant[value=1]()
  %59 : Float(*, *) = aten::add(%51, %45, %58)
  %60 : int = prim::Constant[value=1]()
  %61 : Float(*, *) = aten::add(%53, %46, %60)
  %62 : int = prim::Constant[value=1]()
  %63 : Float(*, *) = aten::add(%55, %47, %62)
  %64 : int = prim::Constant[value=1]()
  %65 : Float(*, *) = aten::add(%57, %32, %64)
  %66 : int = prim::Constant[value=1]()
  %67 : Float(*, *) = aten::add(%59, %33, %66)
  %68 : int = prim::Constant[value=1]()
  %69 : Float(*, *) = aten::add(%61, %34, %68)
  %70 : int = prim::Constant[value=1]()
  %71 : Float(*, *) = aten::add(%63, %35, %70)
  %ingate.1 : Float(*, *) = aten::sigmoid(%65)
  %forgetgate.1 : Float(*, *) = aten::sigmoid(%67)
  %cellgate.1 : Float(*, *) = aten::tanh(%69)
  %outgate.1 : Float(*, *) = aten::sigmoid(%71)
  %76 : Float(*, *) = aten::mul(%forgetgate.1, %0)
  %77 : Float(*, *) = aten::mul(%ingate.1, %cellgate.1)
  %78 : int = prim::Constant[value=1]()
  %cy : Float(*, *) = aten::add(%76, %77, %78)
  %80 : Float(*, *) = aten::tanh(%cy)
  %hy : Float(*, *) = aten::mul(%outgate.1, %80)
  return (%hy, %80, %cy, %outgate.1, %cellgate.1, %forgetgate.1, %ingate.1);
}
