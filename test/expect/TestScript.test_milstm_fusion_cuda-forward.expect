graph(%x.1 : Float(3, 10)
      %hx.1 : Float(3, 20)
      %cx.1 : Float(3, 20)
      %w_ih : Float(80, 10)
      %w_hh : Float(80, 20)
      %alpha.1 : Float(80)
      %beta_i.1 : Float(80)
      %beta_h.1 : Float(80)
      %bias : Float(80)) {
  %9 : Float(10!, 80!) = aten::t(%w_ih)
  %Wx.1 : Float(3, 80) = aten::mm(%x.1, %9)
  %11 : Float(20!, 80!) = aten::t(%w_hh)
  %Uz.1 : Float(3, 80) = aten::mm(%hx.1, %11)
  %13 : Float(3, 80) = aten::mul(%alpha.1, %Wx.1)
  %14 : int[] = prim::Constant[value=[3, 80]]()
  %15 : int = prim::Constant[value=0]()
  %16 : Float(3!, 80) = aten::expand(%beta_i.1, %14, %15)
  %17 : int = prim::Constant[value=1]()
  %18 : Float(3!, 80) = aten::expand(%beta_h.1, %14, %15)
  %19 : Float(3!, 80) = aten::expand(%bias, %14, %15)
  %20 : int = prim::Constant[value=4]()
  %21 : Float(3!, 20), %22 : Float(3!, 20), %23 : Float(3!, 20), %24 : Float(3!, 20) = aten::chunk(%13, %20, %17)
  %25 : Float(3!, 20), %26 : Float(3!, 20), %27 : Float(3!, 20), %28 : Float(3!, 20) = aten::chunk(%Uz.1, %20, %17)
  %29 : Float(3!, 20), %30 : Float(3!, 20), %31 : Float(3!, 20), %32 : Float(3!, 20) = aten::chunk(%16, %20, %17)
  %33 : Float(3!, 20), %34 : Float(3!, 20), %35 : Float(3!, 20), %36 : Float(3!, 20) = aten::chunk(%Wx.1, %20, %17)
  %37 : Float(3!, 20), %38 : Float(3!, 20), %39 : Float(3!, 20), %40 : Float(3!, 20) = aten::chunk(%18, %20, %17)
  %41 : Float(3!, 20), %42 : Float(3!, 20), %43 : Float(3!, 20), %44 : Float(3!, 20) = aten::chunk(%19, %20, %17)
  %hy : Float(3, 20), %46 : Float(3, 20), %cy : Float(3, 20), %outgate.2 : Float(3, 20), %cellgate.2 : Float(3, 20), %forgetgate.2 : Float(3, 20), %ingate.2 : Float(3, 20) = prim::FusionGroup_0[device=0](%cx.1, %44, %43, %42, %41, %40, %28, %39, %27, %37, %25, %38, %26, %31, %35, %30, %34, %22, %26, %29, %33, %21, %25, %23, %27, %32, %36, %24, %28)
  return (%hy, %cy, %9, %Wx.1, %11, %Uz.1, %13, %ingate.2, %forgetgate.2, %cellgate.2, %outgate.2, %46);
}
with prim::FusionGroup_0 = graph(%13 : Float(3, 20)
      %24 : Float(3!, 20)
      %28 : Float(3!, 20)
      %32 : Float(3!, 20)
      %36 : Float(3!, 20)
      %59 : Float(3!, 20)
      %60 : Float(3!, 20)
      %66 : Float(3!, 20)
      %67 : Float(3!, 20)
      %69 : Float(3!, 20)
      %70 : Float(3!, 20)
      %76 : Float(3!, 20)
      %77 : Float(3!, 20)
      %83 : Float(3!, 20)
      %84 : Float(3!, 20)
      %86 : Float(3!, 20)
      %87 : Float(3!, 20)
      %89 : Float(3!, 20)
      %90 : Float(3!, 20)
      %92 : Float(3!, 20)
      %93 : Float(3!, 20)
      %95 : Float(3!, 20)
      %96 : Float(3!, 20)
      %98 : Float(3!, 20)
      %99 : Float(3!, 20)
      %101 : Float(3!, 20)
      %102 : Float(3!, 20)
      %104 : Float(3!, 20)
      %105 : Float(3!, 20)) {
  %106 : Float(3, 20) = aten::mul(%104, %105)
  %103 : Float(3, 20) = aten::mul(%101, %102)
  %100 : Float(3, 20) = aten::mul(%98, %99)
  %97 : Float(3, 20) = aten::mul(%95, %96)
  %94 : Float(3, 20) = aten::mul(%92, %93)
  %91 : Float(3, 20) = aten::mul(%89, %90)
  %88 : Float(3, 20) = aten::mul(%86, %87)
  %85 : Float(3, 20) = aten::mul(%83, %84)
  %81 : int = prim::Constant[value=1]()
  %82 : Float(3, 20) = aten::add(%91, %88, %81)
  %78 : Float(3, 20) = aten::mul(%76, %77)
  %74 : int = prim::Constant[value=1]()
  %75 : Float(3, 20) = aten::add(%97, %94, %74)
  %71 : Float(3, 20) = aten::mul(%69, %70)
  %68 : Float(3, 20) = aten::mul(%66, %67)
  %64 : int = prim::Constant[value=1]()
  %65 : Float(3, 20) = aten::add(%100, %85, %64)
  %61 : Float(3, 20) = aten::mul(%59, %60)
  %57 : int = prim::Constant[value=1]()
  %58 : Float(3, 20) = aten::add(%106, %103, %57)
  %53 : int = prim::Constant[value=1]()
  %54 : Float(3, 20) = aten::add(%75, %71, %53)
  %49 : int = prim::Constant[value=1]()
  %50 : Float(3, 20) = aten::add(%82, %78, %49)
  %45 : int = prim::Constant[value=1]()
  %46 : Float(3, 20) = aten::add(%65, %68, %45)
  %41 : int = prim::Constant[value=1]()
  %42 : Float(3, 20) = aten::add(%58, %61, %41)
  %37 : int = prim::Constant[value=1]()
  %38 : Float(3, 20) = aten::add(%54, %36, %37)
  %33 : int = prim::Constant[value=1]()
  %34 : Float(3, 20) = aten::add(%50, %32, %33)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(3, 20) = aten::add(%46, %28, %29)
  %25 : int = prim::Constant[value=1]()
  %26 : Float(3, 20) = aten::add(%42, %24, %25)
  %ingate.2 : Float(3, 20) = aten::sigmoid(%38)
  %forgetgate.2 : Float(3, 20) = aten::sigmoid(%34)
  %cellgate.2 : Float(3, 20) = aten::tanh(%30)
  %outgate.2 : Float(3, 20) = aten::sigmoid(%26)
  %14 : Float(3, 20) = aten::mul(%forgetgate.2, %13)
  %11 : Float(3, 20) = aten::mul(%ingate.2, %cellgate.2)
  %7 : int = prim::Constant[value=1]()
  %cy : Float(3, 20) = aten::add(%14, %11, %7)
  %4 : Float(3, 20) = aten::tanh(%cy)
  %hy : Float(3, 20) = aten::mul(%outgate.2, %4)
  return (%hy, %4, %cy, %outgate.2, %cellgate.2, %forgetgate.2, %ingate.2);
}
