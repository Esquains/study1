graph(%x : Dynamic
      %optional.1 : Dynamic) {
  %2 : int = prim::Constant[value=10]()
  %3 : int = prim::Constant[value=1]()
  %4 : Dynamic = prim::Undefined()
  %5 : Dynamic = aten::eq(%optional.1, %4)
  %6 : bool = prim::TensorToBool(%5)
  %optional : Dynamic = prim::If(%6)
    block0() {
      %8 : int[] = prim::ListConstruct(%3)
      %9 : int = prim::Constant[value=6]()
      %10 : int = prim::Constant[value=0]()
      %11 : int[] = prim::Constant[value=[0, -1]]()
      %12 : Dynamic = aten::ones(%8, %9, %10, %11)
      %13 : int = prim::Constant[value=1]()
      %optional.2 : Dynamic = aten::add(%12, %2, %13)
      -> (%optional.2)
    }
    block1() {
      -> (%optional.1)
    }
  %15 : int = prim::Constant[value=1]()
  %16 : Dynamic = aten::add(%x, %optional, %15)
  return (%16);
}
