graph(%s : Float(5, 2, 3)
      %x : Float(5, 6, 3)
      %y : Float(10, 2, 3)
      %z : Float(5, 2, 6)) {
  %4 : Float(5, 2, 3) = prim::FusionGroup_0[device=0](%s, %y, %x, %z)
  return (%4);
}
with prim::FusionGroup_0 = graph(%24 : Float(5, 2, 3)
      %28 : Float(10, 2, 3)
      %33 : Float(5, 6, 3)
      %39 : Float(5, 2, 6)) {
  %40 : int = prim::Constant[value=2]()
  %z1 : Float(5, 2!, 3), %z2 : Float(5, 2!, 3) = aten::chunk(%39, %40, %40)
  %34 : int = prim::Constant[value=3]()
  %35 : int = prim::Constant[value=1]()
  %x1 : Float(5!, 2, 3), %x2 : Float(5!, 2, 3), %x3 : Float(5!, 2, 3) = aten::chunk(%33, %34, %35)
  %29 : int = prim::Constant[value=2]()
  %30 : int = prim::Constant[value=0]()
  %y1 : Float(5, 2, 3), %y2 : Float(5, 2, 3) = aten::chunk(%28, %29, %30)
  %26 : int = prim::Constant[value=1]()
  %27 : Float(5, 2, 3) = aten::add(%24, %x1, %26)
  %22 : int = prim::Constant[value=1]()
  %23 : Float(5, 2, 3) = aten::add(%27, %x2, %22)
  %18 : int = prim::Constant[value=1]()
  %19 : Float(5, 2, 3) = aten::add(%23, %x3, %18)
  %14 : int = prim::Constant[value=1]()
  %15 : Float(5, 2, 3) = aten::add(%19, %y1, %14)
  %10 : int = prim::Constant[value=1]()
  %11 : Float(5, 2, 3) = aten::add(%15, %y2, %10)
  %6 : int = prim::Constant[value=1]()
  %7 : Float(5, 2, 3) = aten::add(%11, %z1, %6)
  %2 : int = prim::Constant[value=1]()
  %3 : Float(5, 2, 3) = aten::add(%7, %z2, %2)
  return (%3);
}
