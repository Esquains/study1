graph(%0 : Float(3, 20!)
      %1 : Float(3, 20!)
      %2 : Dynamic
      %3 : Dynamic
      %4 : Dynamic
      %5 : Dynamic
      %6 : Dynamic
      %7 : Dynamic
      %8 : Dynamic
      %9 : Dynamic
      %10 : Dynamic
      %11 : Dynamic
      %x : Float(3, 10)
      %hx : Float(3, 20)
      %cx : Float(3, 20)
      %alpha : Float(80)
      %beta_i : Float(80)
      %beta_h : Float(80)
      %18 : Float(10!, 80!)
      %Wx : Float(3, 80)
      %20 : Float(20!, 80!)
      %Uz : Float(3, 80)
      %22 : Float(3, 80)
      %ingate : Float(3, 20)
      %forgetgate : Float(3, 20)
      %cellgate : Float(3, 20)
      %outgate : Float(3, 20)
      %27 : Float(3, 20)) {
  %28 : int = prim::Constant[value=1]()
  %29 : Float(3, 20) = prim::FusionGroup_0[device=0](%1, %27, %0, %outgate)
  %30 : Float(3, 20) = aten::mul(%29, %28)
  %31 : Float(3, 80) = prim::FusionGroup_1[device=0](%ingate, %forgetgate, %cellgate, %outgate, %29, %cx, %30, %0, %27)
  %32 : Float(3, 80) = aten::mul(%31, %28)
  %33 : Float(3, 80) = aten::mul(%32, %Uz)
  %34 : Float(3, 80) = aten::mul(%32, %beta_h)
  %35 : Float(3, 80) = aten::mul(%32, %Wx)
  %36 : Float(3, 80) = aten::mul(%32, %beta_i)
  %37 : Float(3, 80) = prim::FusionGroup_2[device=0](%34, %31, %22)
  %38 : Float(3, 80), %39 : Float(3, 80) = prim::FusionGroup_3[device=0](%Wx, %31, %Uz)
  %40 : Float(3, 80) = aten::mul(%39, %alpha)
  %41 : Float(3, 80) = aten::add(%36, %40, %28)
  %42 : Float(80!, 3!) = aten::t(%37)
  %43 : Float(80, 20) = aten::mm(%42, %hx)
  %44 : Float(80!, 3!) = aten::t(%41)
  %45 : Float(80, 10) = aten::mm(%44, %x)
  return (%45, %43, %38, %35, %33, %32);
}
with prim::FusionGroup_0 = graph(%0 : Float(3, 20!)
      %12 : Float(3, 20)
      %14 : Float(3, 20!)
      %15 : Float(3, 20)) {
  %16 : Float(3, 20) = aten::mul(%14, %15)
  %13 : Float(3, 20) = aten::mul(%12, %12)
  %11 : Float(3, 20) = aten::neg(%13)
  %8 : int = prim::Constant[value=1]()
  %9 : Float(3, 20) = aten::add(%11, %8, %8)
  %6 : Float(3, 20) = aten::mul(%16, %9)
  %2 : int = prim::Constant[value=1]()
  %3 : Float(3, 20) = aten::add(%0, %6, %2)
  return (%3);
}
with prim::FusionGroup_1 = graph(%9 : Float(3, 20)
      %19 : Float(3, 20)
      %33 : Float(3, 20)
      %39 : Float(3, 20)
      %45 : Float(3, 20)
      %46 : Float(3, 20)
      %48 : Float(3, 20)
      %51 : Float(3, 20!)
      %52 : Float(3, 20)) {
  %53 : Float(3, 20) = aten::mul(%51, %52)
  %50 : Float(3, 20) = aten::mul(%48, %33)
  %49 : Float(3, 20) = aten::mul(%48, %9)
  %47 : Float(3, 20) = aten::mul(%45, %46)
  %44 : Float(3, 20) = aten::neg(%39)
  %42 : int = prim::Constant[value=1]()
  %43 : Float(3, 20) = aten::add(%44, %42, %42)
  %40 : Float(3, 20) = aten::mul(%53, %39)
  %37 : Float(3, 20) = aten::mul(%40, %43)
  %34 : Float(3, 20) = aten::mul(%33, %33)
  %32 : Float(3, 20) = aten::neg(%34)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(3, 20) = aten::add(%32, %29, %29)
  %27 : Float(3, 20) = aten::mul(%49, %30)
  %24 : Float(3, 20) = aten::neg(%19)
  %22 : int = prim::Constant[value=1]()
  %23 : Float(3, 20) = aten::add(%24, %22, %22)
  %20 : Float(3, 20) = aten::mul(%47, %19)
  %17 : Float(3, 20) = aten::mul(%20, %23)
  %14 : Float(3, 20) = aten::neg(%9)
  %12 : int = prim::Constant[value=1]()
  %13 : Float(3, 20) = aten::add(%14, %12, %12)
  %10 : Float(3, 20) = aten::mul(%50, %9)
  %7 : Float(3, 20) = aten::mul(%10, %13)
  %4 : Float(3, 80) = prim::FusedConcat[dim=1](%7, %17, %27, %37)
  return (%4);
}
with prim::FusionGroup_2 = graph(%0 : Float(3, 80)
      %4 : Float(3, 80)
      %5 : Float(3, 80)) {
  %6 : Float(3, 80) = aten::mul(%4, %5)
  %2 : int = prim::Constant[value=1]()
  %3 : Float(3, 80) = aten::add(%0, %6, %2)
  return (%3);
}
with prim::FusionGroup_3 = graph(%1 : Float(3, 80)
      %3 : Float(3, 80)
      %4 : Float(3, 80)) {
  %5 : Float(3, 80) = aten::mul(%3, %4)
  %2 : Float(3, 80) = aten::mul(%5, %1)
  return (%2, %5);
}
