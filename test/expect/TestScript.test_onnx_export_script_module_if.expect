producer_name: "pytorch"
producer_version: "0.3"
graph {
  node {
    input: "x.1"
    output: "1"
    op_type: "ReduceSum"
    attribute {
      name: "keepdims"
      i: 0
      type: INT
    }
    doc_string: "@torch.jit.script_method\ndef forward(self, x):\n    if torch.sum(x) > 0:\n       ~~~~~~~~~ <--- HERE\n        x = torch.neg(x)\n    return x\n"
  }
  node {
    output: "2"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: INT64
        raw_data: "\000\000\000\000\000\000\000\000"
      }
      type: TENSOR
    }
    doc_string: "@torch.jit.script_method\ndef forward(self, x):\n    if torch.sum(x) > 0:\n                      ~ <--- HERE\n        x = torch.neg(x)\n    return x\n"
  }
  node {
    input: "1"
    input: "2"
    output: "3"
    op_type: "Greater"
    doc_string: "@torch.jit.script_method\ndef forward(self, x):\n    if torch.sum(x) > 0:\n       ~~~~~~~~~~~~~~~~ <--- HERE\n        x = torch.neg(x)\n    return x\n"
  }
  node {
    input: "3"
    output: "4"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          input: "x.1"
          output: "5"
          op_type: "Neg"
          doc_string: "@torch.jit.script_method\ndef forward(self, x):\n    if torch.sum(x) > 0:\n        x = torch.neg(x)\n            ~~~~~~~~~ <--- HERE\n    return x\n"
        }
        name: "torch-jit-export1"
        output {
          name: "5"
          type {
            tensor_type {
              shape {
              }
            }
          }
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        name: "torch-jit-export2"
        output {
          name: "x.1"
          type {
            tensor_type {
              elem_type: DOUBLE
              shape {
                dim {
                  dim_value: 1
                }
                dim {
                  dim_value: 2
                }
                dim {
                  dim_value: 3
                }
              }
            }
          }
        }
      }
      type: GRAPH
    }
    doc_string: "@torch.jit.script_method\ndef forward(self, x):\n    if torch.sum(x) > 0:\n    ~~~~~~~~~~~~~~~~~~~~...  <--- HERE\n        x = torch.neg(x)\n    return x\n"
  }
  name: "torch-jit-export"
  input {
    name: "x.1"
    type {
      tensor_type {
        elem_type: DOUBLE
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  output {
    name: "4"
    type {
      tensor_type {
        elem_type: INT64
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
}
opset_import {
  version: 6
}
