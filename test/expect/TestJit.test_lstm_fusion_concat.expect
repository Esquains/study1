graph(%0 : Float(3, 10)
      %1 : Float(3, 20)
      %2 : Float(3, 20)
      %3 : Float(80, 10)
      %4 : Float(80, 20)
      %5 : Float(80)
      %6 : Float(80)) {
  %7 : Float(10!, 80!) = aten::t(%3)
  %8 : int = prim::Constant[value=1]()
  %9 : Float(3, 80) = aten::addmm(%5, %0, %7, %8, %8)
  %10 : Float(20!, 80!) = aten::t(%4)
  %11 : Float(3, 80) = aten::addmm(%6, %1, %10, %8, %8)
  %12 : Float(6, 20) = prim::FusionGroup_0[device=0](%2, %9, %11)
  return (%12);
}
with prim::FusionGroup_0 = graph(%15 : Float(3, 20)
      %41 : Float(3, 80)
      %48 : Float(3, 80)) {
  %49 : int = prim::Constant[value=4]()
  %50 : int = prim::Constant[value=1]()
  %51 : Float(3!, 20), %52 : Float(3!, 20), %53 : Float(3!, 20), %54 : Float(3!, 20) = aten::chunk(%48, %49, %50)
  %42 : int = prim::Constant[value=4]()
  %43 : int = prim::Constant[value=1]()
  %44 : Float(3!, 20), %45 : Float(3!, 20), %46 : Float(3!, 20), %47 : Float(3!, 20) = aten::chunk(%41, %42, %43)
  %39 : int = prim::Constant[value=1]()
  %40 : Float(3, 20) = aten::add(%44, %51, %39)
  %35 : int = prim::Constant[value=1]()
  %36 : Float(3, 20) = aten::add(%45, %52, %35)
  %31 : int = prim::Constant[value=1]()
  %32 : Float(3, 20) = aten::add(%46, %53, %31)
  %27 : int = prim::Constant[value=1]()
  %28 : Float(3, 20) = aten::add(%47, %54, %27)
  %24 : Float(3, 20) = aten::sigmoid(%40)
  %22 : Float(3, 20) = aten::sigmoid(%36)
  %20 : Float(3, 20) = aten::tanh(%32)
  %18 : Float(3, 20) = aten::sigmoid(%28)
  %16 : Float(3, 20) = aten::mul(%22, %15)
  %13 : Float(3, 20) = aten::mul(%24, %20)
  %9 : int = prim::Constant[value=1]()
  %10 : Float(3, 20) = aten::add(%16, %13, %9)
  %6 : Float(3, 20) = aten::tanh(%10)
  %5 : Float(3, 20) = aten::mul(%18, %6)
  %2 : Float(6, 20) = prim::FusedConcat[dim=0](%5, %10)
  return (%2);
}
