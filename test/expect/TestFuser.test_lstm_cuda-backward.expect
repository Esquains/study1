graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : UndefinedTensor
      %3 : UndefinedTensor
      %4 : UndefinedTensor
      %5 : UndefinedTensor
      %6 : UndefinedTensor
      %7 : UndefinedTensor
      %8 : UndefinedTensor
      %9 : Float(*, *)
      %10 : Float(*, *)
      %11 : Float(*, *)
      %12 : Float(*, *)
      %13 : Float(*, *)
      %14 : int[]
      %15 : int[]
      %16 : int[]
      %17 : int[]
      %18 : int[]
      %19 : int[]
      %ingate : Float(*, *)
      %forgetgate : Float(*, *)
      %cellgate : Float(*, *)
      %outgate : Float(*, *)
      %24 : int[]
      %25 : int[]
      %26 : Float(*, *)) {
  %27 : Float(*, *) = aten::mul(%0, %26)
  %28 : Tensor = aten::reduce_as(%27, %outgate)
  %29 : Float(*, *) = aten::mul(%0, %outgate)
  %30 : Tensor = aten::reduce_as(%29, %26)
  %31 : Tensor = prim::FusionGroup_0(%1, %30, %26)
  %32 : Tensor = prim::SumToSize(%31, %24)
  %33 : Tensor = prim::SumToSize(%31, %25)
  %34 : Tensor = aten::mul(%33, %cellgate)
  %35 : Tensor = aten::reduce_as(%34, %ingate)
  %36 : Tensor = aten::mul(%33, %ingate)
  %37 : Tensor = aten::reduce_as(%36, %cellgate)
  %38 : Tensor = aten::mul(%32, %9)
  %39 : Tensor = aten::reduce_as(%38, %forgetgate)
  %40 : Tensor = aten::mul(%32, %forgetgate)
  %41 : Tensor = aten::reduce_as(%40, %9)
  %42 : Tensor = prim::FusionGroup_1(%35, %ingate, %39, %forgetgate, %37, %cellgate, %28, %outgate)
  %43 : Tensor = prim::SumToSize(%42, %19)
  %44 : Tensor = prim::SumToSize(%42, %17)
  %45 : Tensor = prim::SumToSize(%42, %14)
  %46 : Tensor = prim::SumToSize(%42, %15)
  %47 : Float(*, *) = aten::t(%13)
  %48 : Float(*, *) = aten::mm(%46, %47)
  %49 : Float(*, *) = aten::t(%10)
  %50 : Float(*, *) = aten::mm(%49, %46)
  %51 : Float(*, *) = aten::t(%50)
  %52 : Float(*, *) = aten::t(%12)
  %53 : Float(*, *) = aten::mm(%45, %52)
  %54 : Float(*, *) = aten::t(%11)
  %55 : Float(*, *) = aten::mm(%54, %45)
  %56 : Float(*, *) = aten::t(%55)
  return (%41, %43, %44, %48, %51, %53, %56);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Tensor
      %2 : Float(*, *)) {
  %3 : Float(*, *) = aten::mul(%2, %2)
  %4 : Float(*, *) = aten::neg(%3)
  %5 : int = prim::Constant[value=1]()
  %6 : Float(*, *) = aten::add(%4, %5, %5)
  %7 : Tensor = aten::mul(%1, %6)
  %8 : int = prim::Constant[value=1]()
  %9 : Tensor = aten::add(%0, %7, %8)
  return (%9);
}
with prim::FusionGroup_1 = graph(%0 : Tensor
      %1 : Float(*, *)
      %2 : Tensor
      %3 : Float(*, *)
      %4 : Tensor
      %5 : Float(*, *)
      %6 : Tensor
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::neg(%7)
  %9 : int = prim::Constant[value=1]()
  %10 : Float(*, *) = aten::add(%8, %9, %9)
  %11 : Float(*, *) = aten::mul(%10, %7)
  %12 : Tensor = aten::mul(%11, %6)
  %13 : Float(*, *) = aten::mul(%5, %5)
  %14 : Float(*, *) = aten::neg(%13)
  %15 : int = prim::Constant[value=1]()
  %16 : Float(*, *) = aten::add(%14, %15, %15)
  %17 : Tensor = aten::mul(%4, %16)
  %18 : Float(*, *) = aten::neg(%3)
  %19 : int = prim::Constant[value=1]()
  %20 : Float(*, *) = aten::add(%18, %19, %19)
  %21 : Float(*, *) = aten::mul(%20, %3)
  %22 : Tensor = aten::mul(%21, %2)
  %23 : Float(*, *) = aten::neg(%1)
  %24 : int = prim::Constant[value=1]()
  %25 : Float(*, *) = aten::add(%23, %24, %24)
  %26 : Float(*, *) = aten::mul(%25, %1)
  %27 : Tensor = aten::mul(%26, %0)
  %28 : Tensor = prim::FusedConcat[dim=1](%27, %22, %17, %12)
  return (%28);
}
