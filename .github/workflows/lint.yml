name: Lint

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test_boto3:
    if: always()
    runs-on: linux.2xlarge
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Unzip test reports
        run: |
          # Should preserve paths so reports should still be in test/test-reports
          unzip -o 'test-reports-*.zip'
      - name: Install dependencies
        # boto3 version copied from .circleci/docker/common/install_conda.sh
        run: |
          pip3 install -r requirements.txt
          pip3 install boto3==1.16.34 junitparser rich
      - name: Test boto3 connection
        run: |
          python3 sribe.py
      - name: Output Test Results (Click Me)
        run: |
          python3 tools/render_junit.py test
      - name: Parse ref
        id: parse-ref
        run: .github/scripts/parse_ref.py
      - name: Display and upload test statistics (Click Me)
        # temporary hack: set CIRCLE_* vars, until we update
        # tools/stats/print_test_stats.py to natively support GitHub Actions
        env:
          SCRIBE_GRAPHQL_ACCESS_TOKEN: ${{ secrets.SCRIBE_GRAPHQL_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_OSSCI_METRICS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_OSSCI_METRICS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          CIRCLE_BRANCH: ${{ steps.parse-ref.outputs.branch }}
          JOB_BASE_NAME: pytorch-linux-xenial-py3.6-gcc5.4-test
          CIRCLE_PR_NUMBER: ${{ github.event.pull_request.number }}
          CIRCLE_SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
          CIRCLE_TAG: ${{ steps.parse-ref.outputs.tag }}
          CIRCLE_WORKFLOW_ID: '${{ github.run_id }}_${{ github.run_number }}'
        run: |
          python3 -m tools.stats.print_test_stats test

concurrency:
  group: lint-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
