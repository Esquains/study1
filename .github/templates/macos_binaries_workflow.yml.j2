{% import 'common.yml.j2' as common %}

{%- block name -%}
# Template is at:    .github/templates/macos_binary_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: !{{ build_environment }}
{%- endblock %}

on:
  pull_request:
    types: [opened, synchronize, reopened, !{{ ciflow_config.trigger_action }}]

  push:
    branches:
      - nightly
  workflow_dispatch:

# For setup-miniconda, see https://github.com/conda-incubator/setup-miniconda/issues/179
defaults:
  run:
    shell: bash -e -l {0}
env:
  BUILD_ENVIRONMENT: !{{ build_environment }}
  COMPACT_JOB_NAME: !{{ build_environment }}
  IN_CI: 1
  IS_GHA: 1
  PYTORCH_RETRY_TEST_CASES: 1
!{{ common.set_xcode_version(xcode_version) }}

jobs:
!{{ common.ciflow_should_run_job(ciflow_config) }}
{% block build +%}
  build:
    runs-on: !{{ test_runner_type }}
    needs: [!{{ ciflow_config.root_job_name }}]
    env:
      JOB_BASE_NAME: !{{ build_environment }}
    steps:
      !{{ common.checkout_pytorch("recursive") }}
      !{{ common.setup_miniconda("3.8") }}
      - name: Checkout pytorch/builder repo
        run: |
          # Install dependencies
          .circleci/scripts/binary_checkout.sh
      - name: Install macOS homebrew dependencies
        run: |
          # Install dependencies
          brew install libomp
      - name: Build
        run: |
          echo "CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname "$(which conda)")/../"}" >> "${GITHUB_ENV}"
          .circleci/scripts/binary_macos_build.sh
{%- if build_generates_artifacts %}
      - name: Archive artifacts into zip
        run: |
          zip -1 -r artifacts.zip dist/
      - uses: actions/upload-artifact@v2
        name: Store PyTorch Build Artifacts on GHA
        with:
          name: ${{ env.BUILD_ENVIRONMENT }}
          retention-days: 14
          if-no-files-found: error
          path:
            artifacts.zip
{%- endif %}
{% endblock +%}

!{{ common.concurrency(build_environment) }}
